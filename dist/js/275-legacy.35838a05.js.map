{"version":3,"file":"js/275-legacy.35838a05.js","mappings":"gJAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,0BAA0B,CAACN,EAAIO,GAAG,GAAIP,EAAS,MAAEI,EAAG,OAAO,CAACE,YAAY,wBAAwB,CAACN,EAAIQ,GAAGR,EAAIS,GAAGT,EAAIU,UAAUV,EAAIW,MAAM,EACzPC,EAAkB,CAAC,WAAa,IAAIZ,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,mBAAmB,CAACF,EAAG,OAAO,CAACE,YAAY,sBAAsBO,MAAM,CAAC,yBAAyB,WAAW,G,kECsB5O,GACAC,KAAAA,WACAC,OAAAA,CAAAA,EAAAA,GACAC,KAAAA,WACA,OACAC,SAAAA,EAEA,EACAC,MAAAA,CAAAA,QAAAA,SACAC,WAAAA,CAAAA,EAEAC,QAAAA,CACAC,WADA,WAEA,6BACA,sEACA,kCACA,iBAEA,EAEAC,SATA,WAUA,mBACA,EAEAC,SAbA,SAaAC,GACA,eACA,EACAC,EAAAA,EAAAA,IAAAA,KAAAA,QAAAA,0BAEAA,EAAAA,EAAAA,OAAAA,KAAAA,QAAAA,yBAEA,EAEAC,SAtBA,SAsBAC,GACA,YACA,EAEAC,SA1BA,SA0BAC,GACA,kBACA,6BACA,iCACA,+BACA,GAEAC,MAAAA,CACAN,MADA,SACAO,GACA,gBACA,GAEAC,QAjDA,WAkDA,kCACA,GC1EoQ,I,UCQhQC,GAAY,OACd,EACAlC,EACAa,GACA,EACA,KACA,KACA,MAIF,EAAeqB,EAAiB,O,4DCnB5B,EAAQ,E,qNCARlC,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAIK,MAAMD,GAAO,OAAOJ,EAAIO,GAAG,EAAE,EACrGK,EAAkB,CAAC,WAAa,IAAIZ,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,0BAA0B,CAACF,EAAG,MAAM,CAACE,YAAY,8BAA8BO,MAAM,CAAC,KAAO,SAAS,yBAAyB,WAAW,CAACT,EAAG,OAAO,CAACE,YAAY,sCAAsCO,MAAM,CAAC,yBAAyB,aAAaT,EAAG,MAAM,CAACE,YAAY,wBAAwBO,MAAM,CAAC,yBAAyB,UAAU,CAACT,EAAG,MAAM,CAACE,YAAY,4BAA4BO,MAAM,CAAC,yBAAyB,aAAa,G,WCkB7iB,GACAC,KAAAA,kBACAC,OAAAA,CAAAA,EAAAA,GACAC,KAAAA,WACA,OACAQ,OAAAA,EACAU,YAAAA,EACAC,aAAAA,EACAC,gBAAAA,EACAC,QAAAA,4BACAC,SAAAA,iCACAC,QAAAA,EAEA,EACApB,WAAAA,CAAAA,EACAC,QAAAA,CACAC,WAAAA,WACA,aACA,yEACA,EAEAmB,eANA,SAMAX,GACA,kBACA,YACAJ,EAAAA,EAAAA,OAAAA,KAAAA,QAAAA,KAAAA,SAEAA,EAAAA,EAAAA,IAAAA,KAAAA,QAAAA,KAAAA,SAEA,wBACA,EAEAgB,WAhBA,SAgBAC,GACA,aAEA,IADA,WACA,oBACA,WACA,8BAEA,GADAjB,EAAAA,EAAAA,IAAAA,EAAAA,kCACA,iCAEA,GADA,mBACA,QACA,qCAEAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,MACAkB,EAAAA,YAAAA,EACA,CACA,YACA,kCACAlB,EAAAA,EAAAA,IAAAA,EAAAA,KAAAA,UACAmB,EAAAA,UAAAA,EAAAA,MACAD,EAAAA,YAAAA,EACA,CACA,aACAE,EAAAA,EAAAA,OAEA,OACAF,EAAAA,KAAAA,EAAAA,KACA,WACA,0CAEA,kEAGA,oBACA,MACAA,EAAAA,UAAAA,EACA,eACA,+DAEA,wBACA,CACA,gBACA,GACA,gBAEA,EAEAf,SA9DA,SA8DAJ,EAAAK,GACA,kBACA,uBACA,GAEAG,QAlFA,WAmFA,GCtG2Q,I,UCOvQC,GAAY,OACd,EACAlC,EACAa,GACA,EACA,KACA,KACA,MAIF,EAAeqB,EAAiB,QCF5Ba,EAAO,CAAC,EACRC,EAAc,CAAC,EACnB,GACAjC,KAAAA,OACAC,OAAAA,CAAAA,EAAAA,EAAAA,EAAAA,GACAC,KAAAA,WACA,OACAgC,YAAAA,CACAC,YAAAA,QACAC,aAAAA,OACAC,YAAAA,QACAC,aAAAA,SACAC,aAAAA,SACAC,cAAAA,eACAC,eAAAA,kBACAC,gBAAAA,wBACAC,oBAAAA,wBACAC,aAAAA,gBACAC,cAAAA,UACAC,cAAAA,WAEAC,cAAAA,CACAC,UAAAA,aACAC,WAAAA,cACAC,QAAAA,WACAC,UAAAA,cAGA,EACA9C,WAAAA,CAAAA,EACAC,QAAAA,CAEA8C,SAAAA,WACA,sBACA,EAEAC,YAAAA,SAAAA,GACAC,EAAAA,MAAAA,SAAAA,EAAAA,GACA,oBACA,IAGA,IAFA,WACA,IACA,oBACA,WACA,yBACAC,EAAAA,EAAAA,QAGA,qCACA,sCACA,IACAC,EAAAA,QAAAA,MAAAA,EAAAA,KAAAA,IACA,IACAA,EAAAA,QAAAA,MAAAA,EAAAA,EAAAA,GAEAA,EAAAA,QAAAA,MAAAA,EAAAA,KAAAA,IACA,IACAA,EAAAA,QAAAA,MAAAA,EAAAA,EAAAA,GAEAC,KAGA,kCACA,IACAD,EAAAA,QAAAA,IAAAA,EAAAA,KAAAA,IACA,IACAA,EAAAA,QAAAA,IAAAA,EAAAA,EAAAA,GAEAA,EAAAA,QAAAA,IAAAA,EAAAA,KAAAA,IACA,IACAA,EAAAA,QAAAA,IAAAA,EAAAA,EAAAA,GAEAC,KAGA,kBACAD,EAAAA,EAAAA,EAAAA,QAAAA,MAAAA,EACAA,EAAAA,EAAAA,EAAAA,QAAAA,MAAAA,KAGA,eACAE,QAAAA,KAAAA,mDAEA,CACA,GACAA,QAAAA,MAAAA,uCAAAA,EAEA,EAKAC,sBA9DA,SA8DAC,EAAAC,EAAAC,GACA,6BACA,EAMAC,UAAAA,SAAAA,EAAAA,GACA,SACA,KAGA,yBAEA,IACA,UACAC,GAAAA,GAGA,QACA,UACAC,GAAAA,GAcA,IAXA,0BACA,sBACA,cACA,4BAEA,cACA,4BAIA,KACA,oBACA,WACA,qBACAC,EAAAA,GAAAA,CACAC,EAAAA,EAAAA,EAAAA,EAAAA,EACAC,EAAAA,EAAAA,EAAAA,EAAAA,EACAC,IAAAA,EAEA,CAIA,IADA,QACA,YACA,oBACA,eAEA,IADA,aACA,oBACAC,EAAAA,EAAAA,GACA,WAEA,GACAC,EAAAA,EAAAA,EACAC,EAAAA,EAAAA,EACAL,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EACAC,EAAAA,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EACAK,EAAAA,EAAAA,IAAAA,EACAC,MAAAA,EACAC,SAAAA,GAEAC,EAAAA,KAAAA,EACA,CAIA,OACAL,EAAAA,EAAAA,EACAC,EAAAA,EAAAA,EACAL,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EACAC,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,GAAAA,EACAK,EAAAA,EACAE,SAAAA,GAEAE,EAAAA,KAAAA,GACAC,GACA,CAGA,OACAD,SAAAA,EACAE,OAAAA,EAEA,EAUAC,6BAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GACA,+CACA,EAEAC,mBAnKA,SAmKArD,EAAAsD,GAEA,OADAxB,QAAAA,MAAAA,gDACA,2BACA,EAGAyB,4BAAAA,SAAAA,EAAAA,GACA,SAEA,eAIA,IAHA,8BACA,aAEA,oBACA,WAEA,YACA,4BACA,SACA,iBACAP,EAAAA,KAAAA,CACAQ,EAAAA,EACAhB,EAAAA,EAAAA,EACAG,EAAAA,GAGA,CACA,CACAK,EAAAA,MAAAA,SAAAA,EAAAA,GACA,cACA,GACA,CAEA,QACA,EAEAS,gBAAAA,SAAAA,GACA,SACA,sBAEA,CAEA,EAEAC,mBAAAA,SAAAA,GACA,uBAIA,iBACA,gBAEA,gBAGA,iCACA,cAEA,kBACA,QACA,UAEA,YAIA,eACA,OAIA,iBACA,SAGA,cACA,OAGA,eACA,aAGA,mBACA,cAEA,QACA,EAEAC,gBAAAA,SAAAA,GACA,6BACA,sBAEA,CACA,EAEAC,cAnQA,SAmQA5B,GACA,2BACA,oBAEA,CACA,EAEA6B,cA1QA,SA0QAC,GAAA,8DACA,sDACA,iCAIA,OAHA,iBACA1F,EAAAA,EAAAA,UAAAA,EAAAA,IAAAA,OAEA,CACA,CACA,QACA,EAGA2F,cAAAA,SAAAA,GACA,yDACA,2BAEA,CACA,EAKAC,aAAAA,SAAAA,EAAAA,GAEA,IADA,SACA,oBACA,WACA,YACAC,EAAAA,EAAAA,YAAAA,EAEA,CAIA,IAFA,SACA,WACA,aACA,WACA,cACAC,EAAAA,KAAAA,EAEA,CAEA,QACA,EAKAC,gBAxTA,SAwTAC,GACAC,EAAAA,EAAAA,MAAAA,0BACA,4BACA,cACA,cACA,eACA,kBACA,sBACA,eACA,gBACA,iBACA,gBACA,kBAGA,OADAA,EAAAA,EAAAA,IAAAA,0BACA,CACA,EAKAC,eAAAA,SAAAA,GACA,6BACA,cACA,cACA,gBAEA,EAEAC,iBAAAA,SAAAA,EAAAA,EAAAA,GACA,OACAvC,KAAAA,QACA5D,KAAAA,EACAmE,EAAAA,EACAC,EAAAA,EACAG,EAAAA,IACAC,EAAAA,IACAC,EAAAA,EACArE,MAAAA,CAAAA,EACAgG,IAAAA,CACAC,SAAAA,EACAC,iBAAAA,EACAC,QAAAA,GAEAC,QAAAA,CAAAA,EACAC,MAAAA,CACAC,qBAAAA,EACAC,oBAAAA,EACAC,wBAAAA,EACAC,uBAAAA,EACAC,eAAAA,EACAC,kBAAAA,EACAC,iBAAAA,EACAC,gBAAAA,EACAC,eAAAA,UACAC,kBAAAA,UACAC,iBAAAA,UACAC,gBAAAA,UACAf,gBAAAA,MAGA,EAEAgB,kBAAAA,SAAAA,EAAAA,EAAAA,GACA,OACAnD,EAAAA,EACAC,EAAAA,EACAI,EAAAA,KAAAA,MAAAA,WAAAA,EACAD,EAAAA,KAAAA,MAAAA,WAAAA,EACAvE,KAAAA,EACA4D,KAAAA,SACA6C,MAAAA,CACAc,WAAAA,WAEAC,IAAAA,CACAjD,EAAAA,KAAAA,MAAAA,WAAAA,EACAC,EAAAA,KAAAA,MAAAA,WAAAA,GAEA4B,IAAAA,CACAqB,OAAAA,GAEArH,MAAAA,CACAsH,OAAAA,GAEAC,SAAAA,GAEA,EAEAC,eAhZA,SAgZAC,GACA,2BACA,yBACA,OACA,yBAGA,EAEAC,UAAAA,WACA,+BACA,2CACA,kBAEA,cACA,EAMAC,KAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GACA,IACAC,EAAAA,KAGA,IACAC,EAAAA,KAAAA,iBAGA,mBAUA,OATAF,EAAAA,MAAAA,GACAA,EAAAA,KAAAA,EACAA,EAAAA,MAAAA,KAAAA,gBACAA,EAAAA,gBAAAA,EACAA,EAAAA,SAAAA,GACAA,EAAAA,SAAAA,GACAA,EAAAA,MAAAA,GACAA,EAAAA,QAAAA,GAEA,CACA,EAEAG,YAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GACA,mBACA,4CACAC,EAAAA,IAAAA,gBAAAA,GAAAA,MAAAA,GACAA,EAAAA,IAAAA,iBAAAA,EAAAA,KAAAA,MAAAA,GACAA,EAAAA,IAAAA,oBAAAA,OAAAA,GAAAA,MAAAA,EAGA,EAEAC,MAAAA,WAIA,OAHA,kBACA,yBAEA,eACA,EAEAC,SAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GACA,iCAEA,gCACA1H,EAAAA,EAAAA,IAAAA,EAAAA,OACA2H,EAAAA,YAAAA,GAEA,oCACA3H,EAAAA,EAAAA,IAAAA,EAAAA,YACA4H,EAAAA,YAAAA,GAEA,qCACAzG,EAAAA,UAAAA,EACA0G,EAAAA,YAAAA,GAEAA,EAAAA,SAAAA,cAAAA,OACA7H,EAAAA,EAAAA,IAAAA,EAAAA,YACA4H,EAAAA,YAAAA,GAEA,mBAKA,OAJAE,EAAAA,MAAAA,KAAAA,eACAA,EAAAA,QAAAA,GACAA,EAAAA,SAAAA,GAEA,CACA,EAGAC,YAAAA,SAAAA,EAAAA,EAAAA,GAGA,IAFA,mBAEA,oBACA,WAEA,mBACAP,EAAAA,IAAAA,iCAAAA,EAAAA,OAAAA,MAAAA,GACA,yBACAxH,EAAAA,EAAAA,IAAAA,EAAAA,6BACA,mBACA8H,EAAAA,MAAAA,KAAAA,eACAA,EAAAA,QAAAA,GACAA,EAAAA,SAAAA,EAAAA,GAEA,QAGA,GACAA,EAAAA,SAAAA,GAHAA,EAAAA,SAAAA,EAAAA,EAMA,CACA,EAEAE,iBAAAA,SAAAA,EAAAA,EAAAA,GAQA,IAPA,mBAEA,IACAC,MAAA,yBACAC,QACAC,MAAAP,GAEA,oBACA,WAEA,kBACAJ,EAAAA,GAAAA,4BAAAA,EAAAA,OAAAA,MAAAA,GACA,wBACA,WAQA,GACAA,EAAAA,KAAAA,oBAAAA,GAAAA,MAAAA,OATA,CACAxH,EAAAA,EAAAA,IAAAA,EAAAA,6BACA,mBACA8H,EAAAA,OAAAA,EACAA,EAAAA,QAAAA,GACAA,EAAAA,SAAAA,EAAAA,GACAA,EAAAA,SAAAA,EAAAA,EACA,CAKA,CACA,EAEAM,gBAAAA,SAAAA,EAAAA,GACA,oCAIA,GAHApI,EAAAA,EAAAA,IAAAA,EAAAA,qBACAqI,EAAAA,YAAAA,GAEA,mBAKA,YACArI,EAAAA,EAAAA,IAAAA,EAAAA,0BAEA,oCACAsI,EAAAA,IAAAA,cAAAA,EAAAA,GAAAA,WAAAA,EAAAA,KAAAA,IAAAA,EAAAA,SAAAA,IAAAA,EAAAA,MACAtI,EAAAA,EAAAA,IAAAA,EAAAA,iBACAuI,EAAAA,YAAAA,EACA,MACA,oCACAvI,EAAAA,EAAAA,IAAAA,EAAAA,qBACA,qCACAsI,EAAAA,YAAAA,GACAtI,EAAAA,EAAAA,IAAAA,EAAAA,8BACAwI,EAAAA,UAAAA,KAAAA,cAAAA,GACAD,EAAAA,YAAAA,EACA,KApBA,CACA,oCACAvI,EAAAA,EAAAA,IAAAA,EAAAA,oBACAsI,EAAAA,UAAAA,wCACAC,EAAAA,YAAAA,EACA,CAiBA,QACA,EAEAE,mBAAAA,SAAAA,GACA,4CACA,yBAEA,OACA,EAEAC,cAAAA,SAAAA,GACA,SACA,UACAzE,GAAAA,EAAAA,KAAAA,UAAAA,EAAAA,GAAAA,cACA,aACAA,GAAAA,EAAAA,SAAAA,UAAAA,EAAAA,GAAAA,mBAEA,CACA,yBACA,aACAA,GAAAA,EAAAA,GAAAA,UAAAA,EAAAA,GAAAA,eAEA,aACAA,GAAAA,EAAAA,GAAAA,UAAAA,EAAAA,GAAAA,cAEA,CACA,QACA,EAEA0E,YAAAA,SAAAA,GACA,SAWA,OAVA,SACA1E,EAAAA,EAAAA,KAAAA,KAEA,aACAA,GAAAA,EAAAA,UAEA,cACAA,EAAAA,EAAAA,OAGA,CACA,EAEA2E,yBAAAA,SAAAA,EAAAA,EAAAA,GAIA,MAoBA,OAvBA7F,QAAAA,MAAAA,gDACA/C,EAAAA,EAAAA,IAAAA,EAAAA,2BAGA,mBACA6I,EAAAA,EAAAA,EAAAA,SACAA,EAAAA,EAAAA,EAAAA,EAAAA,EACAA,EAAAA,EAAAA,EAAAA,EAAAA,EACAA,EAAAA,KAAAA,cAAAA,EAAAA,QAAAA,GACAC,EAAAA,MAAAA,MAAAA,KAAAA,MAAAA,EAAAA,GAAAA,KACAA,EAAAA,MAAAA,OAAAA,KAAAA,MAAAA,EAAAA,GAAAA,OAEAD,EAAAA,CAAAjF,EAAAA,IAAAC,EAAAA,KACAgF,EAAAA,EAAAA,EAAAA,SACAA,EAAAA,EAAAA,EAAAA,EAAAA,EACAA,EAAAA,EAAAA,EAAAA,EAAAA,EAEAA,EAAAA,KAAAA,cAAAA,EAAAA,SAAAA,GAEAC,EAAAA,MAAAA,MAAAA,KAAAA,KAAAA,EAAAA,GAAAA,KACAA,EAAAA,MAAAA,OAAAA,KAAAA,KAAAA,EAAAA,GAAAA,MAGA,CACA,EAKAC,mBAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GACA/I,EAAAA,EAAAA,IAAAA,EAAAA,iBAEA,yCAEA,mCAEA,iCACAA,EAAAA,EAAAA,IAAAA,EAAAA,yCAEA,wCAEAwH,EAAAA,IAAAA,kBAAAA,MAAAA,GAEA,wCAMA,GAJAA,EAAAA,IAAAA,kBAAAA,KAAAA,mBAAAA,IAAAA,MAAAA,GAEAA,EAAAA,IAAAA,kBAAAA,KAAAA,WAAAA,EAAAA,UAAAA,MAAAA,GAEA,gBACA,QACAwB,SAAA,oCAAAC,EAAAA,SACAd,MAAAe,GACAC,EAAAA,aAAAA,qBAAAA,GAEA,KACAnJ,EAAAA,EAAAA,IAAAA,EAAAA,qBAEAmJ,EAAAA,QAGA,qDAEA,SAIA,4DACA,yEAEA,6CACA,6EAEA,mBACAC,EAAAA,QAAAA,GACAA,EAAAA,WAAAA,CACA,CACArJ,MAAAA,OACAsJ,KAAAA,+BACAC,SAAAA,SAAAA,GACAlJ,EAAAA,iBACAA,EAAAA,kBACA+I,EAAAA,QACAA,EAAAA,QACA,GAEA,CACApJ,MAAAA,SACAsJ,KAAAA,4BACAC,SAAAA,EAAAA,EAAAA,MAAAA,KAAAA,kBAAAA,KAGA,MACA,4DACA,yEACA,6CACA,4EACA,CACA,MACA,MACA,mBACAF,EAAAA,QAAAA,GACAA,EAAAA,WAAAA,CACA,CACArJ,MAAAA,SACAsJ,KAAAA,4BACAC,SAAAA,EAAAA,EAAAA,MAAAA,KAAAA,kBAAAA,KAGA,CAEA9B,EAAAA,IAAAA,qBAAAA,EAAAA,SAAAA,MAAAA,GACA,qDACA,yCACA,cACA+B,EAAAA,EAAAA,GACAC,EACA,YACAC,EAAAA,EAAAA,MAAAA,KAAAA,sBAAAA,IAGA,CACA,EAMAC,WAAAA,SAAAA,EAAAA,GACA,SACA,MACA,4BACA,KAEA,IADA,iBACA,oBACA,WACA,wBAEA,GACAzF,EAAAA,KAAAA,EAEA,CAEA,MACA,iCACA,4BACAA,EAAAA,KAAAA,EACA,CAOA,GAJAA,EAAAA,MAAAA,SAAAA,EAAAA,GACA,cACA,IAEA,GAEA,IADA,SACA,mBACA,SACAkB,EAAAA,KAAAA,EAAAA,IAGAlB,EAAAA,CACA,CAEA,QACA,EAKA0F,WAAAA,SAAAA,GACA,IACAC,EAAAA,KAAAA,OAGA,SACA,wBACA,mBACA3F,EAAAA,KAAAA,EACA,CASA,OAJAA,EAAAA,MAAAA,SAAAA,EAAAA,GACA,cACA,IAEA,CACA,EAEA4F,oBAAAA,SAAAA,GAGA,IAFA,SACA,aACA,oBACA,WACA,wBACA,qBACA5F,EAAAA,KAAAA,EAEA,CAMA,OAJAA,EAAAA,MAAAA,SAAAA,EAAAA,GACA,cACA,IAEA,CACA,EAEA6F,iBAAAA,SAAAA,GACA,SAEA,iCACA,4BACA,MACA7F,EAAAA,KAAAA,KAAAA,MAAAA,QAAAA,GAEA,CAEA,QACA,EAEA8F,wBAAAA,WACA,SAEA,KACA,iCACA,4BACA5E,EAAAA,EAAAA,OAAAA,EAAAA,SACA,CAEA,iCACA,mBACA,KACAlB,EAAAA,KAAAA,KAAAA,MAAAA,QAAAA,GAEA,CAEA,gCACA,EAEA+F,WAAAA,SAAAA,GACA,yBACA,6BAGA,yBACA,6BAGA,iDACA,+BAQA,gBAEA,OADAjH,QAAAA,MAAAA,+BAAAA,GACA,KAEA,mBACA,gBACA,WACA,OAEA,wBACA,wBACA,SACA,6BAEA,UACA,UAEA,eAeA,OAVAkH,EAAAA,GAAAA,EACAA,EAAAA,UAAAA,EAAAA,GACAA,EAAAA,eAAAA,EAKAA,EAAAA,GAAAA,EACAA,EAAAA,GAAAA,EAEA,CACA,CACAlH,QAAAA,KACA,uDACAY,EAGA,CAEA,WACA,EAMAuG,WAAAA,SAAAA,GACA,SAEA,+BACA,0BACA,YACAjG,EAAAA,KAAAA,EAEA,CAEA,QACA,EAEAkG,SAAAA,SAAAA,EAAAA,GACA,SAEA,KAEA,+BACA,0BACA,2BACAlG,EAAAA,KAAAA,GACAmG,EAAAA,EAAAA,KAAAA,EAEA,CAEA,iBACA,qCACA,oBACA,+BACA,0BACA,SACA,oBACAnG,EAAAA,KAAAA,EAGA,CACA,CAGA,QACA,EAEAoG,QAAAA,SAAAA,GACA,+BACA,0BACA,gBACA,QAEA,CACA,QACA,EAEAC,QAAAA,SAAAA,GACA,+BACA,0BACA,gBACA,QAEA,CACA,WACA,EAMAC,WA59BA,SA49BAC,GACA,iCAMA,GAJA,IACAC,EAAAA,KAAAA,MAAAA,QAAAA,EAAAA,QAGA,sBAIA,gCACA,MACA,kCACAA,EAAAA,KAAAA,eAAAA,EACA,CACA,CAEA,QACA,EAEAC,SAj/BA,SAi/BAF,GACA,+BAKA,GAJA,IACAG,EAAAA,KAAAA,MAAAA,QAAAA,EAAAA,MAGA,iCAIA,8BACA,IACAA,EAAAA,KAAAA,eAAAA,EAAAA,UAEA,CACA,QACA,EAMAC,8BAvgCA,SAugCA7G,GAMA,IADA,SACA,6BACA,oBACA,0BACAiD,EAAAA,KAAAA,EACA,CAMA,OAFAA,EAAAA,KAAAA,kBAAAA,GAEA,CACA,EAMA6D,eA9hCA,SA8hCA3H,GACA,uCACA,EAEA4H,sBAliCA,SAkiCAC,GACA,mCACA,EAKAC,eAziCA,SAyiCAtH,GACA,uCACA,EAEAuH,gBA7iCA,SA6iCAvH,EAAAwD,GACA,8BACA,EAEAgE,YAjjCA,SAijCAC,EAAA9C,GAEA,QACA8C,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GACA9C,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GACA8C,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GACA9C,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAKA,EAEA+C,kBAAAA,SAAAA,EAAAA,GACA,YAEAD,EAAAA,GAAAA,EAAAA,GACAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,GACAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAOA,EAMAE,WAAAA,SAAAA,GACA,QACA,eACA,qBACAlH,IAGA,QACA,EAEAmH,aAAAA,SAAAA,EAAAA,GACA,2BACA,SAGA,yBACA,mCAGA,6CACA,2CACA,SAEA,SACA,eAEA,GADAC,EAAAA,KAAAA,aAAAA,EAAAA,GAAAA,EAAAA,KACA,EACA,SAGA,QACA,CACA,YAMA,EAMAC,MAAAA,SAAAA,GACA,4BACA,EAEAC,WAAAA,SAAAA,GAEA,OADAC,EAAAA,KAAAA,MAAAA,EAAAA,KACA,KACA,EAEAC,UAAAA,SAAAA,GACA,MACA,2CACA,qBACA,UAEA,EAEAC,YAAAA,SAAAA,GACA,4BACA,EAEAC,aAAAA,SAAAA,GACA,cACA9L,EAAAA,KAAAA,MAAAA,EAAAA,KAAAA,IACA,GAGA,OACAA,EAAAA,KAAAA,MAAAA,EAAAA,KAAAA,IACA,GAGA,OACAA,EAAAA,KAAAA,MAAAA,GACA,IAGAA,EAAAA,KAAAA,MAAAA,GAAAA,GAAAA,GACA,EACA,EAEA+L,cAAAA,SAAAA,GACA/L,EAAAA,KAAAA,MAAAA,IAAAA,GACA,+BAMA,OALA,KACAgM,EAAAA,yBACA,OACAA,EAAAA,qBAEA,mCACA,EAEAC,WAAAA,SAAAA,EAAAA,GACA,kBACA,SACA,uBAEA,kBACA,EAEAC,aAAAA,SAAAA,EAAAA,GAIA,OAHA,aACA7C,EAAAA,EAAAA,UAAAA,EAAAA,EAAAA,GAAAA,OAEA,CACA,EAUA8C,0BAvsCA,SAusCAC,GAIA,SACA,eACAlL,EAAAA,KAAAA,CACA0C,GAAAA,EACAG,EAAAA,EAAAA,KAGA,uBAKA,IAHA,QACA,OACA,KACA,oBACA,WACA,mBACAA,IACAsI,EAAAA,EAAAA,GAEAnI,EAAAA,EAAAA,IAAAA,CACA,CAEA,QACA,EAEAoI,aAnuCA,SAmuCAC,GACA,UACA,IACA,gBACA,WACAzF,EAAAA,KAAAA,IAAAA,EAAAA,EAAAA,GACA3G,GACA,CACA,WACA,EAEA,CAEA,EAEAqM,aAlvCA,SAkvCAD,GACA,WAEA,IACA,gBACA,WACAE,EAAAA,KAAAA,IAAAA,EAAAA,EAAAA,GACAtM,GACA,CAEA,WACA,EAEA,CAEA,EAEAuM,WAnwCA,SAmwCAH,GACA,SACA,gBACA,WACA,yBACAH,EAAAA,GAAAA,EAAAA,CACA,CACA,QACA,GAEA5L,QAzyCA,WAyyCA,GC3zCgQ,INO5P,GAAY,OACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIF,EAAe,EAAiB,O,kJOhBXmM,EAAAA,WAEpB,WAAYnN,IAAM,eACjBf,KAAKe,KAAOA,EACZf,KAAKmO,cAAe,CACpB,C,uCAED,WACC,GAAInO,KAAKe,KAAKqN,OACb,OAAOpO,KAAKe,KAEZ,IAAI0E,EAAS,GAIb,OAHAzF,KAAKqO,SAAQ,SAAUjF,GACtB3D,EAAO6I,KAAKlF,EACZ,IACM3D,CAER,G,qBAED,SAAQM,GACP,IAAMwI,EAAMvO,KAAKwO,WACX/I,EAAS,CAAC,EAIhB,OAHA8I,EAAIE,SAAQ,SAAArF,GACX3D,EAAO2D,EAAIrD,IAAQqD,CACnB,IACM3D,CACP,G,kBAED,SAAK2D,GACApJ,KAAKe,KAAKuN,KACbtO,KAAKe,KAAKuN,KAAKlF,GAEf7E,QAAQmK,KAAK,iCAEd,G,oBAGD,SAAOC,EAAQC,EAAUrN,GAExB,IAAMkE,EAAS,GACXoJ,EAAW,KAwDf,MAvDiB,OAAbD,GACCE,MAAMC,QAAQxN,KACjBsN,EAAW,CAAC,EACZtN,EAAMkN,SAAQ,SAAA3M,GACb+M,EAAS/M,IAAK,CACd,KAIH9B,KAAKqO,SAAQ,SAAUjF,GAEtB,IAAMtH,EAAIsH,EAAIuF,GAEd,OAAQC,GACP,IAAK,KACA9M,GAAKP,GACRkE,EAAO6I,KAAKlF,GAEb,MACD,IAAK,KACAtH,GAAKP,GACRkE,EAAO6I,KAAKlF,GAEb,MACD,IAAK,KACAtH,GAAKP,GACRkE,EAAO6I,KAAKlF,GAEb,MACD,IAAK,IACAtH,EAAIP,GACPkE,EAAO6I,KAAKlF,GAEb,MACD,IAAK,IACAtH,EAAIP,GACPkE,EAAO6I,KAAKlF,GAEb,MACD,IAAK,KACAtH,GAAKP,GACRkE,EAAO6I,KAAKlF,GAEb,MACD,IAAK,MACAyF,GAAYA,EAAS/M,IAEdP,EAAMyN,QAAQlN,IAAM,IAD9B2D,EAAO6I,KAAKlF,GAIb,MACD,QACC,MAEF,IACM,IAAI8E,EAAUzI,EAErB,G,qBAED,WACC,IAAIA,EAAS,GACb,IAAK,IAAIwJ,KAAKjP,KAAKe,KAAM,CACxB,IAAIqI,EAAMpJ,KAAKe,KAAKkO,GACpB,IAAK,IAAIC,KAAK9F,EACb3D,EAAO6I,KAAKY,GAEb,KACA,CACD,OAAO,IAAIhB,EAAUzI,EACrB,G,mBAED,WACC,IAAI/D,EAAI1B,KAAK6I,OACTlD,EAAQ,EACZ,IAAK,IAAIsJ,KAAKjP,KAAKe,KAAM,CACxB,IAAIqI,EAAMpJ,KAAKe,KAAKkO,GAEpB,IAAK,IAAIC,KAAK9F,EACbzD,IAEY,GAATA,IACHA,EAAQ,GAET,KACA,CACD,MAAO,CAACjE,EAAGiE,EACX,G,oBAED,WACC,OAAO3F,KAAK6I,MACZ,G,kBAED,WACC,GAAI7I,KAAKe,MAAQf,KAAKe,KAAKqN,OAC1B,OAAOpO,KAAKe,KAAKqN,OAGlB,GAAIpO,KAAKe,KAAM,CACd,IAAI8H,EAAO,EAIX,OAHA7I,KAAKqO,SAAQ,WACZxF,GACA,IACMA,CACP,CACD,OAAO,CACP,G,iBAGD,SAAIO,EAAK7H,GACR,IAAIA,EAEG,CACN,IAAIO,EAAI9B,KAAKe,KAAKqI,GAClB,OAAS,MAALtH,IAAaqN,MAAMrN,IAAOA,EAAEqM,cAAiBrM,EAAEsN,UAG5CtN,EAFC,IAAIoM,EAAUpM,EAGtB,CAPA9B,KAAKe,KAAKqI,GAAO7H,CAQlB,G,oBAGD,SAAOoN,EAAQpN,GACd,IAAIA,EAKG,CACN,IAAIkE,EAAS,CAAC,EAId,OAHAzF,KAAKqO,SAAQ,SAAUvM,EAAGmN,GACzBxJ,EAAOwJ,GAAKnN,CACZ,GAAE6M,GACI,IAAIT,EAAUzI,EACrB,CAVA,IAAI1E,EAAOf,KAAKe,KAChBf,KAAKqO,SAAQ,SAAUvM,EAAGmN,GACzBlO,EAAKkO,GAAGN,GAAUpN,EAAM8N,IAAIJ,EAC5B,GAAEN,EAQJ,G,iBAED,SAAIvF,EAAKuF,EAAQW,GAChB,GAAc,MAAVX,GAAyB,MAAPvF,EACrB,OAAOpJ,KAAKe,KAAKqI,GAAKuF,GAChB,GAAW,MAAPvF,EAAa,CAOvB,IAAI7H,EAAQvB,KAAKe,KAAKqI,GAEtB,OAAI7H,GAAS4N,MAAM5N,KAAWA,EAAM4M,eAAiB5M,EAAM6N,UACnD,IAAIlB,EAAU3M,IAGT,MAATA,QAA0BgO,GAAThO,IACpBA,EAAQ+N,GAEF/N,EAEP,CACD,G,iBAED,SAAIoN,GACH,IAAIlJ,EAAS,GAIb,OAHAzF,KAAKqO,SAAQ,SAAU9M,EAAO4D,GAC7BM,EAAON,GAAM5D,EAAMoN,EACnB,IACM,IAAIT,EAAUzI,EACrB,G,kBAGD,SAAKkJ,EAAQa,EAAMC,EAAOC,GACzB,IAAI/B,EAAS,GACTK,GAAM,EACN3F,GAAM,EACVrI,KAAKqO,SAAQ,SAAU9M,GAEtB,IAAIO,EAAIP,EACJoN,IACH7M,EAAIP,EAAMoN,IAGXhB,EAAOW,KAAKxM,GAEXkM,GADW,IAARA,EACGlM,EAEA6N,KAAK3B,IAAIA,EAAKlM,GAIpBuG,GADW,IAARA,EACGvG,EAEA6N,KAAKtH,IAAIA,EAAKvG,EAErB,IAEY,MAAT2N,QAA0BF,GAATE,IACpBpH,EAAMoH,GAGM,MAATC,QAA0BH,GAATG,IACpB1B,EAAM0B,GAOP,IAHA,IAAIE,GAAS5B,EAAM3F,GAAOmH,EAEtBK,EAAU,GACLZ,EAAI,EAAGA,EAAIO,EAAMP,IACzBY,EAAQZ,GAAK,CACZa,OAAQb,EACRtJ,MAAO,EACPoK,KAAOd,EAAIW,EAASvH,EACpB8D,IAAM8C,EAAI,GAAKW,EAASvH,GAM1B,IAAK,IAAI4G,EAAI,EAAGA,EAAItB,EAAOS,OAAQa,IAelC,IAdA,IAAInN,EAAI6L,EAAOsB,GAcNe,EAAI,EAAGA,EAAIR,EAAMQ,IAAK,CAC9B,IAAIF,EAASD,EAAQG,GACrB,GAAIlO,GAAKgO,EAAOC,MAAQjO,GAAKgO,EAAO3D,GAAI,CACvC2D,EAAOnK,QACP,KACA,CACD,CAGF,OAAO,IAAIuI,EAAU2B,EACrB,G,iBAQD,SAAIzG,EAAKuF,EAAQpN,GACF,MAAVoN,GAAyB,MAAPvF,EACrBpJ,KAAKe,KAAKqI,GAAKuF,GAAUpN,EACR,MAAP6H,IACVpJ,KAAKe,KAAKqI,GAAO7H,EAElB,G,oBAED,SAAOoN,EAAQsB,GAIVjQ,KAAKe,KAAKqN,QAA8B,GAApBpO,KAAKe,KAAKqN,OAEjCpO,KAAKe,KAAKmP,MAAK,SAAUC,EAAGH,GAE3B,OAAIG,EAAEhC,cAAgB6B,EAAE7B,aACnB8B,EACID,EAAEX,IAAIV,GAAUwB,EAAEd,IAAIV,GAEtBwB,EAAEd,IAAIV,GAAUqB,EAAEX,IAAIV,GAI1BsB,EACID,EAAErB,GAAUwB,EAAExB,GAEdwB,EAAExB,GAAUqB,EAAErB,EAIvB,IAGDpK,QAAQD,MAAM,kCAEf,G,iBAED,SAAIqK,EAAQpN,GACNA,IACJA,EAAQoN,EACRA,EAAS,MAENpN,EAAM4M,aACTnO,KAAKqO,SAAQ,SAAUvM,EAAGmN,GACzB,OAAOnN,EAAIP,EAAM8N,IAAIJ,EACrB,GAAEN,GAEH3O,KAAKqO,SAAQ,SAAUvM,GACtB,OAAOA,EAAIP,CACX,GAAEoN,EAGJ,G,mBAED,SAAMA,EAAQpN,GACRA,IACJA,EAAQoN,EACRA,EAAS,MAENpN,EAAM4M,cACT5J,QAAQ6L,KACRpQ,KAAKqO,SAAQ,SAAUvM,EAAGmN,GACzB,OAAOnN,EAAIP,EAAM8N,IAAIJ,EACrB,GAAEN,IAEH3O,KAAKqO,SAAQ,SAAUvM,GACtB,OAAOA,EAAIP,CACX,GAAEoN,EAEJ,G,sBAED,SAASA,EAAQpN,GACXA,IACJA,EAAQoN,EACRA,EAAS,MAENpN,EAAM4M,aACTnO,KAAKqO,SAAQ,SAAUvM,EAAGmN,GACzB,OAAOnN,EAAIP,EAAM8N,IAAIJ,EACrB,GAAEN,GAEH3O,KAAKqO,SAAQ,SAAUvM,GACtB,OAAOA,EAAIP,CACX,GAAEoN,EAEJ,G,oBAED,SAAOA,EAAQpN,GACTA,IACJA,EAAQoN,EACRA,EAAS,MAENpN,EAAM4M,aACTnO,KAAKqO,SAAQ,SAAUvM,EAAGmN,GACzB,OAAOnN,EAAIP,EAAM8N,IAAIJ,EACrB,GAAEN,GAEH3O,KAAKqO,SAAQ,SAAUvM,GACtB,OAAOA,EAAIP,CACX,GAAEoN,EAEJ,G,oBAED,SAAOA,GACN,IAAIlM,EAAO,GAOX,OANAzC,KAAKqO,SAAQ,SAAU9M,GACtBkB,EAAK6L,KAAK/M,EACV,GAAEoN,GACHlM,EAAOA,EAAKyN,MAAK,SAAUC,EAAGH,GAC7B,OAAOG,EAAIH,CACX,IACGvN,EAAK2L,OAAS,EACV3L,EAAKkN,KAAK3B,IAAI,EAAG2B,KAAKU,MAAM5N,EAAK2L,OAAS,GAAK,IAEhD,CACP,G,kBAED,SAAKO,GACJ,IAAM2B,EAAMtQ,KAAKsQ,IAAI3B,GACrB,OAAoB,IAAhB3O,KAAK6I,OACD,EAEK,EAANyH,EAAYtQ,KAAK6I,MACxB,G,iBAGD,SAAI8F,GACH,IAAIX,EAAMuC,OAAOC,UAIjB,OAHAxQ,KAAKqO,SAAQ,SAAU9M,GACtByM,EAAM2B,KAAK3B,IAAIA,EAAKzM,EACpB,GAAEoN,GACIX,CACP,G,iBAGD,SAAIW,GACH,IAAItG,EAAMkI,OAAOE,UAIjB,OAHAzQ,KAAKqO,SAAQ,SAAU9M,GACtB8G,EAAMsH,KAAKtH,IAAIA,EAAK9G,EACpB,GAAEoN,GACItG,CACP,G,sBAGD,SAASsG,GACR,IAAI+B,EAAO1Q,KAAK0Q,KAAK/B,GACjBgC,EAAW,EAKf,OAJA3Q,KAAKqO,SAAQ,SAAU9M,GACtB,IAAIqP,EAAMF,EAAOnP,EACjBoP,GAAaC,EAAMA,CACnB,GAAEjC,GACe,EAAXgC,EAAiB3Q,KAAK6I,MAC7B,G,iBAED,SAAI8F,GACH,OAAOgB,KAAKkB,KAAK7Q,KAAK2Q,SAAShC,GAC/B,G,iBAED,SAAIA,GACH,IAAI2B,EAAM,EAOV,OAHAtQ,KAAKqO,SAAQ,SAAU9M,GACtB+O,GAAO/O,CACP,GAAEoN,GACI2B,CACP,G,oBAKD,SAAO3B,GACN,IAAIhI,EAAO,CAAC,EACRlB,EAAS,EAOb,OANAzF,KAAKqO,SAAQ,SAAU9M,GACjBoF,EAAKpF,KACToF,EAAKpF,IAAS,EACdkE,IAED,GAAEkJ,GACIlJ,CACP,G,0BAMD,SAAakJ,GACZ,IAAIhI,EAAO,CAAC,EACRlB,EAAS,GAOb,OANAzF,KAAKqO,SAAQ,SAAU9M,GACjBoF,EAAKpF,KACToF,EAAKpF,IAAS,EACdkE,EAAO6I,KAAK/M,GAEb,GAAEoN,GACI,IAAIT,EAAUzI,EACrB,G,mBAED,SAAMkJ,GACL,IAAIlJ,EAAS,CAAC,EAOd,OANAzF,KAAKqO,SAAQ,SAAU9M,GACjBkE,EAAOlE,KACXkE,EAAOlE,GAAS,GAEjBkE,EAAOlE,IACP,GAAEoN,GACI,IAAIT,EAAUzI,EACrB,G,qBAED,SAAQkJ,GACP,IAAIhI,EAAO,CAAC,EAQZ,OAPA3G,KAAKqO,SAAQ,SAAUjF,GACtB,IAAI7H,EAAQ6H,EAAIuF,GACXhI,EAAKpF,KACToF,EAAKpF,GAAS,IAAI2M,EAAU,KAE7BvH,EAAKpF,GAAO+M,KAAKlF,EACjB,IACM,IAAI0H,EAAAA,EAASnK,EACpB,G,qBAED,SAAQmE,EAAU6D,GAMjB,GAAI3O,KAAKe,KAAKqN,OAEb,IAAK,IAAIa,EAAI,EAAGA,EAAIjP,KAAKe,KAAKqN,OAAQa,IAAK,CAC1C,IAAI7F,EAAMpJ,KAAKe,KAAKkO,GACpB,GAAIN,EAAQ,CAEX,IAAIpN,EAAQuJ,EAAS1B,EAAIuF,GAASM,GACrB,MAAT1N,IACH6H,EAAIuF,GAAUpN,EAEf,KAAM,CACN,IAAIA,EAAQuJ,EAAS1B,EAAK6F,GACb,MAAT1N,IACHvB,KAAKe,KAAKkO,GAAK1N,EAEhB,CACD,MAGD,IAAK,IAAI0N,KAAKjP,KAAKe,KAAM,CACxB,IAAIqI,EAAMpJ,KAAKe,KAAKkO,GAEpB,GAAIN,EAAQ,CACX,IAAIpN,EAAQuJ,EAAS1B,EAAIuF,GAASM,GACrB,MAAT1N,IACH6H,EAAIuF,GAAUpN,EAEf,KAAM,CACN,IAAIA,EAAQuJ,EAAS1B,EAAK6F,GACb,MAAT1N,IACHvB,KAAKe,KAAKkO,GAAK1N,EAEhB,CACD,CAEF,G,sBAOD,SAASwP,GAER,IAAIC,EAAQ,CAAC,EACTtP,EAAIqP,EAAK3C,OACbpO,KAAKqO,SAAQ,SAAUjF,EAAK6F,GAE3B,IADA,IAAI9F,EAAO6H,EACFC,EAAI,EAAGA,EAAIvP,EAAGuP,IAAK,CAC3B,IAAIlL,EAAMgL,EAAKE,GACX1P,EAAQ6H,EAAIrD,GACXoD,EAAK5H,KACL0P,GAAKvP,EAAI,EACO,MAAfyH,EAAK5H,GACR4H,EAAK5H,GAAS0N,EAKd1K,QAAQD,MAAM,6BAIf6E,EAAK5H,GAAS,CAAC,GAGjB4H,EAAOA,EAAK5H,EACZ,CAED,IAEDvB,KAAKgR,MAAQA,CACb,G,gBAYD,SAAGrD,EAAQuD,GAEV,GAAIlR,KAAKgR,MAIR,IAFA,IAAI7H,EAAOnJ,KAAKgR,MACZtP,EAAIiM,EAAOS,OACN6C,EAAI,EAAGA,EAAIvP,EAAGuP,IAAK,CAC3B,IAAI1P,EAAQoM,EAAOsD,GACnB,GAAmB,MAAf9H,EAAK5H,GAgBR,OAAO,KAfP,GAAI0P,GAAKvP,EAAI,EAAG,CACf,IAAIsP,EAAQ7H,EAAK5H,GACjB,OAAI2P,EACI,CACN9H,IAAKpJ,KAAKe,KAAKiQ,GACfA,MAAOA,GAGDhR,KAAKe,KAAKiQ,EAGlB,CACA7H,EAAOA,EAAK5H,EAKd,MAEDgD,QAAQD,MAAM,qCAEf,OAAO,IACP,G,oBAGD,SAAO8E,GACFpJ,KAAKe,KAAKqN,OACbpO,KAAKe,KAAKoQ,OAAO/H,EAAK,UAEfpJ,KAAKe,KAAKqI,EAElB,G,mBAGD,WACC,IAAIgI,GAAS,EACTC,EAAKrR,KACL4K,EAAI,GAiBR,OAhBA5K,KAAKqO,SAAQ,SAAUjF,GAEtB,IAAKgI,EAAQ,CAEZ,IAAK,IAAIH,KADTG,GAAS,EACKhI,EACbwB,GAAKyG,EAAGC,eAAeL,EAAGtB,KAAK3B,IAAI,GAAIiD,EAAE7C,SAAW,MAErDxD,GAAK,IACL,CACD,IAAK,IAAIqG,KAAK7H,EACbwB,GAAKyG,EAAGC,eAAelI,EAAI6H,GAAK,GAAItB,KAAK3B,IAAI,GAAIiD,EAAE7C,SAAW,MAE/DxD,GAAK,IACL,IAEDrG,QAAQgN,MAAM3G,GACPA,CACP,G,4BAED,SAAeA,EAAGlJ,GAEjB,GADAkJ,GAAK,GACDA,EAAEwD,OAAS1M,EACd,MAAOkJ,EAAEwD,OAAS1M,EACjBkJ,GAAK,SAENA,EAAIA,EAAEwE,UAAU,EAAG1N,EAAI,GAAK,MAE7B,OAAOkJ,CACP,G,mBAGD,SAAM4G,GACL,IAAI5G,EAAI,GACJlJ,EAAI8P,EAAQpD,OAYhB,OAXApO,KAAKqO,SAAQ,SAAUjF,GACtB,IAAK,IAAI6F,EAAI,EAAGA,EAAIvN,EAAGuN,IAAK,CAC3B,IAAIC,EAAIsC,EAAQvC,GACZA,EAAI,IACPrE,GAAK,KAENA,GAAKxB,EAAI8F,EACT,CACDtE,GAAK,IACL,IAEMA,CACP,G,kCAGD,SAAqB+D,GACpB3O,KAAKqO,SAAQ,SAAUoD,GACtB,GAAIA,EAAW,CACd,IAAIxL,EAAI,IAAIyL,KAAKD,GAGjB,OAFAxL,EAAE0L,WAAW,GACb1L,EAAE2L,gBAAgB,GACX3L,EAAE4L,SACT,CACD,OAAO,CACP,GAAElD,EACH,G,mBAED,SAAOmD,GACN,GAAIhD,MAAMC,QAAQ/O,KAAKe,OAAS+N,MAAMC,QAAQ+C,EAAM/Q,MAAO,CAC1D,IAAIgR,EAAU/R,KAAKe,KAAKiR,OAAOF,EAAM/Q,MACrC,OAAO,IAAImN,EAAU6D,EACrB,CAED,OADAxN,QAAQD,MAAM,qDACP,IAAI4J,EAAU,GACrB,K,EAhtBmBA,E,qNCSjB+D,EAAwB,KAEPC,EAAAA,SAAAA,I,6BAMpB,WAAYC,GAAQ,4BACnB,eACA,EAAKC,WAAY,EACjB,EAAKC,aAAe,GACpB,EAAKC,UAAW,EAChB,EAAKC,cAAe,EACpB,EAAKC,iBAAkB,EACnBL,GAAUA,EAAOG,WACpB,EAAKA,SAAWH,EAAOG,UAEpBH,GAAUA,EAAOK,kBACpB,EAAKA,gBAAkBL,EAAOK,iBAE/B,EAAKC,IAAM,IAAIC,EAAAA,EAAO,UAbH,CAcnB,C,sCAED,WACC1S,KAAKyS,IAAIE,KAAK,UAAW,SACzBV,EAAwB,KACxBjS,KAAK4S,gBACL,G,2BAED,SAAe9H,GACd9K,KAAK6S,eAAgB,EACrB7S,KAAK8S,mBAAqBhI,CAC1B,G,mBAED,SAAO3B,EAAMU,EAAQkJ,GAAO,WAC3B/S,KAAKyS,IAAIA,IAAI,EAAG,QAAS,SAEzBR,EAAwBjS,KAExBgT,EAAAA,EAAMC,QAAQ,sBAAuB,CAAC,GAKtC,IAAI7K,EAAa8K,SAASC,cAAc,OAGxC,GAFA3R,EAAAA,EAAI4R,IAAIhL,EAAY,0EAEhBpI,KAAK6S,cAAe,CACvB,IAAIQ,EAAaH,SAASC,cAAc,QACxC3R,EAAAA,EAAI4R,IAAIC,EAAY,8CACpBjL,EAAWkL,YAAYD,GACvBrT,KAAKuT,KAAIxI,EAAAA,EAAAA,GAAGsI,EAAYG,EAAAA,EAAMC,MAAOxI,EAAAA,EAAKyI,MAAM1T,KAAM,mBAAoBqT,IAC1E,CAED,IAAI/I,EAAY4I,SAASC,cAAc,OACvC3R,EAAAA,EAAI4R,IAAI9I,EAAW,0BACnBlC,EAAWkL,YAAYhJ,GAEvB,IAAIqJ,EAAUT,SAASC,cAAc,OACrC3R,EAAAA,EAAI4R,IAAIO,EAAS,wBACb3T,KAAKsS,UACR9Q,EAAAA,EAAI4R,IAAIO,EAAS,gCAEdZ,GACHvR,EAAAA,EAAI4R,IAAIO,EAASZ,GAElBvR,EAAAA,EAAI4R,IAAIO,EAAS3T,KAAKqS,cACtB/H,EAAUgJ,YAAYK,GAEtB,IAAIC,EAAUV,SAASC,cAAc,OACrC3R,EAAAA,EAAI4R,IAAIQ,EAAS,yBACb3M,EAAAA,EAAAA,GAAI,YACPzF,EAAAA,EAAI4R,IAAIQ,EAAS,8BACjBpS,EAAAA,EAAI4R,IAAIO,EAAS,+BAElBA,EAAQL,YAAYM,GAEpBA,EAAQN,YAAYnK,GACpB0K,EAAAA,EAAIC,OAAOR,YAAYlL,GAKvBpI,KAAKuT,KAAIxI,EAAAA,EAAAA,GAAG3C,EAAY,eAAgB6C,EAAAA,EAAKyI,MAAM1T,KAAM,gBACzDA,KAAKuT,KAAIxI,EAAAA,EAAAA,GAAG3C,EAAY,aAAc6C,EAAAA,EAAKyI,MAAM1T,KAAM,gBACvDA,KAAKuT,KAAIxI,EAAAA,EAAAA,GAAG3C,EAAY,iBAAkB6C,EAAAA,EAAKyI,MAAM1T,KAAM,gBAK3DA,KAAKuT,IAAIP,EAAAA,EAAMe,UAAU,kBAAmB9I,EAAAA,EAAKyI,MAAM1T,KAAK,WAG5D,IAAIgU,EAAWhU,KAAKiU,YAAYpK,GAC5BqK,EAASC,EAAAA,EAAQC,SAAST,GAC1BU,EAAUF,EAAAA,EAAQC,SAAShM,GAW/B,GATIpI,KAAKoS,WACRpS,KAAKuT,KAAIxI,EAAAA,EAAAA,GAAG3C,EAAYoL,EAAAA,EAAMC,MAAOxI,EAAAA,EAAKyI,MAAM1T,KAAM,iBAGvD2T,EAAQrM,MAAMgN,IAAMN,EAAS/O,EAAI,KACjC0O,EAAQrM,MAAMiN,OAASP,EAAS3O,EAAI,KACpCsO,EAAQrM,MAAMsI,MAAQoE,EAAS5O,EAAI,KACnCuO,EAAQrM,MAAMkN,KAAOR,EAAShP,EAAI,KAE9BhF,KAAKwS,gBAAiB,CACzB,IAAIiC,EAAST,EAAS5O,EAAI8O,EAAO9O,EAC7BsP,EAASV,EAAS3O,EAAI6O,EAAO7O,EAC7BsP,EAAY,UAAYF,EAAS,IAAMC,EAAS,IACpDf,EAAQrM,MAAMqN,UAAYA,CAC1B,CAQDC,YAAW,WACVpT,EAAAA,EAAIqT,OAAOzM,EAAY,sBACvB,GAAE,GAKHwM,YAAW,WACVpT,EAAAA,EAAIqT,OAAOzM,EAAY,6BACvB,GAAE,KAEHwM,YAAW,WAEN,EAAKpC,kBACRmB,EAAQrM,MAAMqN,UAAY,cAE3BhB,EAAQrM,MAAMgN,IAAM3E,KAAK3C,OAAOqH,EAAQhP,EAAI6O,EAAO7O,GAAK,GAAK,KAC7DsO,EAAQrM,MAAMiN,OAASL,EAAO7O,EAAI,KAClCsO,EAAQrM,MAAMsI,MAAQsE,EAAO9O,EAAI,KACjCuO,EAAQrM,MAAMkN,KAAO7E,KAAK3C,OAAOqH,EAAQjP,EAAI8O,EAAO9O,GAAK,GAAK,IAC9D,GAAE,KAKCpF,KAAKwS,iBACRoC,YAAW,WACVjB,EAAQrM,MAAMqN,UAAY,EAC1B,GAAE,KAMJC,YAAW,kBAAM,EAAKE,UAAX,GAAuB,KAGlC9U,KAAK+U,kBAAoB3M,EACzBpI,KAAKmJ,KAAOA,EACZnJ,KAAK2T,QAAUA,CACf,G,oBAED,SAAQ7I,GACP9K,KAAKgV,gBAAkBlK,CACvB,G,sBAED,WACK9K,KAAKgV,iBACRhV,KAAKgV,iBAEN,G,yBAED,SAAYnL,GACX,GAAKA,EASJ,OAAOsK,EAAAA,EAAQC,SAASvK,GARxB,IAAIQ,EAAM8J,EAAAA,EAAQC,SAASP,EAAAA,EAAIC,QAC/B,MAAO,CACN1O,EAAG,EACHC,EAAG,EACHL,EAAGqF,EAAIjF,EAAI,EACXH,EAAGoF,EAAIhF,EAAI,EAKb,G,oBAED,SAAO6O,GACN,IAAIP,EAAU3T,KAAK2T,QACfvL,EAAapI,KAAK+U,kBAIlBb,EAAOZ,cACVY,EAASC,EAAAA,EAAQC,SAASF,GAAQ,IAEnC,IAAIG,EAAUF,EAAAA,EAAQC,SAAShM,GAC/BuL,EAAQrM,MAAMgN,IAAM3E,KAAK3C,OAAOqH,EAAQhP,EAAI6O,EAAO7O,GAAK,GAAK,KAC7DsO,EAAQrM,MAAMiN,OAASL,EAAO7O,EAAI,KAClCsO,EAAQrM,MAAMsI,MAAQsE,EAAO9O,EAAI,KACjCuO,EAAQrM,MAAMkN,KAAO7E,KAAK3C,OAAOqH,EAAQjP,EAAI8O,EAAO9O,GAAK,GAAK,IAC9D,G,wBAED,SAAWxD,GAIV,GAAI5B,KAAK+U,mBAAqBnT,EAAEqT,OAE/B,OADAjV,KAAKkV,UAAUtT,IACR,CAER,G,yBAED,SAAYA,GAEX,IAAIqT,EAASrT,EAAEqT,OACXA,GAAUjV,KAAK+U,oBAClB/U,KAAKkV,UAAUtT,GACfJ,EAAAA,EAAI4R,IAAIpT,KAAK+U,kBAAmB,wBAChCH,WAAW3J,EAAAA,EAAKyI,MAAM1T,KAAM,SAAU,KAEvC,G,mBAED,WAEC,IAAIqK,EAAM8J,EAAAA,EAAQC,SAASpU,KAAK2T,SAChCnS,EAAAA,EAAI4R,IAAIpT,KAAK2T,QAAS,6BAEtB,IAAIA,EAAU3T,KAAK2T,QACnBiB,YAAW,WACVjB,EAAQrM,MAAMkN,KAAQnK,EAAIrF,EAAI,GAAM,IACpC,GAAE,GAEH4P,YAAW,WACVjB,EAAQrM,MAAMkN,KAAQnK,EAAIrF,EAAI,GAAM,IACpC,GAAE,IAEH4P,YAAW,WACVjB,EAAQrM,MAAMkN,KAAQnK,EAAIrF,EAAI,GAAM,IACpC,GAAE,KAEH4P,YAAW,WACVjB,EAAQrM,MAAMkN,KAAQnK,EAAIrF,EAAI,GAAM,IACpC,GAAE,KAEH4P,YAAW,WACVjB,EAAQrM,MAAMkN,KAAQnK,EAAIrF,EAAK,KAC/BxD,EAAAA,EAAIqT,OAAOlB,EAAS,4BACpB,GAAE,IAEH,G,8BAED,SAAkBxK,GACjBnJ,KAAKuS,cAAgBvS,KAAKuS,aACtBvS,KAAK8S,oBACR9S,KAAK8S,mBAAmB9S,KAAKuS,cAE1BvS,KAAKuS,cACR/Q,EAAAA,EAAIqT,OAAO1L,EAAM,kBACjB3H,EAAAA,EAAI4R,IAAIjK,EAAM,yBAEd3H,EAAAA,EAAI4R,IAAIjK,EAAM,kBACd3H,EAAAA,EAAIqT,OAAO1L,EAAM,uBAElB,G,kBAED,WACCnJ,KAAKgL,OACL,G,mBAED,WACChL,KAAKmV,KAAK,QAAS,CAAC,GAChBnV,KAAK+U,mBACRlB,EAAAA,EAAIC,OAAOsB,YAAYpV,KAAK+U,mBAE7B/U,KAAKqV,SACL,I,+BA/QD,WACC,OAAOpD,CACP,K,EAJmBC,CAAeoD,EAAAA,E,4FCXfxE,EAAAA,WAEpB,WAAY/P,IAAM,eACjBf,KAAKe,KAAOA,EACZf,KAAKmO,cAAe,CACpB,C,uCAED,WACC,IAAI1I,EAAS,GAIb,OAHAzF,KAAKqO,SAAQ,SAAUjF,GACtB3D,EAAO6I,KAAKlF,EACZ,IACM3D,CACP,G,kBAGD,WACC,OAAOzF,KAAKuV,SAAS,OACrB,G,iBAED,SAAItG,GACH,OAAOjP,KAAKe,KAAKkO,EACjB,G,mBAGD,SAAMN,GACL,IAAIhI,EAAO3G,KAAKuV,SAAS,QAAS5G,GAClC,OAAO,IAAImC,EAASnK,EAAK5F,KACzB,G,iBAED,SAAI4N,GACH,OAAO3O,KAAKuV,SAAS,MAAO5G,EAC5B,G,iBAED,SAAIA,GACH,OAAO3O,KAAKuV,SAAS,MAAO5G,EAC5B,G,kBAED,SAAKA,GACJ,OAAO3O,KAAKuV,SAAS,OAAQ5G,EAC7B,G,sBAED,SAASA,GACR,OAAO3O,KAAKuV,SAAS,WAAY5G,EACjC,G,iBAED,SAAIA,GACH,OAAO3O,KAAKuV,SAAS,MAAO5G,EAC5B,G,iBAED,SAAIA,GACH,OAAO3O,KAAKuV,SAAS,MAAO5G,EAC5B,G,oBAED,SAAOA,GACN,OAAO3O,KAAKuV,SAAS,SAAU5G,EAC/B,G,qBAED,WAEC,G,qBAED,SAAQ7D,GACP,IAAK,IAAImE,KAAKjP,KAAKe,KAAM,CACxB,IAAIyU,EAAMxV,KAAKe,KAAKkO,GACpBnE,EAAS0K,EAAKvG,EACd,CACD,G,sBAED,SAASwG,EAAQ9G,GAChB,IAAIlJ,EAAS,CAAC,EACd,IAAK,IAAIwJ,KAAKjP,KAAKe,KAAM,CACxB,IAAIyU,EAAMxV,KAAKe,KAAKkO,GAChBjK,EAAIwQ,EAAIC,GAAQ9G,GACpBlJ,EAAOwJ,GAAKjK,CACZ,CACD,OAAO,IAAIkJ,EAAAA,EAAWzI,EACtB,G,mBAED,SAAMiQ,GACL,IAAK,IAAIzG,KAAKjP,KAAKe,KAAM,CACxB,IAAIyU,EAAMxV,KAAKe,KAAKkO,GAChByG,GACHF,EAAInH,SAAQ,SAAUjF,EAAKuM,GAC1BpR,QAAQgN,MAAM,KAAMoE,EAAGvM,EACvB,GAEF,CACD,K,EAxFmB0H,E,iFCDfhK,EAAAA,WAEF,cAAe,eACX9G,KAAKe,KAAO,CAAC,EACbf,KAAK4V,QAAU,GACf5V,KAAK6V,SAAW,CAAC,CACpB,C,oCAED,SAAO9P,EAAK+P,GACR,IAAMvN,GAAQ,IAAImJ,MAAOG,UACzB7R,KAAKe,KAAKgF,GAAOwC,EACjBvI,KAAK6V,SAAS9P,GAAO+P,CACxB,G,iBAED,SAAK/P,GAAmB,IAAdgQ,EAAc,uDAAH,EACjB,GAAK/V,KAAKe,KAAKgF,GAAf,CAIA,IAAMwC,EAAQvI,KAAKe,KAAKgF,GAClBiQ,GAAM,IAAItE,MAAOG,UACjBoE,EAAWD,EAAMzN,EACvBvI,KAAK4V,QAAQtH,KAAK,CACd2H,SAAUA,EACVlQ,IAAKA,EACL+P,QAAS9V,KAAK6V,SAAS9P,KAEvBkQ,EAAW,KACXvD,EAAAA,EAAOhE,KAAK,8BAAiC3I,EAAM,SAAWkQ,EAAW,MACzE1R,QAAQkF,MAAMzJ,KAAK4V,UAEnBlD,EAAAA,EAAOD,IAAIsD,EAAU,8BAAiChQ,EAAM,SAAWkQ,EAAW,aAE/EjW,KAAKe,KAAKgF,UACV/F,KAAK6V,SAAS9P,EAhBpB,MAFG2M,EAAAA,EAAOhE,KAAK,oCAAqC3I,EAmBxD,K,EAnCCe,GAuCN,QAAmBA,C,wVCjClB,SAAc3C,EAAQ+R,GACrBpP,EAAAA,EAAmByB,MAAM,2BAA2BpE,EAAOiK,QAE3D,IADA,IAAM1H,EAAM,CAAC,EACJuI,EAAI,EAAGA,EAAIiH,EAAK9H,OAAQa,IAAK,CACrC,IAAIkB,EAAI+F,EAAKjH,GACRkB,EAAEgG,UACNzP,EAAIyJ,EAAEiG,YAAa,EAEpB,CAGD,IAFA,IAAMzP,EAAO,GACPjF,EAAIyC,EAAOiK,OACRa,EAAI,EAAGA,EAAIvN,EAAGuN,IAAK,CAC3B,IAAIrN,EAAIuC,EAAO8K,GACVvI,EAAI9E,EAAEyU,UACV1P,EAAK2H,KAAK1M,EAEX,CAED,OADAkF,EAAAA,EAAmBkP,IAAI,4BAChBrP,CACP,G,8BAED,SAAkBxC,EAAQiH,EAAKkL,EAAMC,GACpCzP,EAAAA,EAAmByB,MAAM,+BAA+BpE,EAAOiK,QAC/D,IAAMoI,EAASD,EAAQC,OACjBC,EAAkBF,EAAQE,gBAC1BC,EAAoBH,EAAQI,gBAC5BC,EAAuBL,EAAQI,gBAG/BlR,EAAS,CACdf,IAAK,GACLmS,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,KAAM,CAAC,GAGFC,EAAW,IAAI/I,EAAAA,EAAU/J,GAC/B8S,EAASC,OAAO,QAEhB,IAAIC,EAAU,CAAC,EACf,GAAIb,EAAKS,MAAO,CACf,IAAMK,EAAYpX,KAAKqX,mBAAmBJ,EAAUX,EAAKS,OACzDK,EAAU/I,SAAQ,SAAAjF,GACZ+N,EAAQ/N,EAAIiN,WAChBc,EAAQ/N,EAAIiN,SAAW,CAAC,GAEzBc,EAAQ/N,EAAIiN,SAASjN,EAAIkO,MAAQlO,CACjC,GACD,CAGD,IAAImO,EAAqB,CAAC,EACtBC,EAAc,CAAC,EACnBC,OAAO9J,OAAOvC,EAAI0C,SAASW,SAAQ,SAAArJ,GAClCoS,EAAYpS,EAAED,IAAMC,EAAEX,KAClBW,EAAEnE,OAASmE,EAAEnE,MAAMyW,iBAA8B,aAAXtS,EAAEX,OAC3C8S,EAAmBnS,EAAED,IAAMC,EAAEvE,KAE9B,IAED4E,EAAOqR,KAAOhI,MAAMiB,KAAK,IAAI4H,IAAIF,OAAO9J,OAAO4J,KAC/C9R,EAAOqR,KAAK5G,MAAK,SAACC,EAAGH,GACpB,OAAOG,EAAEyH,cAAc5H,EACvB,IAEDvK,EAAOqR,KAAKrI,SAAQ,SAAApF,GACnB5D,EAAOuR,KAAK3N,GAAO,CAClB5E,KAAM,OAEP,IAEG+R,IACH/Q,EAAOqR,KAAKe,QAAQ,MACpBpS,EAAOuR,KAAK,MAAQ,CACnBvS,KAAM,KACNqT,QAAQ,IAINxB,EAAKS,OACRT,EAAKS,MAAMtI,SAAQ,SAAA6I,GACdb,IACHhR,EAAOqR,KAAKxI,KAAKgJ,EAAKzW,MACtB4E,EAAOuR,KAAKM,EAAKzW,MAAQ,CACxB4D,KAAM,OACNqT,QAAQ,IAGNpB,IACHjR,EAAOqR,KAAKxI,KAAKgJ,EAAKzW,KAAO,aAC7B4E,EAAOuR,KAAKM,EAAKzW,KAAO,aAAe,CACtC4D,KAAM,OACNqT,QAAQ,EACR1G,QAAQ,IAGNwF,IACHnR,EAAOqR,KAAKxI,KAAKgJ,EAAKzW,KAAO,iBAC7B4E,EAAOuR,KAAKM,EAAKzW,KAAO,iBAAmB,CAC1C4D,KAAM,OACNqT,QAAQ,EACR1G,QAAQ,GAIV,IAIF,IAAM2G,EAAkBd,EAASe,QAAQ,WA4DzC,OAvDAD,EAAgB1J,SAAQ,SAACxH,EAAIoR,GAE5B,IAAM7O,EAAM,CAAC,EACP8O,EAAU,GAChBzS,EAAOqR,KAAKrI,SAAQ,SAAAS,GAAC,OAAI9F,EAAI8F,GAAK,GAAb,IAErBrI,EAAGqQ,OAAO,QACV,IAAMiB,EAAgBtR,EAAG2H,WACzB2J,EAAc1J,SAAQ,SAAA7M,GAErB,UADOA,EAAEwW,KACLhN,EAAI0C,QAAQlM,EAAEyW,SACbzW,EAAEyW,QAAUzW,EAAE0W,OAASf,EAAmB3V,EAAEyW,QAAS,CACxD,IAAMhP,EAAMkO,EAAmB3V,EAAEyW,QACjC,GAA8B,WAA1Bb,EAAY5V,EAAEyW,QACjBjP,EAAIC,GAAwB,EAAhBzH,EAAE0W,MAAM/W,MAAa,MAC3B,CACN,IAAMA,EAAQK,EAAE0W,MAAM/W,MAClBuN,MAAMC,QAAQxN,GACjB6H,EAAIC,GAAO9H,EAAMgX,KAAK,MAEtBnP,EAAIC,GAAO9H,CAGZ,CACD,CAEF,IAEGiV,IACHpN,EAAI,MAAQ6O,GAGT3B,EAAKS,OACRT,EAAKS,MAAMtI,SAAQ,SAAA6I,GAClB,GAAIH,EAAQc,IAAcd,EAAQc,GAAWX,EAAKnS,IAAK,CACtD,IAAMqT,EAAWrB,EAAQc,GAAWX,EAAKnS,IACzC+S,EAAQ5J,KAAKkK,GACT/B,IACHrN,EAAIkO,EAAKzW,MAAQ,aAEd4V,IACHrN,EAAIkO,EAAKzW,KAAO,aAAe8O,KAAK3C,MAAMwL,EAASvC,SAAW,MAE3DQ,IACHrN,EAAIkO,EAAKzW,KAAO,gBAAkB2X,EAASC,aAE5C,CACD,IAEFhT,EAAOsR,MAAMzI,KAAK4J,GAClBzS,EAAOf,IAAI4J,KAAK2J,GAChBxS,EAAOoR,KAAKvI,KAAKlF,EACjB,IAEDtC,EAAAA,EAAmBkP,IAAI,gCAChBvQ,CACP,G,2CAED,SAA+BtB,GAM9B,OALAA,EAAOsK,SAAQ,SAAA7M,GACVA,EAAEyW,QAAUzW,EAAEyW,OAAOrJ,QAAQ,KAAO,IACvCpN,EAAEyW,OAASzW,EAAEyW,OAAOjJ,UAAU,EAAExN,EAAEyW,OAAOrJ,QAAQ,MAElD,IACM7K,CACP,G,6BAED,SAAgBA,EAAQuU,GACvB,IAAIC,EAAW,IAAIzK,EAAAA,EAAU/J,GAEzB4T,EAAkBY,EAASX,QAAQ,WAEnCY,EAAe,GAoBnB,OAnBAb,EAAgB1J,SAAQ,SAAUxH,GACjCA,EAAGqQ,OAAO,QAGV,IAFA,IAAIiB,EAAgBtR,EAAG2H,WACnB7I,EAAQ,EACHsJ,EAAI,EAAGA,EAAIkJ,EAAc/J,OAAQa,IAAK,CAC9C,IAAI5K,EAAQ8T,EAAclJ,GACR,gBAAd5K,EAAMI,MAAwC,iBAAdJ,EAAMI,KACzCkB,EAAQ,EAEJtB,EAAMW,GAAK,GAAKX,EAAMY,GAAK,IAAMZ,EAAMwU,QACtClT,EAAQ+S,IACXE,EAAatK,KAAKjK,GAClBsB,IAKH,CACD,IACMiT,CACP,G,gCAGD,WAEC,G,sCAGD,SAAyB/R,EAAI6B,GAC5B,IAAMoQ,EAAcrB,OAAO1G,KAAKrI,EAAMqQ,SAAS3K,OACzCiI,EAAUxP,EAAGmR,QAAQ,WACrBgB,EAAyB3C,EAAQ4C,OAAO,UAC9C,OAAOD,EAAuBtI,OAASoI,CACvC,G,iCAGD,SAAoBI,EAAkBnC,GAErC,IADA,IAAMoC,EAAQ,CAAC,EACNlK,EAAI,EAAGA,EAAI8H,EAAM3I,OAAQa,IACjCkK,EAAMpC,EAAM9H,GAAG9J,IAAM4R,EAAM9H,GAAGpO,KAE/B,IAAM4E,EAAS,CAAC,EACV2T,EAAeF,EAAiBlB,QAAQ,WAU9C,OATAoB,EAAa/K,SAAQ,SAACgI,EAASlR,GAC9B,IAAMwB,EAAO,GACP0S,EAAehD,EAAQ1Q,MAAM,QAAQ5E,KAC3C,IAAK,IAAIuY,KAAUD,EAClB1S,EAAK2H,KAAK6K,EAAMG,IAEjB3S,EAAKuJ,OACLzK,EAAON,GAAMwB,CACb,IACMlB,CACP,G,6BAMD,SAAgB8T,GAKf,IAHA,IAAMC,EAAW,CAAC,EACZC,EAAkB,CAAC,EACnBC,EAAU,CAAC,EACRzK,EAAI,EAAGA,EAAIsK,EAAKnL,OAAQa,IAAK,CACrC,IAAM0K,EAAaJ,EAAKtK,GAClB2K,EAAWD,EAAWC,SAC5B,IAAK,IAAIzU,KAAMyU,EAGd,IAFA,IAAMC,EAAcD,EAASzU,GACvB2U,EAAa,CAAC,EACXnE,EAAI,EAAGA,EAAIkE,EAAYzL,OAAQuH,IAAK,CAC5C,IAAMoE,EAAIF,EAAYlE,GACjB6D,EAASO,EAAEC,OACfR,EAASO,EAAEC,KAAO,GAEnBR,EAASO,EAAEC,OACNF,EAAWC,EAAEC,OACZP,EAAgBM,EAAEC,OACtBP,EAAgBM,EAAEC,KAAO,GAE1BP,EAAgBM,EAAEC,OAClBF,EAAWC,EAAEC,MAAO,GAEhBN,EAAQK,EAAEC,OACdN,EAAQK,EAAEC,KAAO,GAElBN,EAAQK,EAAEC,MAASD,EAAExR,KACrB,CAEF,CACD,IAAM9C,EAAS,GACf,IAAK,IAAIuU,KAAOR,EACf/T,EAAO6I,KAAK,CACX0L,IAAKA,EACLrU,MAAO6T,EAASQ,GAChBJ,SAAUH,EAAgBO,GAC1BC,KAAMP,EAAQM,GAAOR,EAASQ,KAGhC,OAAO,IAAI9L,EAAAA,EAAUzI,EACrB,G,2BAiBD,SAAc5E,EAAMqZ,EAAMC,GAEzB,MAAO,CACNtZ,KAAMA,EACNuZ,MAAO,KACPC,QAAS,EACTC,KAAMJ,EAAK,GACXK,QAASL,EAAKA,EAAK9L,OAAS,GAC5B8L,KAAMA,EACN3R,MAAO,KACPiS,UAAW,EACXL,OAAQA,EACRM,SAAU,GACVC,mBAAmB,EAEnBC,KAbM,SAaD/Y,GACJ5B,KAAKuI,MAAQ3G,EACb5B,KAAKwa,UAAY5Y,EAAEqY,KACnBja,KAAKyY,aAAe,CACpB,EAEDmC,KAnBM,SAmBDhZ,EAAGqN,GAEP,IAAIxJ,EAAS,KAmBb,GAdIzF,KAAKoa,QACM,eAAVxY,EAAE6C,MACK,gBAAV7C,EAAE6C,MACQ,iBAAV7C,EAAE6C,MACQ,iBAAV7C,EAAE6C,MACQ,eAAV7C,EAAE6C,MACFzE,KAAKyY,gBAQHzY,KAAK6a,OAAO7a,KAAKsa,KAAM1Y,GAAI,CA8C9B,GA1CkB,MAAd5B,KAAKoa,QAERpa,KAAKoa,MAAQ,CACZI,UAAW5Y,EAAEqY,KACba,cAAelZ,EAAEqY,KAAOja,KAAKwa,UAC7BO,QAAS,EACTC,cAAe/L,EACfgM,aAAc,EACdhF,SAAU,EACVtQ,OAAQ,EACR8S,cAAe,EACfyC,SAAS,EACT7E,QAASzU,EAAEyU,QACXiB,KAAMtX,KAAKa,KACXuX,KAAMxW,EAAEwW,KACRqC,SAAUza,KAAKya,SACfU,KAAK,IAOQ,eAAVvZ,EAAE6C,MACK,gBAAV7C,EAAE6C,MACQ,iBAAV7C,EAAE6C,MACQ,iBAAV7C,EAAE6C,MACQ,eAAV7C,EAAE6C,MACFzE,KAAKyY,gBAOPzY,KAAKoa,MAAMe,KAAK7M,KAAK,CACpB2L,KAAMrY,EAAEqY,KAAM5P,IAAK4E,EAAGqL,KAAMta,KAAKqa,UAM9Bra,KAAKka,KAAK9L,QAAUpO,KAAKqa,QAAU,EAAG,CACzC,IAAIU,EAAU/a,KAAKob,WAAWxZ,GAE9B5B,KAAKoa,MAAMW,QAAUA,EACrB/a,KAAKoa,MAAMa,YAAchM,EACzBjP,KAAKoa,MAAM3B,aAAezY,KAAKyY,aAC/BzY,KAAKoa,MAAMnE,SAAWjW,KAAKoa,MAAMW,QAAU/a,KAAKoa,MAAMI,UACtDxa,KAAKoa,MAAMzU,MAAS3F,KAAKoa,MAAMa,YAAcjb,KAAKoa,MAAMY,cAAiB,EAKzEvV,EAASzF,KAAKoa,MAKdpa,KAAKoa,MAAQ,KACbpa,KAAKqa,SAAW,CAChB,CAODra,KAAKqa,UACLra,KAAKsa,KAAOta,KAAKka,KAAKla,KAAKqa,QAC3B,CA6BD,OArBIra,KAAK0a,mBACU,MAAd1a,KAAKoa,QAAkBpa,KAAK6a,OAAO7a,KAAKsa,KAAMta,KAAKua,UAAYva,KAAK6a,OAAO7a,KAAKua,QAAS3Y,KAE5F5B,KAAKoa,MAAMW,QAAUnZ,EAAEqY,KACvBja,KAAKoa,MAAMa,YAAchM,EACzBjP,KAAKoa,MAAMnE,SAAWjW,KAAKoa,MAAMW,QAAU/a,KAAKoa,MAAMI,UAKtDxa,KAAKoa,MAAMzU,MAAS3F,KAAKoa,MAAMa,YAAcjb,KAAKoa,MAAMY,cAAiB,EACzEhb,KAAKoa,MAAMc,SAAU,EACrBzV,EAASzF,KAAKoa,MAKdpa,KAAKqb,SAIA5V,CACP,EAED2V,WAlJM,SAkJKxZ,GAEV,GAAIA,EAAE0W,OAAS1W,EAAE0W,MAAM9P,SAAU,CAGhC,IAFA,IAAIA,EAAW5G,EAAE0W,MAAM9P,SACnBwF,EAAMpM,EAAEqY,KACHhL,EAAI,EAAGA,EAAIzG,EAAS4F,OAAQa,IACpCjB,EAAM2B,KAAK3B,IAAIA,EAAKxF,EAASyG,GAAGgL,MAEjC,OAAOjM,CACP,CACD,OAAOpM,EAAEqY,IACT,EAKDY,OAlKM,SAkKC1K,EAAGH,GACT,GAAKG,EAAEmL,QAAUtL,EAAEsL,QAAUnL,EAAEkI,QAAUrI,EAAEqI,QAAUlI,EAAE1L,MAAQuL,EAAEvL,KAAO,CACvE,GAAe,iBAAV0L,EAAE1L,MAAqC,iBAAVuL,EAAEvL,MACxB,iBAAV0L,EAAE1L,MAAqC,iBAAVuL,EAAEvL,KAChC,SAAI0L,EAAEoL,UAAWvL,EAAEuL,UACXpL,EAAEoL,QAAQ9W,MAAQuL,EAAEuL,QAAQ9W,KASrC,IAAe,eAAV0L,EAAE1L,MAAmC,gBAAV0L,EAAE1L,OAA2B0L,EAAEmI,OAAStI,EAAEsI,MAAO,CAEhF,IAAIkD,EAASrL,EAAEmI,MACXmD,EAASzL,EAAEsI,MAGf,MAAmB,QAAfkD,EAAO/W,MAAiC,UAAf+W,EAAO/W,MAAmC,UAAf+W,EAAO/W,MAAmC,QAAf+W,EAAO/W,MAAiC,YAAf+W,EAAO/W,KAM3G+W,EAAO/W,MAAQgX,EAAOhX,KAOrB+W,EAAO/W,MAAQgX,EAAOhX,MAAU+W,EAAOja,OAASka,EAAOla,KAEhE,CAED,QAAK4O,EAAEmI,QAAUtI,EAAEsI,QAAYnI,EAAEmI,OAAStI,EAAEsI,MAK5C,CACD,OAAO,CACP,EAED+C,MAhNM,WAiNLrb,KAAKoa,MAAQ,KACbpa,KAAKqa,QAAU,EACfra,KAAKsa,KAAOJ,EAAK,EACjB,EAIF,G,gCAOD,SAAmBrT,EAAIqT,EAAMZ,EAAQa,GAEpC,IAAM1U,EAAS,GACTiW,EAAU1b,KAAK2b,cAAcrC,EAAQY,EAAMC,GAEjDtT,EAAGqQ,OAAO,QACV,IAAM/S,EAAS0C,EAAG2H,WAEZ9M,EAAIyC,EAAOiK,OACjBsN,EAAQf,KAAKxW,EAAO,IACpB,IAAK,IAAI8K,EAAI,EAAGA,EAAIvN,EAAGuN,IAAK,CAC3B,IAAMrN,EAAIuC,EAAO8K,GACX2M,EAAIF,EAAQd,KAAKhZ,EAAGqN,GACtB2M,IACCzB,EACCD,EAAK9L,QAAUwN,EAAEjW,OACpBF,EAAO6I,KAAKsN,GAGbnW,EAAO6I,KAAKsN,GAGd,CACD,OAAOnW,CACP,G,kCAED,SAAqBoB,EAAIyQ,EAAMuE,GAAgB,WACxCpW,EAAS,CAAC,EACVmU,EAAW5Z,KAAKqX,mBAAmBxQ,EAAI,CAACyQ,IAK9C,GAJAsC,EAAS7Y,KAAK0N,SAAQ,SAAA4H,GACrB,EAAKyF,0BAA0BrW,EAAQ4Q,GAAS,EAChD,IAEGwF,EAAgB,CACnB,IAAME,EAAW/b,KAAKgc,eAAe1E,GACrCyE,EAAStN,SAAQ,SAAAwN,GAChB,GAAIA,EAAQ/B,KAAK9L,OAAS,GAAK6N,EAAQ/B,KAAK9L,OAASkJ,EAAK4C,KAAK9L,OAAQ,CACtE,IAAMwL,EAAW,EAAKvC,mBAAmBxQ,EAAI,CAACoV,IAC9CrC,EAAS7Y,KAAK0N,SAAQ,SAAA4H,GAChB5Q,EAAO4Q,EAAQA,UACnB,EAAKyF,0BAA0BrW,EAAQ4Q,GAAS,EAEjD,GACD,CACD,GACD,CAED,OAAO5Q,CACP,G,uCAED,SAA2BA,EAAQ4Q,GAA4B,IAAnB6F,EAAmB,wDAC1DC,EAAU,EACd1W,EAAO4Q,EAAQA,SAAW,GAC1BA,EAAQ8E,KAAK1M,SAAQ,SAAA2N,GACpB,IAAM/R,EAAM+R,EAAI/R,IAAM8R,EACtB1W,EAAO4Q,EAAQA,SAAS/H,KAAK,CAC5B/M,MAAO8I,EACPgS,QAAQH,IAETC,EAAUC,EAAI/R,GACd,GACD,G,+BAGD,SAAkBxD,EAAIyQ,GAA8B,WAAxBuE,EAAwB,wDAC7CpW,EAAS,CAAC,EACVmU,EAAW5Z,KAAKqX,mBAAmBxQ,EAAI,CAACyQ,IAM9C,GALAsC,EAAS7Y,KAAK0N,SAAQ,SAAA4H,GACrB,EAAKiG,wBAAwB7W,EAAQ4Q,EACrC,IAGGwF,EAAgB,CACnB,IAAME,EAAW/b,KAAKgc,eAAe1E,GACrCyE,EAAStN,SAAQ,SAAAwN,GAChB,GAAIA,EAAQ/B,KAAK9L,OAAS,GAAK6N,EAAQ/B,KAAK9L,OAASkJ,EAAK4C,KAAK9L,OAAQ,CACtE,IAAMwL,EAAW,EAAKvC,mBAAmBxQ,EAAI,CAACoV,IAC9CrC,EAAS7Y,KAAK0N,SAAQ,SAAA4H,GAChB5Q,EAAO4Q,EAAQA,UACnB,EAAKiG,wBAAwB7W,EAAQ4Q,GAAS,EAE/C,GACD,CACD,GACD,CACD,OAAO5Q,CACP,G,qCAED,SAAyBA,EAAQ4Q,GAA4B,IAAnB6F,EAAmB,wDACxDK,EAAWlG,EAAQmE,UACvB/U,EAAO4Q,EAAQA,SAAW,GAC1BA,EAAQ8E,KAAK1M,SAAQ,SAAA2N,GACpB,IAAMnG,EAAWmG,EAAInC,KAAOsC,EAC5B9W,EAAO4Q,EAAQA,SAAS/H,KAAK,CAC5B/M,MAAO0U,EACPoG,QAASH,IAEVK,EAAWH,EAAInC,IACf,GACD,G,0BAED,SAAcuC,GACb,IAAI/W,EAAS,EACb,IAAK,IAAIN,KAAMqX,EAAU,CACxB,IAAIC,EAAQD,EAASrX,GACrBsX,EAAMhO,SAAQ,SAAC6L,GACd7U,EAASkK,KAAK3B,IAAIvI,EAAQ6U,EAAK/Y,MAC/B,GACD,CACD,OAAOkE,CACP,G,+BAED,SAAkBtB,GACjB,IAAMsB,EAAS,CAAC,EACVmU,EAAWzV,EAAO6T,QAAQ,WAkBhC,OAjBA4B,EAASvL,SAAQ,SAACgI,EAASlR,GAC1B,IAAMQ,EAAQ0Q,EAAQ1Q,MAAM,QACtB+W,EAAc/W,EAAM0J,IAAI,eAAgB,KAAM,GAAK1J,EAAM0J,IAAI,gBAAiB,KAAM,GACpFsN,EAAiBtG,EAAQ4C,OAAO,UAChC2D,EAASvG,EAAQwG,OAAO,OAAQ,KAAK,CAAC,cAAc,cAAc,eAAgB,gBAAiB,kBACzGpX,EAAON,GAAM,CACZkR,QAASlR,EACT0D,KAAMwN,EAAQxN,OACd4P,aAAcmE,EAAO/T,OACrBiU,KAAMzG,EAAQhO,IAAI,QAClB4N,SAAWtG,KAAKoN,KAAM1G,EAAQrI,IAAI,QAAUqI,EAAQhO,IAAI,SACxDqU,YAAaA,EACbM,aAAcL,EACdM,YAAaN,EAAgBD,EAC7BQ,OAAQvX,EAAM0J,IAAI,kBAAmB,KAAM,GAE5C,IACM5J,CACP,G,+BAGD,SAAmBtB,EAAQ4S,GAC1B5S,EAAO+S,OAAO,QACd,IAAM0C,EAAW5Z,KAAKmd,kBAAkBhZ,GACxCsT,OAAO9J,OAAOiM,GAAUnL,SAAQ,SAAA4H,GAC/BA,EAAQU,MAAQ,EAChB,IAAK,IAAIgD,EAAI,EAAGA,EAAIhD,EAAM3I,OAAQ2L,IAAK,CACtC,IAAMzC,EAAOP,EAAMgD,GACnB1D,EAAQiB,EAAKnS,IAAM,CAClBtE,KAAMyW,EAAKzW,KACXuc,QAAS,EACTnH,UAAW,EACXwC,cAAe,EAEhB,CACD,IAED,IAAM4E,EAAkBrd,KAAKqX,mBAAmBlT,EAAQ4S,GAAOhW,KAc/D,OAbAsc,EAAgB5O,SAAQ,SAAA6O,GACvB,IAAMjH,EAAUuD,EAAS0D,EAAKjH,SAC9B,GAAIA,EAAS,CACZA,EAAQU,QACR,IAAMgD,EAAI1D,EAAQiH,EAAKhG,MACvByC,EAAEqD,QAAU,EACZrD,EAAE9D,SAAWqH,EAAKrH,SAClB8D,EAAEtB,aAAe6E,EAAK7E,YACtB,MACAlU,QAAQD,MAAM,gDAEf,IAEM,IAAI4J,EAAAA,EAAUuJ,OAAO9J,OAAOiM,GACnC,G,mCAED,SAAuBA,GACtB,OAAOA,EAAS7Y,KAAKwc,KAAI,SAAAxQ,GACxB,IAAMtH,EAAS,CAAC,EAChB,IAAK,IAAIM,KAAOgH,EACf,GAAY,UAARhH,EAAiB,CACpB,IAAMxE,EAAQwL,EAAEhH,GACZxE,EAAMV,KACT4E,EAAOM,GAAOxE,EAAM6b,QAEpB3X,EAAOM,GAAOxE,CAEf,CAEF,OAAOkE,CACP,GAED,G,gCAMD,SAAmBoB,EAAIkQ,EAAOyG,EAAiBC,GAC9C3W,EAAAA,EAAmByB,MAAM,kCAGzB,IAFA,IAAM9C,EAAS,GACTiY,EAAW,GACR3D,EAAI,EAAGA,EAAIhD,EAAM3I,OAAQ2L,IAAK,CACtC,IAAMzC,EAAOP,EAAMgD,GACbG,EAAO5C,EAAK4C,KAClB,GAAIA,GAAQA,EAAK9L,OAAS,EAAG,CAC5B,IAAMsN,EAAU1b,KAAK2b,cAAcrE,EAAKnS,GAAI+U,EAAM5C,EAAK6C,QACvDuB,EAAQjB,SAAWnD,EAAKzW,KACxB6c,EAASpP,KAAKoN,EACd,CACD,CACD,IAAMiC,EAAgBD,EAAStP,OAE/BvH,EAAGqQ,OAAO,QACV,IAAM0C,EAAW/S,EAAGmR,QAAQ,WAmE5B,OA9DA4B,EAASvL,SAAQ,SAACgI,GAWjB,IANA,IAAMlS,EAASkS,EAAQ7H,WACjB9M,EAAIyC,EAAOiK,OAKRwN,EAAI,EAAGA,EAAI+B,EAAe/B,IAAK,CACvC,IAAMF,EAAUgC,EAAS9B,GACzBF,EAAQL,QACRK,EAAQf,KAAKxW,EAAO,IACpBuX,EAAQkC,UAAW,CACnB,CAED,IAAK,IAAI3O,EAAI,EAAGA,EAAIvN,EAAGuN,IAMtB,IALA,IAAMrN,EAAIuC,EAAO8K,GAKR2M,EAAI,EAAGA,EAAI+B,EAAe/B,IAAK,CACvC,IAAMF,EAAUgC,EAAS9B,GAOzB,IAAKF,EAAQkC,SAAU,CACtB,IAAMxD,EAAQsB,EAAQd,KAAKhZ,EAAGqN,GAC1BmL,IACEA,EAAMc,SAAWuC,IAAkBrD,EAAMc,WAIzCQ,EAAQvB,OACPC,EAAMzU,OAAS+V,EAAQxB,KAAK9L,QAC/B3I,EAAO6I,KAAK8L,GAGb3U,EAAO6I,KAAK8L,GAQRoD,IACJ9B,EAAQkC,UAAW,GAItB,CACD,CAEF,IACD9W,EAAAA,EAAmBkP,IAAI,kCAChB,IAAI9H,EAAAA,EAAUzI,EACrB,G,sCAED,SAAyBoB,EAAIkQ,EAAO8G,GACnC,IAAIpY,EAAS,GACPkB,EAAO3G,KAAKqX,mBAAmBxQ,EAAIkQ,GAMzCpQ,EAAKmX,SAAS,CAAC,UAAW,SAM1B,IADA,IAAMpc,EAAImc,EAAYzP,OACba,EAAI,EAAGA,EAAIvN,EAAGuN,IAAK,CAC3B,IAAMkB,EAAI0N,EAAY5O,GACtB,GAAIkB,EAAEgG,QAAS,CACd,IAAME,EAAUlG,EAAEiG,UAClB,IAAK,IAAIkB,KAAQnH,EAAE4G,MAAO,CACzB,IAAMxV,EAAQ4O,EAAE4G,MAAMO,GAChBlO,EAAMzC,EAAKoX,GAAG,CAAC1H,EAASiB,IAAO,GAErC,GAAI/V,IAAU6H,EAOb3D,EAAO6I,KAAK,CACXkM,WAAY,EACZM,eAAgB,EAChBC,SAAU,EACVC,eAAgB,EAChBC,aAAc,EACdhF,SAAU,EACVtQ,OAAQ,EACRuV,SAAS,EACT7E,QAASA,EACTiB,KAAMA,EACNc,KAAM,UAGD,GAAIhP,IAAQ7H,EAAO,CAKzB,IAAMyP,EAAQ5H,EAAI4H,MAClBrK,EAAKkO,OAAO7D,EACZ,CACD,CACD,CACD,CAKD,OADAvL,EAASkB,EAAK5F,KAAKiR,OAAOvM,GACnB,IAAIyI,EAAAA,EAAUzI,EACrB,G,8BAGD,SAAiBoB,EAAIyQ,EAAMqC,GAwB1B,IAnBA,IAAM5C,EAAQ/W,KAAKgc,eAAe1E,GAK5B0G,EAAUhe,KAAKie,eAAepX,EAAIkQ,EAAO4C,GACzCuE,EAAerX,EAAGlB,MAAM,WAAWkD,OAEnCsV,EAAM,CAAC,CACZ1d,MAAO6W,EAAKzW,KAAO,OACnBsE,GAAImS,EAAKnS,GAAK,OACd5D,MAAO2c,EACPA,aAAcA,EACdE,EAAG,EACHlE,KAAM,IAIDzU,EAAS0Y,EAAInM,OAAOgM,EAAQK,WACzBpP,EAAI,EAAGA,EAAIxJ,EAAO2I,OAAQa,IAAK,CACvC,IAAMqP,EAAO7Y,EAAOwJ,GACpBqP,EAAKja,MAAQiT,EAAK4C,KAAKjL,EAAI,EAC3B,CAED,OAAOxJ,CACP,G,4BAED,SAAe6R,GACd,IAAMP,EAAQ,GACRmD,EAAOjP,EAAAA,EAAKsT,MAAMjH,EAAK4C,MAC7B,MAAOA,EAAK9L,OAAS,EAAG,CACvB,IAAM2L,EAAI9O,EAAAA,EAAKsT,MAAMjH,GACrByC,EAAE5U,GAAKmS,EAAKnS,GAAK,IAAM+U,EAAK9L,OAC5B2L,EAAElZ,MAAQyW,EAAKzW,KAAO,IAAMqZ,EAAK9L,OACjC2L,EAAEG,KAAOjP,EAAAA,EAAKsT,MAAMrE,GACpBnD,EAAMzI,KAAKyL,GACXG,EAAKsE,KACL,CACD,OAAOzH,CACP,G,2BAGD,SAAelQ,EAAIkQ,GAClB,IAAM0H,EAAa1H,EAAMwG,KAAI,SAAAjG,GAC5B,IAAMyC,EAAI9O,EAAAA,EAAKsT,MAAMjH,GAIrB,OAHAyC,EAAE5U,GAAKmS,EAAKnS,GACZ4U,EAAElZ,KAAOyW,EAAKzW,KACdkZ,EAAEG,KAAO,CAAC5C,EAAK4C,KAAK,IACbH,CACP,IACKiE,EAAUhe,KAAKqX,mBAAmBxQ,EAAI4X,GAC5C,OAAOT,CACP,G,4BAGD,SAAenX,EAAIkQ,EAAO4C,GAWzB,IATA,IAAMuE,EAAerX,EAAGlB,MAAM,WAAWkD,OAEnCqQ,EAAmBlZ,KAAK0e,yBAAyB7X,EAAIkQ,EAAO4C,GAC5DgF,EAAezF,EAAiBlB,QAAQ,QAExC4G,EAAsB5e,KAAK6e,cAAchY,EAAIkQ,GAC7C+H,EAAgBF,EAAoB5G,QAAQ,QAE5CvV,EAAO,GACJwM,EAAI,EAAGA,EAAI8H,EAAM3I,OAAQa,IAAK,CACtC,IAAMqI,EAAOP,EAAM9H,GACf8P,EAASJ,EAAatP,IAAIiI,EAAKnS,IAOnC,GAAI4Z,EAAQ,CACX,IAAMC,EAAYD,EAAOlW,OACnBoW,EAAUH,EAAczP,IAAIiI,EAAKnS,IACnC+Z,EAAaD,EAAUA,EAAQpW,OAASqV,EAM5Ca,EAASA,EAAOlC,OAAO,YAAa,IAAK,GAGzCpa,EAAK6L,KAAK,CACT7N,MAAO6W,EAAKzW,KACZsE,GAAImS,EAAKnS,GACT5D,MAAOyd,EACPd,aAAcA,EACdiB,aAAcD,EAAahB,EAC3BE,EAAGY,EAAYE,EACf9B,QAAS4B,EAAYE,EACrBE,WAAYJ,EAAYE,EACxBG,WAAYL,EACZ9E,KAAM5C,EAAK4C,KAAK9L,OAChB8Q,WAAYA,EACZI,SAAUJ,EAAahB,EAEvBqB,UAAWR,EAAOrO,KAAK,iBACvB8O,SAAUT,EAAOU,IAAI,iBACrBC,kBAAmBX,EAAOrO,KAAK,iBAC/BiP,iBAAkBZ,EAAOU,IAAI,iBAC7BG,aAAcb,EAAOrO,KAAK,YAC1BmP,eAAgBd,EAAOe,OAAO,YAC9BC,YAAahB,EAAOU,IAAI,YACxBO,UAAWjB,EAAOrO,KAAK,SACvBuP,SAAUlB,EAAOU,IAAI,SACrBS,iBAAkBnB,EAAOrO,KAAK,gBAC9ByP,gBAAiBpB,EAAOU,IAAI,iBAE7B,MAEAhd,EAAK6L,KAAK,CACT7N,MAAO6W,EAAKzW,KACZsE,GAAImS,EAAKnS,GACT+Y,aAAcA,EACd3c,MAAO,EACP6c,EAAG,EACHhB,QAAS,EACTgC,WAAY,EACZC,WAAY,EACZnF,KAAM5C,EAAK4C,KAAK9L,OAChBgS,SAAU,EACVb,UAAW,EACXC,SAAU,EACVE,kBAAmB,EACnBC,iBAAkB,EAClBC,aAAc,EACdC,eAAgB,EAChBE,YAAa,EACbC,UAAW,EACXC,SAAU,EACVC,iBAAkB,EAClBC,gBAAiB,GAMnB,CACD,OAAO1d,CACP,G,oCAOD,SAAuBoE,GAKtB,IAAIkR,EAAkBlR,EAAGmR,QAAQ,WAC7BqI,EAAc,CAAC,EA4DnB,OA3DAtI,EAAgB1J,SAAQ,SAAUgI,GACjCA,EAAQa,OAAO,QACf,IAAIoJ,EAAa,CAAC,EACdC,GAAe,EACfC,EAAa,KACbzG,EAAI,KA4CR,GA1CA1D,EAAQhI,SAAQ,SAAUjF,GACzB2Q,EAAI3Q,EAAI,QACRmX,EAAcnX,EAAI,QAClB,IAAI7C,EAAW6C,EAAI,WAYnB,GARS,iBAAL2Q,IACHuG,EAAW/Z,GAAYga,EACvBC,EAAaja,GAML,kBAALwT,EAAuB,CAC1B,GAAIuG,EAAW/Z,GAAW,CACpB8Z,EAAY9Z,KAChB8Z,EAAY9Z,GAAY,IAAI2H,EAAAA,EAAU,KAEvC,IAAI0C,EAAM2P,EAAcD,EAAW/Z,GACnC8Z,EAAY9Z,GAAU+H,KAAKsC,EAC3B,QACM0P,EAAW/Z,EAClB,CAED,GAAS,gBAALwT,EAAqB,CACxB,IAAK,IAAIxT,KAAY+Z,EAAY,CAC3BD,EAAY9Z,KAChB8Z,EAAY9Z,GAAY,IAAI2H,EAAAA,EAAU,KAEvC,IAAI0C,EAAM2P,EAAcD,EAAW/Z,GACnC8Z,EAAY9Z,GAAU+H,KAAKsC,EAC3B,CACD0P,EAAa,CAAC,CACd,CAKD,IAEGA,EAAWE,IAAeD,EAAc,GAAU,iBAALxG,EAAsB,CACjEsG,EAAYG,KAChBH,EAAYG,GAAc,IAAItS,EAAAA,EAAU,KAEzC,IAAI0C,EAAM2P,EAAcD,EAAWE,GACnCH,EAAYG,GAAYlS,KAAKsC,EAC7B,CAED,IAEM,IAAIE,EAAAA,EAASuP,EAAanS,EAAAA,EACjC,G,mCAMD,SAAsBrH,GAKrB,IAAIkR,EAAkBlR,EAAGmR,QAAQ,WAC7BqI,EAAc,CAAC,EAkCnB,OAjCAtI,EAAgB1J,SAAQ,SAAUgI,GACjCA,EAAQa,OAAO,QACf,IAAIqF,GAAY,EACZgE,GAAe,EACfC,EAAa,KACbzG,EAAI,KAkBR,GAjBA1D,EAAQhI,SAAQ,SAAUjF,GACzB2Q,EAAI3Q,EAAI,QACRmX,EAAcnX,EAAI,QAClB,IAAI7C,EAAW6C,EAAI,UACnB,GAAS,gBAAL2Q,EAAqB,CACxB,GAAIwC,GAAY,EAAG,CACb8D,EAAYG,KAChBH,EAAYG,GAAc,IAAItS,EAAAA,EAAU,KAEzC,IAAI0C,EAAM2P,EAAchE,EACxB8D,EAAYG,GAAYlS,KAAKsC,EAC7B,CACD2L,EAAWgE,EACXC,EAAaja,CACb,CACD,IAEGgW,EAAW,GAAKgE,EAAc,GAAU,gBAALxG,EAAqB,CACtDsG,EAAYG,KAChBH,EAAYG,GAAc,IAAItS,EAAAA,EAAU,KAEzC,IAAI0C,EAAM2P,EAAchE,EACxB8D,EAAYG,GAAYlS,KAAKsC,EAC7B,CAED,IAEM,IAAIE,EAAAA,EAASuP,EAAanS,EAAAA,EACjC,G,2BAED,SAAcrH,GAKb,IAAIkR,EAAkBlR,EAAGmR,QAAQ,WAC7BqI,EAAc,CAAC,EAkCnB,OAjCAtI,EAAgB1J,SAAQ,SAAUgI,GACjCA,EAAQa,OAAO,QACf,IAAIqF,GAAY,EACZiE,EAAa,KACbzG,EAAI,KACJwG,GAAe,EAkBnB,GAjBAlK,EAAQhI,SAAQ,SAAUjF,GACzB,IAAI2Q,EAAI3Q,EAAI,QACZmX,EAAcnX,EAAI,QAClB,IAAI7C,EAAW6C,EAAI,UACnB,GAAS,gBAAL2Q,EAAqB,CACxB,GAAIwC,GAAY,EAAG,CACb8D,EAAYG,KAChBH,EAAYG,GAAc,GAE3B,IAAI5P,EAAM2P,EAAchE,EACxB8D,EAAYG,IAAe5P,CAC3B,CACD2L,EAAWgE,EACXC,EAAaja,CACb,CACD,IAEGgW,EAAW,GAAKgE,EAAc,GAAU,gBAALxG,EAAqB,CACtDsG,EAAYG,KAChBH,EAAYG,GAAc,GAE3B,IAAI5P,EAAM2P,EAAchE,EACxB8D,EAAYG,IAAe5P,CAC3B,CACD,IAGM,IAAI1C,EAAAA,EAAUmS,EACrB,G,iCAYD,SAAoBjV,EAAKvE,GAExB,IAAIpB,EAAS,CAAC,EAMVgb,EAAe5Z,EAAGgW,OAAO,OAAQ,KAAM,eAEvC6D,EAAeD,EAAa9a,MAAM,UAMlCgb,EAAoBD,EAAapQ,MAGjCsQ,EAAe5gB,KAAK6gB,sBAAsBha,GAC1Cia,EAAmBF,EAAalQ,OAChCqQ,EAAmBD,EAAiB9S,MACpCgT,EAAkBJ,EAAanB,MAE/BwB,EAAkBL,EAAa/X,OAG/BqY,EAAmBlhB,KAAKmhB,oBAAoBta,GAC5Cua,EAAmBF,EAAiB5Q,MAEpC+Q,EAAmBxa,EAAGgW,OAAO,OAAQ,KAAM,CAAC,eAAgB,kBAC5DH,EAAc2E,EAAiB1b,MAAM,UAGzC,IAAK,IAAI2b,KAAYlW,EAAI0C,QAAS,CACjC,IAAIyT,EAAiBvhB,KAAKwhB,mBAAmBpW,EAAKkW,GAClD7b,EAAO6b,GAAY,CAClBG,UAAWf,EAAarR,IAAIiS,EAAU,KAAM,GAC5CI,UAAWhB,EAAarR,IAAIiS,EAAU,KAAM,GAAKX,EACjDgB,gBAAiBb,EAAiBzR,IAAIiS,EAAU,KAAM,GACtDM,gBAAiBd,EAAiBzR,IAAIiS,EAAU,KAAM,GAAKP,EAC3Dc,gBAAiBb,EAAgB3R,IAAIiS,EAAU,KAAM,GACrDQ,MAAOb,EAAgB5R,IAAIiS,EAAU,KAAM,GAC3CS,eAAgBb,EAAiB7R,IAAIiS,EAAU,KAAM,GACrDU,kBAAmBd,EAAiB7R,IAAIiS,EAAU,KAAM,GAAKF,EAC7Da,qBAAsBf,EAAiB7R,IAAIiS,EAAU,KAAM,GAAK5E,EAAYrN,IAAIkS,EAAgB,KAAM,GAGvG,CACD,OAAO9b,CACP,G,gCAGD,SAAmBiD,EAAO4Y,GAIzB,IAAK,IAAInc,KAAMuD,EAAMqQ,QAAS,CAC7B,IAAIuC,EAAS5S,EAAMqQ,QAAQ5T,GACvB8J,EAAIqM,EAAO9S,SAASwG,QAAQsS,GAChC,GAAIrS,GAAK,EACR,OAAOqM,EAAOnW,EAEf,CACD,OAAO,IACP,G,mCAQD,SAAsB0B,GAKrB,IAAIkR,EAAkBlR,EAAGmR,QAAQ,WAC7BkK,EAAiB,CAAC,EAyCtB,OAvCAnK,EAAgB1J,SAAQ,SAAUgI,GAIjCA,EAAQa,OAAO,QAEf,IAAIiL,EAAW,EACXC,EAAmB,CAAC,EAExB/L,EAAQhI,SAAQ,SAAUjF,GACzB,IAAI3E,EAAO2E,EAAI,QACXkY,EAAWlY,EAAI,UACf6Q,EAAO7Q,EAAI,QAEH,gBAAR3E,GAAkC,iBAARA,GAK7B0d,EAAWlI,EACXmI,EAAmB,CAAC,GAGF,eAAR3d,GAAyB6c,IAM9Bc,EAAiBd,KAChBY,EAAeZ,KACnBY,EAAeZ,GAAY,IAAIpT,EAAAA,EAAU,KAE1CgU,EAAeZ,GAAUhT,KAAK2L,EAAOkI,GACrCC,EAAiBd,IAAY,GAG/B,GACD,IACM,IAAIxQ,EAAAA,EAASoR,EACpB,G,iCAOD,SAAoBrb,GAKnB,IAAIkR,EAAkBlR,EAAGmR,QAAQ,WAE7BqK,EAAoB,CAAC,EA2BzB,OA1BAtK,EAAgB1J,SAAQ,SAAUgI,GAIjCA,EAAQa,OAAO,QACf,IAAIvR,EAAQ,EACZ0Q,EAAQhI,SAAQ,SAAUjF,GACzB,IAAI3E,EAAO2E,EAAI,QACXkY,EAAWlY,EAAI,UAGP,gBAAR3E,GAAkC,iBAARA,EAC7BkB,EAAQ,EACU,eAARlB,GAAyB6c,GACtB,GAAT3b,IACE0c,EAAkBf,KACtBe,EAAkBf,GAAY,GAG/Be,EAAkBf,KAClB3b,IAGF,GAED,IACM,IAAIuI,EAAAA,EAAUmU,EAErB,G,oCAID,SAAuBxb,GAKtB,IAAIkR,EAAkBlR,EAAGmR,QAAQ,WAC7BkK,EAAiB,CAAC,EA6BtB,OA5BAnK,EAAgB1J,SAAQ,SAAUgI,GAIjCA,EAAQa,OAAO,QACf,IAAI6C,EAAI,KACJpU,EAAQ,EACZ0Q,EAAQhI,SAAQ,SAAUjF,GACzB2Q,EAAI3Q,EAAI,QACR,IAAIkY,EAAWlY,EAAI,UACV,gBAAL2Q,GAA4B,iBAALA,IAC1BpU,EAAQ,GAGL2b,IACH3b,IAEKuc,EAAeZ,KACnBY,EAAeZ,GAAY,IAAIpT,EAAAA,EAAU,KAE1CgU,EAAeZ,GAAUhT,KAAK3I,GAG/B,GAGD,IAEM,IAAImL,EAAAA,EAASoR,EAAgBhU,EAAAA,EAEpC,K","sources":["webpack://quant-ux/./src/common/CheckBox.vue?edf3","webpack://quant-ux/src/common/CheckBox.vue","webpack://quant-ux/./src/common/CheckBox.vue?144f","webpack://quant-ux/./src/common/CheckBox.vue","webpack://quant-ux/./src/core/Util.vue","webpack://quant-ux/./src/common/SlideLeftButton.vue?24b6","webpack://quant-ux/src/common/SlideLeftButton.vue","webpack://quant-ux/./src/common/SlideLeftButton.vue?96e8","webpack://quant-ux/./src/common/SlideLeftButton.vue","webpack://quant-ux/src/core/Util.vue","webpack://quant-ux/./src/core/Util.vue?13ea","webpack://quant-ux/./src/common/DataFrame.js","webpack://quant-ux/./src/common/Dialog.js","webpack://quant-ux/./src/common/Grouping.js","webpack://quant-ux/./src/core/PerformanceMonitor.js","webpack://quant-ux/./src/dash/Analytics.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"VommondCheckBoxWrapper\"},[_vm._m(0),(_vm.label)?_c('span',{staticClass:\"VommondCheckBoxLabel\"},[_vm._v(_vm._s(_vm.label))]):_vm._e()])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"VommondCheckBox\"},[_c('span',{staticClass:\"VommondCheckBoxHook\",attrs:{\"data-dojo-attach-point\":\"hook\"}})])}]\n\nexport { render, staticRenderFns }","// eslint-disable-next-line\n<template>\n\t<div class=\"VommondCheckBoxWrapper\">\n\t\t<div class=\"VommondCheckBox\">\n\t\t\t<span class=\"VommondCheckBoxHook\" data-dojo-attach-point=\"hook\">\n\t\t\t</span>\n\t\t</div>\n\t\t<span class=\"VommondCheckBoxLabel\" v-if=\"label\">{{label}}</span>\n\t</div>\n</template>\n\n<style lang=\"scss\">\n @import '../style/vommond.scss';\n</style>\n\n<script>\nimport DojoWidget from 'dojo/DojoWidget'\nimport css from 'dojo/css'\nimport touch from 'dojo/touch'\nimport lang from 'dojo/_base/lang'\nimport on from 'dojo/on'\nimport Logger from 'common/Logger'\n\nexport default {\n  name: 'CheckBox',\n  mixins: [DojoWidget],\n  data: function () {\n    return {\n      checked: false\n    }\n  },\n  props: ['label', 'value'],\n  components: {\n  },\n  methods: {\n\t\tpostCreate (){\n\t\t\tthis.log = new Logger('CheckBox')\n\t\t\tthis.own(on(this.domNode, touch.press, lang.hitch(this, \"onChange\")));\n\t\t\tif(this.value || this.value === \"true\"){\n\t\t\t\tthis.setValue(true);\n\t\t\t}\n\t\t},\n\n\t\tgetValue (){\n\t\t\treturn this.checked;\n\t\t},\n\n\t\tsetValue (value){\n\t\t\tthis.checked = value;\n\t\t\tif(value){\n\t\t\t\tcss.add(this.domNode,\"VommondCheckBoxChecked\") ;\n\t\t\t} else {\n\t\t\t\tcss.remove(this.domNode,\"VommondCheckBoxChecked\") ;\n\t\t\t}\n\t\t},\n\n\t\tsetLabel (l){\n\t\t\tthis.label = l\n\t\t},\n\n\t\tonChange (e){\n\t\t\tthis.stopEvent(e)\n\t\t\tthis.setValue(!this.checked);\n\t\t\tthis.emit(\"change\", this.checked );\n\t\t\tthis.emit(\"input\", this.checked );\n\t\t}\n  },\n  watch: {\n\t\tvalue (v) {\n\t\t\tthis.setValue(v)\n\t\t}\n  },\n  mounted () {\n      this.log.log(10, 'mounted', 'enter')\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CheckBox.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CheckBox.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CheckBox.vue?vue&type=template&id=057d039e&\"\nimport script from \"./CheckBox.vue?vue&type=script&lang=js&\"\nexport * from \"./CheckBox.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CheckBox.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render, staticRenderFns\nimport script from \"./Util.vue?vue&type=script&lang=js&\"\nexport * from \"./Util.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"VommondSlideLeftButton\"},[_c('div',{staticClass:\"VommondSlideLeftButtonLabel\",attrs:{\"type\":\"button\",\"data-dojo-attach-point\":\"button\"}},[_c('span',{staticClass:\"MatcPointer mdi mdi-dots-horizontal\",attrs:{\"data-dojo-attach-point\":\"label\"}})]),_c('div',{staticClass:\"VommondSlideLeftPopup\",attrs:{\"data-dojo-attach-point\":\"popup\"}},[_c('div',{staticClass:\"VommondSlideLeftPopupCntr\",attrs:{\"data-dojo-attach-point\":\"cntr\"}})])])}]\n\nexport { render, staticRenderFns }","\n<template>\n  <div class=\"VommondSlideLeftButton\">\n\t\t<div type=\"button\" class=\"VommondSlideLeftButtonLabel\" data-dojo-attach-point=\"button\"> \n\t\t\t<span data-dojo-attach-point=\"label\" class=\"MatcPointer mdi mdi-dots-horizontal\"></span> \n\t\t</div>\n\t\t<div class=\"VommondSlideLeftPopup\" data-dojo-attach-point=\"popup\">\n\t\t\t<div class=\"VommondSlideLeftPopupCntr\" data-dojo-attach-point=\"cntr\">\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n<script>\nimport DojoWidget from 'dojo/DojoWidget'\nimport css from 'dojo/css'\nimport lang from 'dojo/_base/lang'\nimport on from 'dojo/on'\nimport touch from 'dojo/touch'\n\nexport default {\n    name: 'SlideLeftButton',\n\t\tmixins:[DojoWidget],\n    data: function () {\n        return {\n            value: false, \n            hasObjects: false, \n            updateLabel: true, \n            maxLabelLength: -1, \n            openCSS: \"VommondSlideLeftPopupOpen\", \n            labelCSS: \"VommondSlideLeftPopupOpenLabel\", \n            isOpen: false\n        }\n    },\n    components: {},\n    methods: {\n      postCreate: function(){\n\t\t\t\tthis._lis={};\n\t\t\t\tthis.own(on(this.button, touch.press, lang.hitch(this, \"toggleDropDown\")));\n\t\t\t},\t\t\n\t\t\t\n\t\t\ttoggleDropDown (e){\t\t\t\n\t\t\t\tthis.stopEvent(e);\t\t\n\t\t\t\tif(this.isOpen){\n\t\t\t\t\tcss.remove(this.domNode, this.openCSS);\t\t\n\t\t\t\t} else {\n\t\t\t\t\tcss.add(this.domNode, this.openCSS);\t\n\t\t\t\t}\n\t\t\t\tthis.isOpen = !this.isOpen;\n\t\t\t},\t\t\t\t\n\t\t\t\n\t\t\tsetOptions (list){\n\t\t\t\tthis._lis={};\n\t\t\t\tvar selectedValue = null;\n\t\t\t\tfor(var i=0; i < list.length; i++){\n\t\t\t\t\tvar o = list[i];\n\t\t\t\t\tvar li = document.createElement(\"a\");\t\t\n\t\t\t\t\tcss.add(li, \"VommondSlideLeftPopupOpenItem\");\n\t\t\t\t\tif((o.label || o.icon) && o.value!=null){\n\t\t\t\t\t\tthis.hasObjects = true;\n\t\t\t\t\t\tif(o.icon){\n\t\t\t\t\t\t\tvar icon = document.createElement(\"span\");\n\t\t\t\t\t\t\t// css.add(icon,this.iconCSS);\n\t\t\t\t\t\t\tcss.add(icon, o.icon);\n\t\t\t\t\t\t\tli.appendChild(icon);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(o.label){\n\t\t\t\t\t\t\tvar lbl = document.createElement(\"a\");\n\t\t\t\t\t\t\tcss.add(lbl,this.labelCSS);\n\t\t\t\t\t\t\tlbl.innerHTML=o.label;\n\t\t\t\t\t\t\tli.appendChild(lbl);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(o.selected){\n\t\t\t\t\t\t\tselectedValue = o.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(o.href){\n\t\t\t\t\t\t\tli.href=o.href;\n\t\t\t\t\t\t} else if(o.callback){\n\t\t\t\t\t\t\tthis.own(on(li, touch.press, o.callback));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.own(on(li, touch.press, lang.hitch(this, \"onChange\", o.value)));\n\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\tthis._lis[o.value] = li;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tli.innerHTML = o;\n\t\t\t\t\t\tthis._lis[o] = li;\n\t\t\t\t\t\tthis.own(on(li, touch.press, lang.hitch(this, \"onChange\", list[i])));\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\tthis.cntr.appendChild(li);\n\t\t\t\t}\t\t\t\t\n\t\t\t\tthis._options = list;\t\t\t\n\t\t\t\tif(selectedValue){\n\t\t\t\t\tthis.setValue(selectedValue);\n\t\t\t\t}\t\t\n\t\t\t},\n\t\t\t\n\t\t\tonChange (value, e){\t\n\t\t\t\tthis.stopEvent(e);\t\t\t\n\t\t\t\tthis.emit(\"change\", value ,e);\n\t\t\t}\n    }, \n    mounted () {\n    }\n}\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SlideLeftButton.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SlideLeftButton.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SlideLeftButton.vue?vue&type=template&id=5dbe8fc6&\"\nimport script from \"./SlideLeftButton.vue?vue&type=script&lang=js&\"\nexport * from \"./SlideLeftButton.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n<script>\nimport DojoWidget from \"dojo/DojoWidget\";\nimport lang from \"dojo/_base/lang\";\nimport css from \"dojo/css\";\nimport on from \"dojo/on\";\nimport win from \"dojo/_base/win\";\nimport DomBuilder from \"common/DomBuilder\";\nimport Layout from \"core/Layout\";\nimport ModelGeom from 'core/ModelGeom'\nimport ModelResizer from 'core/ModelResizer'\nimport ModelUtil from 'core/ModelUtil'\nimport PerformanceMonitor from 'core/PerformanceMonitor'\nimport * as DistributeUtil from 'core/DistributionUtil'\nimport SlideLeftButton from 'common/SlideLeftButton'\n\nvar Ring = {};\nvar ProgressBar = {};\nexport default {\n  name: \"Util\",\n  mixins: [Layout, DojoWidget],\n  data: function() {\n    return {\n      eventLabels: {\n        WidgetClick: \"Click\",\n        ScreenLoaded: \"View\",\n        ScreenClick: \"Click\",\n        WidgetChange: \"Change\",\n        ScreenScroll: \"Scroll\",\n        OverlayLoaded: \"View Overlay\",\n        OverlayRemoved: \"Removed Overlay\",\n        ValidationError: \"Widget ValiationError\",\n        ValidationErrorLine: \"Form Validation Error\",\n        ValidationOK: \"Validation OK\",\n        ScreenGesture: \"Gesture\",\n        WidgetGesture: \"Gesture\"\n      },\n      gestureLabels: {\n        swipeLeft: \"Swipe Left\",\n        swipeRight: \"Swipe Right\",\n        swipeUp: \"Swipe Up\",\n        swipeDown: \"Swipe Down\"\n      }\n    };\n  },\n  components: {},\n  methods: {\n\n    getIcons: function() {\n      return this._matcIcons;\n    },\n\n    fixGestures: function(events) {\n      events.sort(function(a, b) {\n        return a.time - b.time;\n      });\n      var device = null;\n      var error = 0;\n      for (var i = 0; i < events.length; i++) {\n        var event = events[i];\n        if (event.type == \"SessionStart\") {\n          device = event.device;\n        }\n\n        if (event.type == \"ScreenGesture\" && event.gesture) {\n          if (event.gesture.start && event.gesture.start.x > 1) {\n            if (device) {\n              event.gesture.start.x = Math.min(\n                0.99,\n                event.gesture.start.x / device.w\n              );\n              event.gesture.start.y = Math.min(\n                0.99,\n                event.gesture.start.y / device.h\n              );\n              error++;\n            }\n          }\n          if (event.gesture.end && event.gesture.end.x > 1) {\n            if (device) {\n              event.gesture.end.x = Math.min(\n                0.99,\n                event.gesture.end.x / device.w\n              );\n              event.gesture.end.y = Math.min(\n                0.99,\n                event.gesture.end.y / device.h\n              );\n              error++;\n            }\n          }\n          if (event.gesture.start) {\n            event.x = event.gesture.start.x;\n            event.y = event.gesture.start.y;\n          }\n        }\n        if (event.x > 1 || event.y > 1) {\n          console.warn(\"fixGestures() > exit. No device, could not fix! \");\n        }\n      }\n      if (error) {\n        console.debug(\"fixGestures() > exit. Fixed Errors: \", error);\n      }\n    },\n\n    /**********************************************************************\n     * Distribute Tool\n     **********************************************************************/\n    _distributedPositions (type, ids, boundingBox) {\n        return DistributeUtil.distributedPositions(this.model, type, ids, boundingBox)\n    },\n\n\n    /**********************************************************************\n     * Clone Tool\n     **********************************************************************/\n    getClones: function(ids, target) {\n      var result = [];\n      var previews = [];\n\n      // 1) get bounding box\n      var boudingBox = this.getBoundingBox(ids);\n\n      var xFactor = 1;\n      if (boudingBox.x > target.x) {\n        xFactor = -1;\n      }\n\n      var yFactor = 1;\n      if (boudingBox.y > target.y) {\n        yFactor = -1;\n      }\n\n      var xCount = Math.floor(target.w / boudingBox.w);\n      var yCount = Math.floor(target.h / boudingBox.h);\n      var xSpace = Math.round(\n        (target.w - xCount * boudingBox.w) / Math.max(1, xCount - 1)\n      );\n      var ySpace = Math.round(\n        (target.h - yCount * boudingBox.h) / Math.max(1, yCount - 1)\n      );\n      //console.debug(\"getClones > x: \", xCount,xSpace, \" y:\", yCount, ySpace, \" >> bb: \", boudingBox.w, boudingBox.h, boudingBox.y)\n\n      var offSets = {};\n      for (let i = 0; i < ids.length; i++) {\n        let id = ids[i];\n        var box = this.getBoxById(id);\n        offSets[id] = {\n          x: box.x - boudingBox.x,\n          y: box.y - boudingBox.y,\n          box: box\n        };\n      }\n\n      // now create grid but not at 0,0\n      var count = 0;\n      for (let x = 0; x < xCount; x++) {\n        for (let y = 0; y < yCount; y++) {\n          if (x != 0 || y != 0) {\n            let id;\n            for (let i = 0; i < ids.length; i++) {\n              id = ids[i];\n              var offset = offSets[id];\n              //console.debug(id,offset.x, offset.y , offset.box.h + ySpace + offset.y)\n              var clone = {\n                w: boudingBox.w,\n                h: boudingBox.h,\n                x: boudingBox.x + (x * (boudingBox.w + xSpace) + offset.x) * xFactor,\n                y: boudingBox.y + (y * (boudingBox.h + ySpace) + offset.y) * yFactor,\n                z: offset.box.z,\n                group: count,\n                cloneOff: id\n              };\n              result.push(clone);\n            }\n            /**\n             * FIXME: Should this be in the loop?\n             */\n            var preview = {\n              w: boudingBox.w,\n              h: boudingBox.h,\n              x: boudingBox.x + x * (boudingBox.w + xSpace) * xFactor,\n              y: boudingBox.y + y * (boudingBox.h + ySpace) * yFactor,\n              z: 0,\n              cloneOff: id\n            };\n            previews.push(preview);\n            count++;\n          }\n        }\n      }\n      return {\n        previews: previews,\n        clones: result\n      };\n    },\n\n    /**********************************************************************\n     * Bounding Box\n     **********************************************************************/\n\n\n    /**\n     * Gets the new position for a group child\n     */\n    _getGroupChildResizePosition: function(widget, oldGroup, newGroup, dif) {\n      return ModelResizer.getGroupChildResizePosition(widget, oldGroup, newGroup, dif)\n    },\n\n    getObjectFromArray (list, key) {\n      console.error('Util.vue .getObjectFromArray() > DEPRECATED!')\n      return ModelUtil.getObjectFromArray(list, key)\n    },\n\n\n    getWidgetsByDistanceAndType: function(widget, types) {\n      var result = [];\n\n      if (this.model) {\n        let screen = this.getParentScreen(widget);\n        let children = screen.children;\n\n        for (let i = 0; i < children.length; i++) {\n          let widgetID = children[i];\n\n          if (widgetID != widget.id) {\n            let childWidget = this.model.widgets[widgetID];\n            var type = childWidget.type;\n            if (types.indexOf(type) >= 0) {\n              result.push({\n                d: 0,\n                y: childWidget.y,\n                w: childWidget\n              });\n            }\n          }\n        }\n        result.sort(function(a, b) {\n          return a.y - b.y;\n        });\n      }\n\n      return result;\n    },\n\n    getObjectLength: function(o) {\n      if (o) {\n        return Object.keys(o).length;\n      } else {\n        return 0;\n      }\n    },\n\n    getEventStateLabel: function(state) {\n      if (state.type == \"hidden\") {\n        /**\n         * A little hacky\n         */\n        if (state.options.hidden) {\n          return \"Hide Password\";\n        } else {\n          return \"Show Password\";\n        }\n      }\n      if (state.type == \"text\" || state.type == \"typing\") {\n        return \"Change Text\";\n      }\n      if (state.type == \"checked\") {\n        if (state.value) {\n          return \"Checked\";\n        } else {\n          return \"Unchecked\";\n        }\n      }\n\n      if (state.type == \"open\") {\n        return \"Open\";\n      }\n\n      \n      if (state.type == \"select\") {\n        return \"Select\";\n      }\n\n      if (state.type == \"pos\") {\n        return \"Move\";\n      }\n\n      if (state.type == \"open\") {\n        return \"Open Popup\";\n      }\n\n      if (state.type == \"navigate\") {\n        return \"Popup Click\";\n      }\n      return \"Change\";\n    },\n\n    getGestureLabel: function(type) {\n      if (this.gestureLabels[type]) {\n        return this.gestureLabels[type];\n      }\n      return type;\n    },\n\n    getEventLabel (type) {\n      if (this.eventLabels[type]) {\n        return this.eventLabels[type];\n      }\n      return type;\n    },\n\n    getScreenName (screenID, shortenIfNeeded = false) {\n      if (this.model.screens[screenID] && this.model.screens[screenID].name) {\n        let name = this.model.screens[screenID].name;\n        if (shortenIfNeeded && name.length > 16) {\n          name = name.substring(0, 16) + '...'\n        } \n        return name\n      }\n      return screenID;\n    },\n    \n\n    getWidgetName: function(widgetID) {\n      if (this.model.widgets[widgetID] && this.model.widgets[widgetID].name) {\n        return this.model.widgets[widgetID].name;\n      }\n      return widgetID;\n    },\n\n    /**\n     * Filters out bad sessions\n     */\n    filterEvents: function(events, anno) {\n      var bad = {};\n      for (let i = 0; i < anno.length; i++) {\n        var a = anno[i];\n        if (!a.isValid) {\n          bad[a.reference] = true;\n        }\n      }\n\n      var temp = [];\n      var l = events.length;\n      for (let i = 0; i < l; i++) {\n        var e = events[i];\n        if (!bad[e.session]) {\n          temp.push(e);\n        }\n      }\n\n      return temp;\n    },\n\n    /**\n     * Returns all actionable events\n     */\n    getActionEvents (df) {\n      PerformanceMonitor.start('Util.getActionEvents()')\n      const result = df.select(\"type\", \"in\", [\n        \"ScreenClick\",\n        \"WidgetClick\",\n        \"WidgetChange\",\n        \"ValidationError\",\n        \"ValidationErrorLine\",\n        \"ScreenLoaded\",\n        \"OverlayLoaded\",\n        \"OverlayRemoved\",\n        \"ScreenGesture\",\n        \"WidgetGesture\"\n      ]);\n      PerformanceMonitor.end('Util.getActionEvents()')\n      return result\n    },\n\n    /**\n     * Returns all click events\n     */\n    getClickEvents: function(df) {\n      return df.select(\"type\", \"in\", [\n        \"ScreenClick\",\n        \"WidgetClick\",\n        \"WidgetChange\"\n      ]);\n    },\n\n    createEmptyImage: function(x, y, name) {\n      return {\n        type: \"Image\",\n        name: name,\n        x: x,\n        y: y,\n        w: 100,\n        h: 100,\n        z: 0,\n        props: {},\n        has: {\n          onclick: true,\n          backgroundImage: true,\n          border: true\n        },\n        actions: {},\n        style: {\n          borderTopRightRadius: 0,\n          borderTopLeftRadius: 0,\n          borderBottomRightRadius: 0,\n          borderBottomLeftRadius: 0,\n          borderTopWidth: 0,\n          borderBottomWidth: 0,\n          borderRightWidth: 0,\n          borderLeftWidth: 0,\n          borderTopColor: \"#333333\",\n          borderBottomColor: \"#333333\",\n          borderRightColor: \"#333333\",\n          borderLeftColor: \"#333333\",\n          backgroundImage: null\n        }\n      };\n    },\n\n    createEmptyScreen: function(x, y, name) {\n      return {\n        x: x,\n        y: y,\n        h: this.model.screenSize.h,\n        w: this.model.screenSize.w,\n        name: name,\n        type: \"Screen\",\n        style: {\n          background: \"#ffffff\"\n        },\n        min: {\n          w: this.model.screenSize.w,\n          h: this.model.screenSize.h\n        },\n        has: {\n          image: true\n        },\n        props: {\n          start: false\n        },\n        children: []\n      };\n    },\n\n    getAppTypeIcon (model) {\n      if (model.type == \"smartphone\") {\n        return \"mdi mdi-crop-portrait\";\n      } else if (model.type == \"tablet\") {\n        return \"mdi mdi-crop-landscape\";\n      }\n      return \"mdi mdi-crop-landscape\";\n    },\n\n    getDomain: function() {\n      var host = window.location.hostname;\n      if (host == \"127.0.0.1\" || host == \"flowalytics.com\") {\n        return \"flowalytics.com\";\n      }\n      return \"quant-ux.com\";\n    },\n\n    /***************************************************************************\n     * Render helper  functios\n     ***************************************************************************/\n\n    ring: function(label, value, p, node, size, color) {\n      if (!size) {\n        size = 200;\n      }\n\n      if (!color) {\n        color = this.RING_BACKGROUND;\n      }\n\n      var ring = this.$new(Ring);\n      ring.width = 10;\n      ring.size = size;\n      ring.color = this.RING_FOREGROUND;\n      ring.backgroundColor = color;\n      ring.setLabel(label);\n      ring.setValue(value);\n      ring.setPs(p);\n      ring.placeAt(node);\n\n      return ring;\n    },\n\n    simpleStats: function(label, mean, std, node) {\n      var db = this.getDB();\n      var cntr = db.div(\"MatcDashNumberContainer\").build(node);\n      db.div(\"MatcDashLabel\", label).build(cntr);\n      db.div(\"MatcDashNumber\", mean + \" \").build(cntr);\n      db.div(\"MatcDashLabelHint\", \"+/- \" + std).build(cntr);\n\n      //node.appendChild(cntr);\n    },\n\n    getDB: function() {\n      if (!this.domBuilder) {\n        this.domBuilder = new DomBuilder();\n      }\n      return this.domBuilder;\n    },\n\n    progress: function(label, value, p, id) {\n      var node = document.getElementById(id);\n\n      var row = document.createElement(\"div\");\n      css.add(row, \"row\");\n      node.appendChild(row);\n\n      var col = document.createElement(\"div\");\n      css.add(col, \"col-md-4\");\n      row.appendChild(col);\n\n      var lbl = document.createElement(\"span\");\n      lbl.innerHTML = label;\n      col.appendChild(lbl);\n\n      col = document.createElement(\"div\");\n      css.add(col, \"col-md-8\");\n      row.appendChild(col);\n\n      var bar = this.$new(ProgressBar);\n      bar.color = this.PROGRESS_COLOR;\n      bar.placeAt(col);\n      bar.setValue(p);\n\n      return bar;\n    },\n\n\n    bulletGraph: function(row, value, emptyMsg) {\n      var db = this.getDB();\n\n      for (var i = 0; i < value.length; i++) {\n        var item = value[i];\n\n        var tr = db.div().build(row);\n        db.div(\"MatcDashCompareTableLabelSmall\", item.label).build(tr);\n        var tdProgress = db.div(\"\").build(tr);\n        css.add(tdProgress, \"MatcDashCompareTableGraph\");\n        var bar = this.$new(ProgressBar);\n        bar.color = this.PROGRESS_COLOR;\n        bar.placeAt(tdProgress);\n        bar.setValue(item.p);\n\n        if (!item.empty) {\n          bar.setLabel(item.a);\n        } else {\n          if (emptyMsg) {\n            bar.setLabel(emptyMsg);\n          }\n        }\n      }\n    },\n\n    bulletGraphTable: function(row, value, emptyMsg) {\n      var db = this.getDB();\n\n      var tbody = db\n        .table(\" MatcDashCompareTable\")\n        .tbody()\n        .build(row);\n\n      for (var i = 0; i < value.length; i++) {\n        var item = value[i];\n\n        var tr = db.tr().build(tbody);\n        db.td(\"MatcDashCompareTableLabel\", item.label).build(tr);\n        var tdProgress = db.td(\"\").build(tr);\n        if (!item.empty) {\n          css.add(tdProgress, \"MatcDashCompareTableGraph\");\n          var bar = this.$new(ProgressBar);\n          bar.color = true;\n          bar.placeAt(tdProgress);\n          bar.setValue(item.p);\n          bar.setLabel(item.a);\n        } else {\n          if (emptyMsg) {\n            db.span(\"MatcHint MatcLeft\", emptyMsg).build(tdProgress);\n          }\n        }\n      }\n    },\n\n    createUserImage: function(user, parent) {\n      var imgCntr = document.createElement(\"div\");\n      css.add(imgCntr, \"MatcUserImageCntr\");\n      parent.appendChild(imgCntr);\n\n      if (!user || user.role == \"guest\") {\n        let img = document.createElement(\"div\");\n        css.add(img, \"MatcCommentGuest\");\n        img.innerHTML = '<span class=\"mdi mdi-account\"></span>';\n        imgCntr.appendChild(img);\n      } else if (user.image) {\n        css.add(imgCntr, \"MatcUserImageCntrTrans\");\n\n        let img = document.createElement(\"img\");\n        img.src = \"/rest/user/\" + user.id + \"/images/\" + user.name + \"_\" + user.lastname + \"/\" + user.image;\n        css.add(img, \"MatcUserImage\");\n        imgCntr.appendChild(img);\n      } else {\n        let img = document.createElement(\"div\");\n        css.add(img, \"MatcUserImageNone\");\n        var span = document.createElement(\"span\");\n        img.appendChild(span);\n        css.add(span, \"MatcMiddle MatcUserLetters\");\n        span.innerHTML = this.getUserLetter(user);\n        imgCntr.appendChild(img);\n      }\n\n      return imgCntr;\n    },\n\n    getCommentUserName: function(comment) {\n      if ((comment.user && comment.user.name) || comment.user.lastname) {\n        return this.getUserName(comment.user);\n      }\n      return \"Guest\";\n    },\n\n    getUserLetter: function(user) {\n      let result = ''\n      if (user.name) {\n        result += user.name.substring(0, 1).toUpperCase();\n        if (user.lastname) {\n          result += user.lastname.substring(0, 1).toUpperCase();\n        }\n      } else {\n        let parts = user.email.split('.')\n        if (parts.length > 0) {\n          result += parts[0].substring(0, 1).toUpperCase();\n        }\n        if (parts.length > 1) {\n          result += parts[1].substring(0, 1).toUpperCase();\n        }\n      }\n      return result\n    },\n\n    getUserName: function(user) {\n      var result = \"\";\n      if (user.name) {\n        result = user.name + \" \";\n      }\n      if (user.lastname) {\n        result += user.lastname;\n      }\n      if (result.length == 0) {\n        result = user.email;\n      }\n\n      return result;\n    },\n\n    resizeSimulatorContainer: function(model, container, factor) {\n      console.error('Util.resizeSimulatorContainer() > DEPRECATED')\n      css.add(container, \"MatchSimulatorContainer\");\n\n      var pos;\n      if (model.type == \"desktop\") {\n        pos = win.getBox();\n        pos.w = pos.w * factor;\n        pos.h = pos.h * factor;\n        pos = this.getScaledSize(pos, \"width\", model);\n        container.style.width = Math.round(pos.w) + \"px\";\n        container.style.height = Math.round(pos.h) + \"px\";\n      } else {\n        pos = { w: 150, h: 400 };\n        pos = win.getBox();\n        pos.w = pos.w * factor;\n        pos.h = pos.h * factor;\n\n        pos = this.getScaledSize(pos, \"height\", model);\n\n        container.style.width = Math.ceil(pos.w) + \"px\";\n        container.style.height = Math.ceil(pos.h) + \"px\";\n      }\n\n      return pos;\n    },\n\n    /**\n     * TODO: Could go to canvas/Comment.vue\n     */\n    renderCommentPopup: function(comment, user, cntr, db, canDelete) {\n      css.add(cntr, \"MatcActionBox\");\n\n      var li = db.div(\"MatcMarginBottom\").build(cntr);\n\n      var item = db.div(\"MatcCommentRow\").build(li);\n\n      var pic = this.createUserImage(comment.user, item);\n      css.add(pic, \"MatcUserImageCntrSmall MatcCommentPic\");\n\n      var txt = db.div(\"MatcCommentText\").build(item);\n\n      db.div(\"MatcFloatClear\").build(li);\n\n      var meta = db.div(\"MatcCommentMeta\").build(txt);\n\n      db.div(\"MatcCommentMeta\", this.getCommentUserName(comment)).build(meta);\n\n      db.div(\"MatcCommentTime\", this.formatDate(comment.created)).build(meta);\n\n      if (comment.userID == user.id) {\n        let txtarea = db\n          .textarea(\"form-control MatcIgnoreOnKeyPress\", comment.message)\n          .build(cntr);\n        txtarea.setAttribute(\"data-gramm_editor\", false);\n\n        if (comment.id) {\n          css.add(txtarea, \"vommondInlineEdit\");\n        } else {\n          txtarea.focus();\n        }\n\n        let bar = db.div(\"MatcButtonBar MatcMarginTopL\").build(cntr);\n\n        if (comment.id) {\n          /**\n           * Create a save button that will only show if people start editing...\n           */\n          var saveBtn = db.a(\"MatcButton MatcButtonPrimary\", \"Update\").build(bar);\n          this.tempOwn(on(saveBtn,\"mousedown\",lang.hitch(this, \"onSaveComment\", txtarea, comment)));\n\n          let close = db.a(\"MatcLinkButton\", \"Close\").build(bar);\n          this.tempOwn(on(close,\"mousedown\", lang.hitch(this, \"onCloseCommentPopup\", comment)));\n\n          let s = this.$new(SlideLeftButton);\n          s.placeAt(cntr);\n          s.setOptions([\n            {\n              value: \"edit\",\n              icon: \"mdi mdi-comment-edit-outline\",\n              callback: function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n                txtarea.focus();\n                txtarea.select();\n              }\n            },\n            {\n              value: \"delete\",\n              icon: \"mdi mdi-trash-can-outline\",\n              callback: lang.hitch(this, \"onDeleteComment\", comment)\n            }\n          ]);\n        } else {\n          let create = db.a(\"MatcButton MatcButtonPrimary\", \"Create\").build(bar);\n          this.tempOwn(on(create,\"mousedown\",lang.hitch(this, \"onSaveComment\", txtarea, comment)));\n          let close = db.a(\"MatcLinkButton\", \"Close\").build(bar);\n          this.tempOwn(on(close,\"mousedown\",lang.hitch(this, \"onCloseCommentPopup\", comment)));\n        }\n      } else {\n        if (canDelete) {\n          let s = this.$new(SlideLeftButton);\n          s.placeAt(cntr);\n          s.setOptions([\n            {\n              value: \"delete\",\n              icon: \"mdi mdi-trash-can-outline\",\n              callback: lang.hitch(this, \"onDeleteComment\", comment)\n            }\n          ]);\n        }\n\n        db.div(\"MatcCommentMessage\", comment.message).build(cntr);\n        let bar = db.div(\"MatcButtonBar MatcMarginTopL\").build(cntr);\n        let close = db.a(\"MatcLinkButton\", \"Close\").build(bar);\n        this.tempOwn(\n          on(\n            close,\n            \"mousedown\",\n            lang.hitch(this, \"onCloseCommentPopup\", comment)\n          )\n        );\n      }\n    },\n\n    /***************************************************************************\n     * Model access and query functions\n     ***************************************************************************/\n\n    getWidgets: function(screenID, filter) {\n      var result = [];\n      if (screenID) {\n        var screen = this.model.screens[screenID];\n        if (screen) {\n          var children = screen.children;\n          for (let i = 0; i < children.length; i++) {\n            let widgetID = children[i];\n            let widget = this.model.widgets[widgetID];\n\n            if (widget) {\n              result.push(widget);\n            }\n          }\n        }\n      } else {\n        for (let id in this.model.widgets) {\n          let widget = this.model.widgets[id];\n          result.push(widget);\n        }\n      }\n\n      result.sort(function(a, b) {\n        return a.y - b.y;\n      });\n\n      if (filter) {\n        var temp = [];\n        for (let i = 0; i < result.length; i++) {\n          if (filter(result[i])) {\n            temp.push(result[i]);\n          }\n        }\n        result = temp;\n      }\n\n      return result;\n    },\n\n    /**\n     * returns screen from left to right!\n     */\n    getScreens: function(app) {\n      if (!app) {\n        app = this.model;\n      }\n\n      var result = [];\n      for (let id in app.screens) {\n        var screen = app.screens[id];\n        result.push(screen);\n      }\n\n      /**\n       * we order by screen flow!\n       */\n      result.sort(function(a, b) {\n        return a.x - b.x;\n      });\n\n      return result;\n    },\n\n    getClickableWidgets: function(screen) {\n      var result = [];\n      var children = screen.children;\n      for (let i = 0; i < children.length; i++) {\n        let widgetID = children[i];\n        let widget = this.model.widgets[widgetID];\n        if (this.isClickable(widget)) {\n          result.push(widget);\n        }\n      }\n\n      result.sort(function(a, b) {\n        return a.y - b.y;\n      });\n\n      return result;\n    },\n\n    getModelChildren: function(screen) {\n      var result = [];\n\n      for (let id in this.model.widgets) {\n        let pos = screen.children.indexOf(id);\n        if (pos >= 0) {\n          result.push(this.model.widgets[id]);\n        }\n      }\n\n      return result;\n    },\n\n    getWidgetsWithoutParent: function() {\n      var result = [];\n\n      var temp = [];\n      for (let id in this.model.screens) {\n        var screen = this.model.screens[id];\n        temp = temp.concat(screen.children);\n      }\n\n      for (let id in this.model.widgets) {\n        var pos = temp.indexOf(id);\n        if (pos < 0) {\n          result.push(this.model.widgets[id]);\n        }\n      }\n\n      return this.getOrderedWidgets(result);\n    },\n\n    getBoxById: function(id) {\n      if (this.model.widgets[id]) {\n        return this.model.widgets[id];\n      }\n\n      if (this.model.screens[id]) {\n        return this.model.screens[id];\n      }\n\n      if (this.model.templates && this.model.templates[id]) {\n        return this.model.templates[id];\n      }\n\n      /**\n       * Ok, there seems to be an inherited model id???\n       *\n       *\n       */\n      if (!id || !id.split) {\n        console.debug(\"getBoxById() > ID is wrong: \" + id);\n        return null;\n      }\n      var parts = id.split(\"@\");\n      if (parts.length == 2) {\n        var widgetID = parts[0];\n        var screenID = parts[1];\n\n        var screen = this.model.screens[screenID];\n        var parentWidget = this.model.widgets[widgetID];\n        if (screen && parentWidget) {\n          var parentScreen = this.getHoverScreen(parentWidget);\n\n          var difX = parentScreen.x - screen.x;\n          var difY = parentScreen.y - screen.y;\n\n          var copiedParentWidget = lang.clone(parentWidget);\n\n          /**\n           * Super important the ID mapping!!\n           */\n          copiedParentWidget.id = id;\n          copiedParentWidget.inherited = parentWidget.id;\n          copiedParentWidget.inheritedOrder = 1;\n\n          /**\n           * Now lets also put it at the right position!\n           */\n          copiedParentWidget.x -= difX;\n          copiedParentWidget.y -= difY;\n\n          return copiedParentWidget;\n        } else {\n          console.warn(\n            \"getBoxById() > No screen or widget for inherited id \",\n            id\n          );\n        }\n      }\n\n      return null;\n    },\n\n    /***************************************************************************\n     * Line helpers\n     ***************************************************************************/\n\n    getToLines: function(box) {\n      var result = [];\n\n      for (var id in this.model.lines) {\n        var line = this.model.lines[id];\n        if (line.to == box.id) {\n          result.push(line);\n        }\n      }\n\n      return result;\n    },\n\n    getLines: function(box, deep) {\n      var result = [];\n\n      var _ids = {};\n\n      for (let id in this.model.lines) {\n        let line = this.model.lines[id];\n        if (line.to == box.id || line.from == box.id) {\n          result.push(line);\n          _ids[line.id] = true;\n        }\n      }\n\n      if (box.children && deep) {\n        for (let i = 0; i < box.children.length; i++) {\n          let childID = box.children[i];\n          for (let id in this.model.lines) {\n            let line = this.model.lines[id];\n            if (!_ids[line.id]) {\n              if (line.from == childID || line.to == childID) {\n                result.push(line);\n              }\n            }\n          }\n        }\n      }\n\n      return result;\n    },\n\n    hasLine: function(widget) {\n      for (let id in this.model.lines) {\n        let line = this.model.lines[id];\n        if (line.from == widget.id) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    getLine: function(widget) {\n      for (let id in this.model.lines) {\n        let line = this.model.lines[id];\n        if (line.from == widget.id) {\n          return line;\n        }\n      }\n      return null;\n    },\n\n    /**\n     * For all line drawing this function returns the widget, or in case of an\n     * group the bounding box!\n     */\n    getFromBox (line) {\n      let fromPos = this.model.widgets[line.from];\n\n      if (!fromPos) {\n        fromPos = this.model.screens[line.from];\n      }\n\n      if (!fromPos && this.model.groups) {\n        /**\n         * no widget, must be a group\n         */\n        const group = this.model.groups[line.from];\n        if (group) {\n          const children = this.getAllGroupChildren(group)\n          fromPos = this.getBoundingBox(children);\n        }\n      }\n\n      return fromPos;\n    },\n\n    getToBox (line) {\n      var to = this.model.screens[line.to];\n      if (!to) {\n        to = this.model.widgets[line.to];\n      }\n\n      if (!to && line.isGroup && this.model.groups) {\n        /**\n         * no widget, must be a group\n         */\n        var group = this.model.groups[line.to];\n        if (group) {\n          to = this.getBoundingBox(group.children);\n        }\n      }\n      return to;\n    },\n\n    /***************************************************************************\n     * template stuff\n     ***************************************************************************/\n\n    getTemplateGroupOrderChildren (group) {\n      /**\n       * render children, and order by\n       * z values\n       */\n      let children = [];\n      for (var i = 0; i < group.children.length; i++) {\n        const id = group.children[i];\n        const child = this.model.templates[id];\n        children.push(child);\n      }\n      /**\n       * oder by z values\n       */\n      children = this.getOrderedWidgets(children);\n\n      return children;\n    },\n\n    /***************************************************************************\n     * UI Geometrix helpers\n     ***************************************************************************/\n\n    getBoundingBox (ids) {\n      return ModelGeom.getBoundingBox(ids, this.model)\n    },\n\n    getBoundingBoxByBoxes (boxes) {\n       return ModelGeom.getBoundingBoxByBoxes(boxes)\n    },\n\n    /**\n     * Returns for a box if it is on any of the screens\n     */\n    getHoverScreen (box) {\n      return ModelGeom.getHoverScreen(box, this.model);\n    },\n\n    _getHoverScreen (box, model) {\n      return ModelGeom.getHoverScreen(box, model);\n    },\n\n    _isBoxChild (obj, parent) {\n      // http://stackoverflow.com/questions/13390333/two-rectangles-intersection\n      if (\n        obj.x + obj.w < parent.x ||\n        parent.x + parent.w < obj.x ||\n        obj.y + obj.h < parent.y ||\n        parent.y + parent.h < obj.y\n      ) {\n        return false;\n      }\n      return true;\n    },\n\n    _isContainedInBox: function(obj, parent) {\n      if (parent) {\n        if (\n          obj.x >= parent.x &&\n          obj.x + obj.w <= parent.w + parent.x &&\n          (obj.y >= parent.y && obj.y + obj.h <= parent.y + parent.h)\n        ) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /***************************************************************************\n     * Object Compare and Change functios\n     ***************************************************************************/\n\n    countProps: function(obj) {\n      var count = 0;\n      for (let k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          count++;\n        }\n      }\n      return count;\n    },\n\n    objectEquals: function(v1, v2) {\n      if (typeof v1 !== typeof v2) {\n        return false;\n      }\n\n      if (typeof v1 === \"function\") {\n        return v1.toString() === v2.toString();\n      }\n\n      if (v1 instanceof Object && v2 instanceof Object) {\n        if (this.countProps(v1) !== this.countProps(v2)) {\n          return false;\n        }\n        var r = true;\n        for (let k in v1) {\n          r = this.objectEquals(v1[k], v2[k]);\n          if (!r) {\n            return false;\n          }\n        }\n        return true;\n      } else {\n        if (v1 === v2) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    },\n\n    /***************************************************************************\n     * Helper functios\n     ***************************************************************************/\n\n    round: function(value) {\n      return Math.round(value * 100) / 100;\n    },\n\n    formatTime: function(millis) {\n      millis = Math.round(millis / 1000);\n      return millis + \"s\";\n    },\n\n    formatSTD: function(value) {\n      return (\n        '<span class=\"MatcDashTableTdHint\">( +/- ' +\n        this.formatNumber(value) +\n        \")</span>\"\n      );\n    },\n\n    formatRound: function(value) {\n      return Math.round(value * 100) / 100;\n    },\n\n    formatNumber: function(value) {\n      if (value > 1000000) {\n        value = Math.floor(value / 1000000) + \"M\";\n        return value;\n      }\n\n      if (value > 1000) {\n        value = Math.floor(value / 1000) + \"K\";\n        return value;\n      }\n\n      if (value > 100) {\n        value = Math.floor(value);\n        return value;\n      }\n\n      value = Math.round(value * 10) / 10.0;\n      return value;\n    },\n\n    formatPercent: function(value) {\n      value = Math.round(value * 100);\n      var cls = \"MatchDashStatusFailure\";\n      if (value > 70) {\n        cls = \"MatchDashStatusSuccess\";\n      } else if (value > 35) {\n        cls = \"MatchDashStatusOK\";\n      }\n      return '<span class=\"' + cls + '\">' + value + \"%</span>\";\n    },\n\n    formatDate: function(t, justDate) {\n      var date = new Date(t);\n      if (justDate) {\n        return date.toLocaleDateString();\n      }\n      return date.toLocaleString();\n    },\n\n    formatString: function(s, l) {\n      if (s.length > l) {\n        s = s.substring(0, l - 3) + \"...\";\n      }\n      return s;\n    },\n\n    /***************************************************************************\n     * Layer helpers\n     ***************************************************************************/\n\n    /**\n     * Method to make the z-values pretty and ensure that the z values\n     * are consequtive!\n     */\n    getNormalizeWidgetZValues (values) {\n      /**\n       * convert values to a sorted list!\n       */\n      const list = [];\n      for (var id in values) {\n        list.push({\n          id: id,\n          z: values[id]\n        });\n      }\n      this.sortWidgetList(list);\n\n      let z = 0;\n      let lastZ = null;\n      const result = {};\n      for (let i = 0; i < list.length; i++) {\n        let w = list[i];\n        if (lastZ === null || lastZ != w.z) {\n          z++;\n          lastZ = w.z;\n        }\n        result[w.id] = z;\n      }\n\n      return result;\n    },\n\n    getMinZValue (widgets) {\n      var min = 100000;\n      var l = 0;\n      for (var id in widgets) {\n        var w = widgets[id];\n        min = Math.min(w.z, min);\n        l++;\n      }\n      if (l > 0) {\n        return min;\n      } else {\n        return 0;\n      }\n    },\n\n    getMaxZValue (widgets) {\n      var max = -10000;\n\n      var l = 0;\n      for (var id in widgets) {\n        var w = widgets[id];\n        max = Math.max(w.z, max);\n        l++;\n      }\n\n      if (l > 0) {\n        return max;\n      } else {\n        return 0;\n      }\n    },\n\n    getZValues (widgets) {\n      var values = {};\n      for (var id in widgets) {\n        var widget = widgets[id];\n        this.fixMissingZValue(widget);\n        values[id] = widget.z;\n      }\n      return values;\n    }\n  },\n  mounted() {}\n};\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Util.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Util.vue?vue&type=script&lang=js&\"","import Grouping from './Grouping'\n\nexport default class DataFrame {\n\n\tconstructor(data) {\n\t\tthis.data = data\n\t\tthis._isDataFrame = true\n\t}\n\n\tas_array() {\n\t\tif (this.data.length) {\n\t\t\treturn this.data;\n\t\t} else {\n\t\t\tvar result = [];\n\t\t\tthis.foreach(function (row) {\n\t\t\t\tresult.push(row);\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tas_dict(key) {\n\t\tconst arr = this.as_array()\n\t\tconst result = {}\n\t\tarr.forEach(row => {\n\t\t\tresult[row[key]] = row\n\t\t})\n\t\treturn result\n\t}\n\n\tpush(row) {\n\t\tif (this.data.push) {\n\t\t\tthis.data.push(row);\n\t\t} else {\n\t\t\tconsole.warn(\"Data is not array. cannot push\");\n\t\t}\n\t}\n\n\n\tselect(column, operator, value) {\n\n\t\tconst result = [];\n\t\tlet inLookup = null\n\t\tif (operator === 'in') {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tinLookup = {}\n\t\t\t\tvalue.forEach(v => {\n\t\t\t\t\tinLookup[v] = true\n\t\t\t\t})\t\t\t\t\n\t\t\t}\n\t\t}\n\n\t\tthis.foreach(function (row) {\n\n\t\t\tconst v = row[column];\n\n\t\t\tswitch (operator) {\n\t\t\t\tcase \"==\":\n\t\t\t\t\tif (v == value) {\n\t\t\t\t\t\tresult.push(row);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \">=\":\n\t\t\t\t\tif (v >= value) {\n\t\t\t\t\t\tresult.push(row);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"<=\":\n\t\t\t\t\tif (v <= value) {\n\t\t\t\t\t\tresult.push(row);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \">\":\n\t\t\t\t\tif (v > value) {\n\t\t\t\t\t\tresult.push(row);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"<\":\n\t\t\t\t\tif (v < value) {\n\t\t\t\t\t\tresult.push(row);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"!=\":\n\t\t\t\t\tif (v != value) {\n\t\t\t\t\t\tresult.push(row);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"in\":\n\t\t\t\t\tif (inLookup && inLookup[v]) {\n\t\t\t\t\t\tresult.push(row);\n\t\t\t\t\t} else if (value.indexOf(v) >= 0) {\n\t\t\t\t\t\tresult.push(row);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t\treturn new DataFrame(result);\n\n\t}\n\n\tcolumns() {\n\t\tvar result = [];\n\t\tfor (let i in this.data) {\n\t\t\tlet row = this.data[i];\n\t\t\tfor (let c in row) {\n\t\t\t\tresult.push(c);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\treturn new DataFrame(result);\n\t}\n\n\tshape() {\n\t\tvar l = this.size();\n\t\tvar count = 0;\n\t\tfor (let i in this.data) {\n\t\t\tlet row = this.data[i];\n\t\t\t// could be done with objetc count...\n\t\t\tfor (let c in row) { // eslint-disable-line no-unused-vars\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tif (count == 0) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\treturn [l, count];\n\t}\n\n\tlength() {\n\t\treturn this.size();\n\t}\n\n\tsize() {\n\t\tif (this.data && this.data.length) {\n\t\t\treturn this.data.length;\n\t\t}\n\n\t\tif (this.data) {\n\t\t\tvar size = 0;\n\t\t\tthis.foreach(function () {\n\t\t\t\tsize++;\n\t\t\t});\n\t\t\treturn size;\n\t\t}\n\t\treturn 0;\n\t}\n\n\n\trow(row, value) {\n\t\tif (value) {\n\t\t\tthis.data[row] = value;\n\t\t} else {\n\t\t\tvar v = this.data[row];\n\t\t\tif (v != null && isNaN(v) && !v._isDataFrame && !v.substring) {\n\t\t\t\treturn new DataFrame(v);\n\t\t\t}\n\t\t\treturn v;\n\t\t}\n\t}\n\n\n\tcolumn(column, value) {\n\t\tif (value) {\n\t\t\tvar data = this.data;\n\t\t\tthis.foreach(function (v, i) {\n\t\t\t\tdata[i][column] = value.get(i);\n\t\t\t}, column);\n\t\t} else {\n\t\t\tlet result = {};\n\t\t\tthis.foreach(function (v, i) {\n\t\t\t\tresult[i] = v;\n\t\t\t}, column);\n\t\t\treturn new DataFrame(result);\n\t\t}\n\t}\n\n\tget(row, column, defaultValue) {\n\t\tif (column != null && row != null) {\n\t\t\treturn this.data[row][column];\n\t\t} else if (row != null) {\n\t\t\t/**\n\t\t\t * FIXME This is very inefficnet! We hsould have some how a kind of variable what tells me\n\t\t\t * what is to do! So in case\n\t\t\t *\n\t\t\t * BUG: is nun returns true for an [2000]\n\t\t\t */\n\t\t\tvar value = this.data[row];\n\n\t\t\tif (value && isNaN(value) && !value._isDataFrame && !value.substring) {\n\t\t\t\treturn new DataFrame(value);\n\t\t\t}\n\n\t\t\tif (value == null || value == undefined) {\n\t\t\t\tvalue = defaultValue;\n\t\t\t}\n\t\t\treturn value;\n\n\t\t}\n\t}\n\t\n\tcol(column) {\n\t\tvar result = [];\n\t\tthis.foreach(function (value, id) {\n\t\t\tresult[id] = value[column];\n\t\t});\n\t\treturn new DataFrame(result);\n\t}\n\n\n\thist(column, bins, p_min, p_max) {\n\t\tvar values = [];\n\t\tvar max = false;\n\t\tvar min = false;\n\t\tthis.foreach(function (value) {\n\n\t\t\tvar v = value;\n\t\t\tif (column) {\n\t\t\t\tv = value[column];\n\t\t\t}\n\n\t\t\tvalues.push(v);\n\t\t\tif (max === false) {\n\t\t\t\tmax = v;\n\t\t\t} else {\n\t\t\t\tmax = Math.max(max, v);\n\t\t\t}\n\n\t\t\tif (min === false) {\n\t\t\t\tmin = v;\n\t\t\t} else {\n\t\t\t\tmin = Math.min(min, v);\n\t\t\t}\n\t\t});\n\n\t\tif (p_min != null && p_min != undefined) {\n\t\t\tmin = p_min;\n\t\t}\n\n\t\tif (p_max != null && p_max != undefined) {\n\t\t\tmax = p_max;\n\t\t}\n\n\n\t\tvar width = (max - min) / bins;\n\n\t\tvar buckets = [];\n\t\tfor (let i = 0; i < bins; i++) {\n\t\t\tbuckets[i] = {\n\t\t\t\tbucket: i,\n\t\t\t\tcount: 0,\n\t\t\t\tfrom: (i * width) + min,\n\t\t\t\tto: ((i + 1) * width) + min\n\t\t\t}\n\t\t}\n\n\n\n\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\tvar v = values[i];\n\t\t\t/**\n\t\t\t * FIXME: This is somehow stupidly naive. Can't we calcute the\n\t\t\t * bucket number somehow like:\n\t\t\t *\n\t\t\t *  var norm_v = v - min;\n\t\t\t *  var b = Math.min(bins-1, Math.round(norm_v * width));\n\t\t\t *\n\t\t\t *  The round is false in here...\n\t\t\t */\n\n\t\t\t/**\n\t\t\t * We take the first bucket that fits!!!\n\t\t\t */\n\t\t\tfor (var b = 0; b < bins; b++) {\n\t\t\t\tvar bucket = buckets[b];\n\t\t\t\tif (v >= bucket.from && v <= bucket.to) {\n\t\t\t\t\tbucket.count++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn new DataFrame(buckets);\n\t}\n\n\n\n\n\t/**\n\t * shall not be used!\n\t */\n\tset(row, column, value) {\n\t\tif (column != null && row != null) {\n\t\t\tthis.data[row][column] = value;\n\t\t} else if (row != null) {\n\t\t\tthis.data[row] = value;\n\t\t}\n\t}\n\n\tsortBy(column, desc) {\n\t\t/**\n\t\t * FIXME\n\t\t */\n\t\tif (this.data.length || this.data.length == 0) {\n\n\t\t\tthis.data.sort(function (a, b) {\n\n\t\t\t\tif (a._isDataFrame && b._isDataFrame) {\n\t\t\t\t\tif (desc) {\n\t\t\t\t\t\treturn b.get(column) - a.get(column);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn a.get(column) - b.get(column);\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tif (desc) {\n\t\t\t\t\t\treturn b[column] - a[column];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn a[column] - b[column];\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\t\t\tconsole.error(\"Can onyl sort array of objects!\");\n\t\t}\n\t}\n\n\tadd(column, value) {\n\t\tif (!value) {\n\t\t\tvalue = column;\n\t\t\tcolumn = null;\n\t\t}\n\t\tif (value._isDataFrame) {\n\t\t\tthis.foreach(function (v, i) {\n\t\t\t\treturn v + value.get(i);\n\t\t\t}, column);\n\t\t} else {\n\t\t\tthis.foreach(function (v) {\n\t\t\t\treturn v + value;\n\t\t\t}, column);\n\t\t}\n\n\t}\n\n\tminus(column, value) {\n\t\tif (!value) {\n\t\t\tvalue = column;\n\t\t\tcolumn = null;\n\t\t}\n\t\tif (value._isDataFrame) {\n\t\t\tconsole.debu\n\t\t\tthis.foreach(function (v, i) {\n\t\t\t\treturn v - value.get(i);\n\t\t\t}, column);\n\t\t} else {\n\t\t\tthis.foreach(function (v) {\n\t\t\t\treturn v - value;\n\t\t\t}, column);\n\t\t}\n\t}\n\n\tmutliply(column, value) {\n\t\tif (!value) {\n\t\t\tvalue = column;\n\t\t\tcolumn = null;\n\t\t}\n\t\tif (value._isDataFrame) {\n\t\t\tthis.foreach(function (v, i) {\n\t\t\t\treturn v * value.get(i);\n\t\t\t}, column);\n\t\t} else {\n\t\t\tthis.foreach(function (v) {\n\t\t\t\treturn v * value;\n\t\t\t}, column);\n\t\t}\n\t}\n\n\tdivide(column, value) {\n\t\tif (!value) {\n\t\t\tvalue = column;\n\t\t\tcolumn = null;\n\t\t}\n\t\tif (value._isDataFrame) {\n\t\t\tthis.foreach(function (v, i) {\n\t\t\t\treturn v / value.get(i);\n\t\t\t}, column);\n\t\t} else {\n\t\t\tthis.foreach(function (v) {\n\t\t\t\treturn v / value;\n\t\t\t}, column);\n\t\t}\n\t}\n\n\tmedian(column) {\n\t\tlet list = []\n\t\tthis.foreach(function (value) {\n\t\t\tlist.push(value)\n\t\t}, column);\n\t\tlist = list.sort(function (a, b) {\n\t\t\treturn a - b\n\t\t})\n\t\tif (list.length > 0) {\n\t\t\treturn list[Math.max(0, Math.floor(list.length / 2) - 1)];\n\t\t}\n\t\treturn 0\n\t}\n\n\tmean(column) {\n\t\tconst sum = this.sum(column);\n\t\tif (this.size() === 0) {\n\t\t\treturn 0\n\t\t}\n\t\treturn sum * 1.0 / this.size();\n\t}\n\n\n\tmax(column) {\n\t\tlet max = Number.MIN_VALUE;\n\t\tthis.foreach(function (value) {\n\t\t\tmax = Math.max(max, value);\n\t\t}, column);\n\t\treturn max;\n\t}\n\n\n\tmin(column) {\n\t\tlet min = Number.MAX_VALUE;\n\t\tthis.foreach(function (value) {\n\t\t\tmin = Math.min(min, value);\n\t\t}, column);\n\t\treturn min;\n\t}\n\n\n\tvariance(column) {\n\t\tvar mean = this.mean(column);\n\t\tvar variance = 0;\n\t\tthis.foreach(function (value) {\n\t\t\tvar dif = mean - value;\n\t\t\tvariance += (dif * dif);\n\t\t}, column);\n\t\treturn variance * 1.0 / this.size();\n\t}\n\n\tstd(column) {\n\t\treturn Math.sqrt(this.variance(column));\n\t}\n\n\tsum(column) {\n\t\tvar sum = 0;\n\t\t/**\n\t\t * FIXME: we should check if we have to return a scaler or DataFrame in case column is null\n\t\t */\n\t\tthis.foreach(function (value) {\n\t\t\tsum += value;\n\t\t}, column);\n\t\treturn sum;\n\t}\n\n\t/**\n\t * returns the number of unique values in a column\n\t */\n\tunique(column) {\n\t\tvar temp = {};\n\t\tvar result = 0;\n\t\tthis.foreach(function (value) {\n\t\t\tif (!temp[value]) {\n\t\t\t\ttemp[value] = true;\n\t\t\t\tresult++;\n\t\t\t}\n\t\t}, column);\n\t\treturn result;\n\t}\n\n\n\t/**\n\t * returns the number of unique values in a column\n\t */\n\tuniqueValues(column) {\n\t\tvar temp = {};\n\t\tvar result = [];\n\t\tthis.foreach(function (value) {\n\t\t\tif (!temp[value]) {\n\t\t\t\ttemp[value] = true;\n\t\t\t\tresult.push(value);\n\t\t\t}\n\t\t}, column);\n\t\treturn new DataFrame(result);\n\t}\n\n\tcount(column) {\n\t\tvar result = {};\n\t\tthis.foreach(function (value) {\n\t\t\tif (!result[value]) {\n\t\t\t\tresult[value] = 0;\n\t\t\t}\n\t\t\tresult[value]++;\n\t\t}, column);\n\t\treturn new DataFrame(result);\n\t}\n\n\tgroupBy(column) {\n\t\tvar temp = {};\n\t\tthis.foreach(function (row) {\n\t\t\tvar value = row[column];\n\t\t\tif (!temp[value]) {\n\t\t\t\ttemp[value] = new DataFrame([]);\n\t\t\t}\n\t\t\ttemp[value].push(row);\n\t\t});\n\t\treturn new Grouping(temp);\n\t}\n\n\tforeach(callback, column) {\n\t\t/**\n\t\t * if(column == null){\n\t\t * loop over all columns}\n\t\t */\n\t\t//console.debug(\"foreach\", this.data.length, column)\n\t\tif (this.data.length) {\n\t\t\t//console.debug(\"  -> Array\");\n\t\t\tfor (let i = 0; i < this.data.length; i++) {\n\t\t\t\tlet row = this.data[i];\n\t\t\t\tif (column) {\n\n\t\t\t\t\tlet value = callback(row[column], i);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\trow[column] = value;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet value = callback(row, i);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tthis.data[i] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t//\tconsole.debug(\"  -> Object\");\n\t\t\tfor (let i in this.data) {\n\t\t\t\tlet row = this.data[i];\n\t\t\t\t//\tconsole.debug(\" o \", row[column]);\n\t\t\t\tif (column) {\n\t\t\t\t\tlet value = callback(row[column], i);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\trow[column] = value;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet value = callback(row, i);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tthis.data[i] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Set an index over some columns for faster lookup via the \"ix()\" method.\n\t * We basically build up a tree which maps the values to the right row..\n\t *\n\t */\n\tsetIndex(keys) {\n\n\t\tvar index = {}\n\t\tvar l = keys.length;\n\t\tthis.foreach(function (row, i) {\n\t\t\tvar node = index;\n\t\t\tfor (let k = 0; k < l; k++) {\n\t\t\t\tvar key = keys[k];\n\t\t\t\tlet value = row[key];\n\t\t\t\tif (!node[value]) {\n\t\t\t\t\tif (k == l - 1) {\n\t\t\t\t\t\tif (node[value] == null) {\n\t\t\t\t\t\t\tnode[value] = i;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * FIXME: Is this really a restriction??\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tconsole.error(\"Multi index not supoprted\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode[value] = {};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnode = node[value];\n\t\t\t}\n\n\t\t});\n\n\t\tthis.index = index;\n\t}\n\n\t/**\n\t * get *ONE* row by index values. The value have to be in the same\n\t * order as the columns called in the setIndex!\n\t *\n\t * @param values: array of values to be found\n\t *\n\t * @includeIndex boolean: Also return the index not only the row. If true, the result\n\t * \t\t\t\t\t\t  will look like {row:..., index:key}, where key is int or string\n\t *\n\t */\n\tix(values, includeIndex) {\n\n\t\tif (this.index) {\n\n\t\t\tvar node = this.index;\n\t\t\tvar l = values.length\n\t\t\tfor (var k = 0; k < l; k++) {\n\t\t\t\tvar value = values[k];\n\t\t\t\tif (node[value] != null) {\n\t\t\t\t\tif (k == l - 1) {\n\t\t\t\t\t\tvar index = node[value];\n\t\t\t\t\t\tif (includeIndex) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\trow: this.data[index],\n\t\t\t\t\t\t\t\tindex: index\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn this.data[index];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode = node[value];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.error(\"DataFrame.ix() > Error: No Index!\");\n\t\t}\n\t\treturn null;\n\t}\n\n\n\tremove(row) {\n\t\tif (this.data.length) {\n\t\t\tthis.data.splice(row, 1);\n\t\t} else {\n\t\t\tdelete this.data[row];\n\t\t}\n\t}\n\n\n\tprint() {\n\t\tvar header = false;\n\t\tvar me = this;\n\t\tvar s = \"\";\n\t\tthis.foreach(function (row) {\n\n\t\t\tif (!header) {\n\t\t\t\theader = true;\n\t\t\t\tfor (let k in row) {\n\t\t\t\t\ts += me._correctLength(k, Math.max(20, k.length)) + \" | \";\n\t\t\t\t}\n\t\t\t\ts += \"\\n\";\n\t\t\t}\n\t\t\tfor (let k in row) {\n\t\t\t\ts += me._correctLength(row[k] + \"\", Math.max(20, k.length)) + \" | \";\n\t\t\t}\n\t\t\ts += \"\\n\";\n\t\t});\n\n\t\tconsole.debug(s);\n\t\treturn s;\n\t}\n\n\t_correctLength(s, l) {\n\t\ts += \"\";\n\t\tif (s.length < l) {\n\t\t\twhile (s.length < l)\n\t\t\t\ts += \" \";\n\t\t} else {\n\t\t\ts = s.substring(0, l - 3) + \".. \";\n\t\t}\n\t\treturn s;\n\t}\n\n\n\ttoCSV(columns) {\n\t\tvar s = \"\";\n\t\tvar l = columns.length;\n\t\tthis.foreach(function (row) {\n\t\t\tfor (let i = 0; i < l; i++) {\n\t\t\t\tvar c = columns[i];\n\t\t\t\tif (i > 0) {\n\t\t\t\t\ts += \",\";\n\t\t\t\t}\n\t\t\t\ts += row[c];\n\t\t\t}\n\t\t\ts += \"\\n\";\n\t\t});\n\n\t\treturn s;\n\t}\n\n\n\troundTimestampToDate(column) {\n\t\tthis.foreach(function (timestamp) {\n\t\t\tif (timestamp) {\n\t\t\t\tvar d = new Date(timestamp);\n\t\t\t\td.setMinutes(0);\n\t\t\t\td.setMilliseconds(0);\n\t\t\t\treturn d.getTime();\n\t\t\t}\n\t\t\treturn 0;\n\t\t}, column)\n\t}\n\n\tmerge (other) {\n\t\tif (Array.isArray(this.data) && Array.isArray(other.data)) {\n\t\t\tlet newData = this.data.concat(other.data)\n\t\t\treturn new DataFrame(newData)\n\t\t}\n\t\tconsole.error('DataFrame.merge() > Cannot merge to object frames')\n\t\treturn new DataFrame([])\n\t}\n\n}","import css from 'dojo/css'\nimport lang from 'dojo/_base/lang'\nimport win from 'dojo/_base/win'\nimport on from 'dojo/on'\nimport has from 'dojo/has'\nimport touch from 'dojo/touch'\nimport domGeom from 'dojo/domGeom'\nimport topic from 'dojo/topic'\nimport Logger from 'common/Logger'\nimport Evented from 'dojo/Evented'\n\nvar _vommondCurrentDialog = null\n\nexport default class Dialog extends Evented {\n\n\tstatic getCurrentDialog () {\n\t\treturn _vommondCurrentDialog\n\t}\n\n\tconstructor(params) {\n\t\tsuper()\n\t\tthis.autoClose = true\n\t\tthis.wrapperClass = \"\"\n\t\tthis.overflow = false\n\t\tthis.isFullScreen = false\n\t\tthis.hasCSSAnimation = true\n\t\tif (params && params.overflow) {\n\t\t\tthis.overflow = params.overflow\n\t\t}\n\t\tif (params && params.hasCSSAnimation){\n\t\t\tthis.hasCSSAnimation = params.hasCSSAnimation;\n\t\t}\n\t\tthis.log = new Logger(\"Dialog\");\n\t}\n\n\tdestroy () {\n\t\tthis.log.info('destroy', 'enter')\n\t\t_vommondCurrentDialog = null\n\t\tthis.cleanUpEvented()\n\t}\n\n\tsetFullScreen (callback) {\n\t\tthis.hasFullScreen = true\n\t\tthis.fullScreenListener = callback\n\t}\n\n\tpopup (node, parent, clazz) {\n\t\tthis.log.log(1, \"popup\", \"enter\");\n\n\t\t_vommondCurrentDialog = this\n\n\t\ttopic.publish(\"vommond/dialog/open\", {});\n\n\t\t/**\n\t\t * FIXME: We could somehow try to make the transition still a little smoother.\n\t\t */\n\t\tvar background = document.createElement(\"div\");\n\t\tcss.add(background, \"VommondDialogBackground VommondDialogHidden VommondDialogContentHidden\");\n\n\t\tif (this.hasFullScreen) {\n\t\t\tlet fullscreen = document.createElement(\"span\");\n\t\t\tcss.add(fullscreen, \"VommondDialogFullScreen mdi mdi-fullscreen\");\n\t\t\tbackground.appendChild(fullscreen);\n\t\t\tthis.own(on(fullscreen, touch.press, lang.hitch(this, \"toggleFullScreen\", fullscreen)))\n\t\t}\n\n\t\tvar container = document.createElement(\"div\");\n\t\tcss.add(container, \"VommondDialogContainer\");\n\t\tbackground.appendChild(container);\n\n\t\tvar wrapper = document.createElement(\"div\");\n\t\tcss.add(wrapper, \"VommondDialogWrapper\");\n\t\tif (this.overflow) {\n\t\t\tcss.add(wrapper, \"VommondDialogWrapperOverflow\");\n\t\t}\n\t\tif (clazz) {\n\t\t\tcss.add(wrapper, clazz)\n\t\t}\n\t\tcss.add(wrapper, this.wrapperClass);\n\t\tcontainer.appendChild(wrapper);\n\n\t\tvar content = document.createElement(\"div\");\n\t\tcss.add(content, \"VommondDialogContent\");\n\t\tif (has('mobile')){\n\t\t\tcss.add(content, 'VommondDialogContentMobile')\n\t\t\tcss.add(wrapper, 'VommondDialogWrapperMobile');\n\t\t}\n\t\twrapper.appendChild(content);\n\n\t\tcontent.appendChild(node);\n\t\twin.body().appendChild(background);\n\n\t\t/**\n\t\t * TODO: try to block scroll in the body. Does not work perfectly\n\t\t */\n\t\tthis.own(on(background, \"onmousewheel\", lang.hitch(this, \"stopScroll\")));\n\t\tthis.own(on(background, \"mousewheel\", lang.hitch(this, \"stopScroll\")));\n\t\tthis.own(on(background, \"DOMMouseScroll\", lang.hitch(this, \"stopScroll\")));\n\t\t\n\t\t/**\n\t\t * Close on ESC\n\t\t */\n\t\tthis.own(topic.subscribe(\"matc/canvas/esc\", lang.hitch(this,\"close\")));\n\t\t\t\n\n\t\tvar startPos = this.getStartPos(parent);\n\t\tvar endPos = domGeom.position(wrapper);\n\t\tvar backPos = domGeom.position(background);\n\n\t\tif (this.autoClose) {\n\t\t\tthis.own(on(background, touch.press, lang.hitch(this, \"onBackClick\")));\n\t\t}\n\n\t\twrapper.style.top = startPos.y + \"px\";\n\t\twrapper.style.height = startPos.h + \"px\";\n\t\twrapper.style.width = startPos.w + \"px\";\n\t\twrapper.style.left = startPos.x + \"px\";\n\n\t\tif (this.hasCSSAnimation) {\n\t\t\tvar ratioW = startPos.w / endPos.w;\n\t\t\tvar ratioH = startPos.h / endPos.h;\n\t\t\tvar transform = \" scale(\" + ratioW + \",\" + ratioH + \")\"\n\t\t\twrapper.style.transform = transform;\n\t\t}\n\t\t\n\n\t\t// add here a css transform to make the calling smoother\n\t\t// \n\t\t/**\n\t\t * fade in\n\t\t */\n\t\tsetTimeout(() => {\n\t\t\tcss.remove(background, \"VommondDialogHidden\");\n\t\t}, 1);\n\n\t\t/**\n\t\t * fade in\n\t\t */\n\t\tsetTimeout(() => {\n\t\t\tcss.remove(background, \"VommondDialogContentHidden\");\n\t\t}, 350);\n\n\t\tsetTimeout(() => {\n\t\t\t// reset scale\n\t\t\tif (this.hasCSSAnimation) {\n\t\t\t\twrapper.style.transform = \"scale(1,1)\";\n\t\t\t}\n\t\t\twrapper.style.top = Math.round((backPos.h - endPos.h) / 2) + \"px\";\n\t\t\twrapper.style.height = endPos.h + \"px\";\n\t\t\twrapper.style.width = endPos.w + \"px\";\n\t\t\twrapper.style.left = Math.round((backPos.w - endPos.w) / 2) + \"px\";\n\t\t}, 100);\n\n\t\t/**\n\t\t * 2.1.9 Fix to allow fixed elements in simulator\n\t\t */\n\t\tif (this.hasCSSAnimation) {\n\t\t\tsetTimeout(() => {\n\t\t\t\twrapper.style.transform = \"\";\n\t\t\t}, 500);\n\t\t}\n\n\t\t/**\n\t\t * Since 4.0.34 we have an an onOpen listener\n\t\t */\n\t\tsetTimeout(() => this.emitOpen(), 500)\n\n\n\t\tthis._dialogBackground = background;\n\t\tthis.node = node;\n\t\tthis.wrapper = wrapper;\n\t}\n\n\tonOpen (callback) {\n\t\tthis._onOpenCallback = callback\n\t}\n\n\temitOpen() {\n\t\tif (this._onOpenCallback) {\n\t\t\tthis._onOpenCallback()\n\t\t}\n\t}\n\n\tgetStartPos(parent) {\n\t\tif (!parent) {\n\t\t\tvar pos = domGeom.position(win.body());\n\t\t\treturn {\n\t\t\t\tw: 0,\n\t\t\t\th: 0,\n\t\t\t\tx: pos.w / 2,\n\t\t\t\ty: pos.h / 2\n\t\t\t};\n\t\t} else {\n\t\t\treturn domGeom.position(parent);\n\t\t}\n\t}\n\n\tresize(endPos) {\n\t\tlet wrapper = this.wrapper;\n\t\tlet background = this._dialogBackground;\n\t\t/**\n\t\t * check of pos of node was passed\n\t\t */\n\t\tif (endPos.appendChild) {\n\t\t\tendPos = domGeom.position(endPos, true);\n\t\t}\n\t\tvar backPos = domGeom.position(background);\n\t\twrapper.style.top = Math.round((backPos.h - endPos.h) / 2) + \"px\";\n\t\twrapper.style.height = endPos.h + \"px\";\n\t\twrapper.style.width = endPos.w + \"px\";\n\t\twrapper.style.left = Math.round((backPos.w - endPos.w) / 2) + \"px\";\n\t}\n\n\tstopScroll(e) {\n\t\t/**\n\t\t * FIXME: This work like shity shit... The detction should be somehow much better... but well.\n\t\t */\n\t\tif (this._dialogBackground == e.target) {\n\t\t\tthis.stopEvent(e);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tonBackClick(e) {\n\n\t\tvar target = e.target;\n\t\tif (target == this._dialogBackground) {\n\t\t\tthis.stopEvent(e);\n\t\t\tcss.add(this._dialogBackground, \" VommondDialogHidden\");\n\t\t\tsetTimeout(lang.hitch(this, \"close\"), 300);\n\t\t}\n\t}\n\n\tshake() {\n\n\t\tvar pos = domGeom.position(this.wrapper);\n\t\tcss.add(this.wrapper, \"VommondDialogWrapperShake\");\n\n\t\tvar wrapper = this.wrapper;\n\t\tsetTimeout(function () {\n\t\t\twrapper.style.left = (pos.x + 50) + \"px\";\n\t\t}, 1);\n\n\t\tsetTimeout(function () {\n\t\t\twrapper.style.left = (pos.x - 50) + \"px\";\n\t\t}, 51);\n\n\t\tsetTimeout(function () {\n\t\t\twrapper.style.left = (pos.x + 50) + \"px\";\n\t\t}, 101);\n\n\t\tsetTimeout(function () {\n\t\t\twrapper.style.left = (pos.x - 50) + \"px\";\n\t\t}, 151);\n\n\t\tsetTimeout(function () {\n\t\t\twrapper.style.left = (pos.x) + \"px\";\n\t\t\tcss.remove(wrapper, \"VommondDialogWrapperShake\");\n\t\t}, 201);\n\n\t}\n\n\ttoggleFullScreen (node) {\n\t\tthis.isFullScreen = !this.isFullScreen\n\t\tif (this.fullScreenListener) {\n\t\t\tthis.fullScreenListener(this.isFullScreen)\n\t\t}\n\t\tif (this.isFullScreen) {\n\t\t\tcss.remove(node, 'mdi-fullscreen')\n\t\t\tcss.add(node, 'mdi-fullscreen-exit')\n\t\t} else {\n\t\t\tcss.add(node, 'mdi-fullscreen')\n\t\t\tcss.remove(node, 'mdi-fullscreen-exit')\n\t\t}\n\t}\n\n\thide() {\n\t\tthis.close();\n\t}\n\n\tclose() {\n\t\tthis.emit(\"close\", {});\n\t\tif (this._dialogBackground) {\n\t\t\twin.body().removeChild(this._dialogBackground);\n\t\t}\n\t\tthis.destroy();\n\t}\n}","import DataFrame from \"./DataFrame\";\n\nexport default class Grouping {\n\n\tconstructor(data) {\n\t\tthis.data = data\n\t\tthis._isDataFrame = false\n\t}\n\n\tas_array() {\n\t\tvar result = [];\n\t\tthis.foreach(function (row) {\n\t\t\tresult.push(row);\n\t\t});\n\t\treturn result;\n\t}\n\n\n\tsize() {\n\t\treturn this._foreach(\"size\");\n\t}\n\n\tget(i) {\n\t\treturn this.data[i];\n\t}\n\n\n\tcount(column) {\n\t\tvar temp = this._foreach(\"count\", column);\n\t\treturn new Grouping(temp.data);\n\t}\n\n\tmax(column) {\n\t\treturn this._foreach(\"max\", column);\n\t}\n\n\tmin(column) {\n\t\treturn this._foreach(\"min\", column);\n\t}\n\n\tmean(column) {\n\t\treturn this._foreach(\"mean\", column);\n\t}\n\n\tvariance(column) {\n\t\treturn this._foreach(\"variance\", column);\n\t}\n\n\tstd(column) {\n\t\treturn this._foreach(\"std\", column);\n\t}\n\n\tsum(column) {\n\t\treturn this._foreach(\"sum\", column);\n\t}\n\n\tunique(column) {\n\t\treturn this._foreach(\"unique\", column);\n\t}\n\n\tgroupBy() {\n\n\t}\n\n\tforeach(callback) {\n\t\tfor (let i in this.data) {\n\t\t\tvar df2 = this.data[i];\n\t\t\tcallback(df2, i);\n\t\t}\n\t}\n\n\t_foreach(method, column) {\n\t\tvar result = {};\n\t\tfor (let i in this.data) {\n\t\t\tvar df2 = this.data[i];\n\t\t\tvar x = df2[method](column);\t\t\n\t\t\tresult[i] = x;\n\t\t}\n\t\treturn new DataFrame (result);\n\t}\n\n\tprint(deep) {\n\t\tfor (let i in this.data) {\n\t\t\tvar df2 = this.data[i];\n\t\t\tif (deep) {\n\t\t\t\tdf2.foreach(function (row, j) {\n\t\t\t\t\tconsole.debug(\"  \", j, row);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}","import Logger from './Logger'\nclass PerformanceMonitor {\n\n    constructor () {\n        this.data = {}\n        this.entries = []\n        this.payloads = {}\n    }\n\n    start (key, payload) {\n        const start = new Date().getTime()\n        this.data[key] = start\n        this.payloads[key] = payload\n    }\n\n    end (key, logLevel = 2) {\n        if (!this.data[key]) {\n            Logger.warn('PerformanceMonitor.end() > no key', key)\n            return\n        }\n        const start = this.data[key]\n        const end = new Date().getTime()\n        const duration = end - start\n        this.entries.push({\n            duration: duration,\n            key: key,\n            payload: this.payloads[key]\n        })\n        if (duration > 1000) {\n            Logger.warn('PerformanceMonitor.end() > ' +  key + ' took ' + duration + 'ms')\n            console.table(this.entries)\n        } else {\n            Logger.log(logLevel, 'PerformanceMonitor.end() > ' +  key + ' took ' + duration + 'ms')\n        }\n        delete this.data[key]\n        delete this.payloads[key]\n    }\n\n}\n\nexport default new PerformanceMonitor()","import lang from '../dojo/_base/lang'\nimport DataFrame from '../common/DataFrame'\nimport Grouping from '../common/Grouping'\nimport PerformanceMonitor from '../core/PerformanceMonitor'\n\nexport default class {\n\n\tfilterEvents (events, anno) {\n\t\tPerformanceMonitor.start('Analytics.filterEvents()',events.length)\n\t\tconst bad = {};\n\t\tfor (let i = 0; i < anno.length; i++) {\n\t\t\tlet a = anno[i];\n\t\t\tif (!a.isValid) {\n\t\t\t\tbad[a.reference] = true;\n\t\t\t}\n\t\t}\n\t\tconst temp = [];\n\t\tconst l = events.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tvar e = events[i];\n\t\t\tif (!bad[e.session]) {\n\t\t\t\ttemp.push(e);\n\t\t\t}\n\t\t}\n\t\tPerformanceMonitor.end('Analytics.filterEvents()')\n\t\treturn temp;\n\t}\n\n\tgetSurveyAnswers (events, app, test, options) {\n\t\tPerformanceMonitor.start('Analytics.getSurveyAnswers()',events.length)\n\t\tconst showId = options.showId\n\t\tconst showTasksSucess = options.showTasksSucess\n\t\tconst showTasksDuration = options.showTaskDetails\n\t\tconst showTasksInteraction = options.showTaskDetails\n\n\n\t\tconst result = {\n\t\t\tids: [],\n\t\t\trows: [],\n\t\t\tcols: [],\n\t\t\ttasks: [],\n\t\t\tmeta: {}\n\t\t}\n\n\t\tconst eventsDF = new DataFrame(events);\n\t\teventsDF.sortBy(\"time\");\n\n\t\tlet taskPer = {}\n\t\tif (test.tasks) {\n\t\t\tconst taskPerDF = this.getTaskPerformance(eventsDF, test.tasks)\n\t\t\ttaskPerDF.foreach(row => {\n\t\t\t\tif (!taskPer[row.session]) {\n\t\t\t\t\ttaskPer[row.session] = {}\n\t\t\t\t}\n\t\t\t\ttaskPer[row.session][row.task] = row\n\t\t\t})\n\t\t}\n\n\n\t\tlet widgetDataBindings = {}\n\t\tlet widgetTypes = {}\n\t\tObject.values(app.widgets).forEach(w => {\n\t\t\twidgetTypes[w.id] = w.type\n\t\t\tif (w.props && w.props.isSurveyElement && w.type !== 'Password') {\n\t\t\t\twidgetDataBindings[w.id] = w.name\n\t\t\t}\n\t\t})\n\n\t\tresult.cols = Array.from(new Set(Object.values(widgetDataBindings)))\n\t\tresult.cols.sort((a, b) => {\n\t\t\treturn a.localeCompare(b)\n\t\t})\n\t\t\n\t\tresult.cols.forEach(col => {\n\t\t\tresult.meta[col] = {\n\t\t\t\ttype: 'data'\n\t\t\t}\n\t\t}) \n\n\t\tif (showId) {\n\t\t\tresult.cols.unshift('id')\n\t\t\tresult.meta['id'] = {\n\t\t\t\ttype: 'id',\n\t\t\t\thidden: true,\n\t\t\t}\n\t\t}\n\n\t\tif (test.tasks) {\n\t\t\ttest.tasks.forEach(task => {\n\t\t\t\tif (showTasksSucess) {\n\t\t\t\t\tresult.cols.push(task.name)\n\t\t\t\t\tresult.meta[task.name] = {\n\t\t\t\t\t\ttype: 'task',\n\t\t\t\t\t\thidden: true,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (showTasksDuration) {\n\t\t\t\t\tresult.cols.push(task.name + '_Duration')\n\t\t\t\t\tresult.meta[task.name + '_Duration'] = {\n\t\t\t\t\t\ttype: 'task',\n\t\t\t\t\t\thidden: true,\n\t\t\t\t\t\theader: false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (showTasksInteraction) {\n\t\t\t\t\tresult.cols.push(task.name + '_Interactions')\n\t\t\t\t\tresult.meta[task.name + '_Interactions'] = {\n\t\t\t\t\t\ttype: 'task',\n\t\t\t\t\t\thidden: true,\n\t\t\t\t\t\theader: false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t})\n\t\t}\n\n\n\t\tconst sessionGrouping = eventsDF.groupBy(\"session\");\n\n\t\t/**\n\t\t * sort by start??\n\t\t */\n\t\tsessionGrouping.foreach((df, sessionID) => {\n\t\t\t\n\t\t\tconst row = {}\n\t\t\tconst taskRow = []\n\t\t\tresult.cols.forEach(c => row[c] = '-')\n\t\t\t\n\t\t\tdf.sortBy(\"time\");\n\t\t\tconst sessionEvents = df.as_array();\n\t\t\tsessionEvents.forEach(e => {\n\t\t\t\tdelete e.user\n\t\t\t\tif (app.widgets[e.widget]) {\n\t\t\t\t\tif (e.widget && e.state && widgetDataBindings[e.widget]) {\n\t\t\t\t\t\tconst col = widgetDataBindings[e.widget]\n\t\t\t\t\t\tif (widgetTypes[e.widget] === 'Rating') {\n\t\t\t\t\t\t\trow[col] = (e.state.value * 1) + 1\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst value = e.state.value\n\t\t\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\t\t\trow[col] = value.join(', ')\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\trow[col] = value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (showId) {\n\t\t\t\trow['id'] = sessionID\n\t\t\t}\n\n\t\t\tif (test.tasks) {\n\t\t\t\ttest.tasks.forEach(task => {\n\t\t\t\t\tif (taskPer[sessionID] && taskPer[sessionID][task.id]) {\n\t\t\t\t\t\tconst taskData = taskPer[sessionID][task.id]\n\t\t\t\t\t\ttaskRow.push(taskData)\n\t\t\t\t\t\tif (showTasksSucess) {\n\t\t\t\t\t\t\trow[task.name] = 'Completed'\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (showTasksSucess) {\n\t\t\t\t\t\t\trow[task.name + '_Duration'] = Math.round(taskData.duration / 1000)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (showTasksSucess) {\n\t\t\t\t\t\t\trow[task.name + 'Interactions'] = taskData.interactions\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tresult.tasks.push(taskRow)\n\t\t\tresult.ids.push(sessionID)\n\t\t\tresult.rows.push(row)\n\t\t})\n\n\t\tPerformanceMonitor.end('Analytics.getSurveyAnswers()')\n\t\treturn result\n\t}\n\n\tnornalizeContainerChildEvents (events) {\n\t\tevents.forEach(e => {\n\t\t\tif (e.widget && e.widget.indexOf('-') > 0) {\n\t\t\t\te.widget = e.widget.substring(0,e.widget.indexOf('-'))\n\t\t\t}\n\t\t})\n\t\treturn events\n\t}\n\n\tgetFirstNClicks(events, numberOfClicks) {\n\t\tvar filtered = new DataFrame(events);\n\n\t\tvar sessionGrouping = filtered.groupBy(\"session\");\n\n\t\tvar firstNEvents = [];\n\t\tsessionGrouping.foreach(function (df) {\n\t\t\tdf.sortBy(\"time\");\n\t\t\tvar sessionEvents = df.as_array();\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0; i < sessionEvents.length; i++) {\n\t\t\t\tvar event = sessionEvents[i];\n\t\t\t\tif (event.type == \"ScreenLoaded\" || event.type == \"OverlayLoaded\") {\n\t\t\t\t\tcount = 0;\n\t\t\t\t} else {\n\t\t\t\t\tif (event.x >= 0 && event.y >= 0 && !event.noheat) {\n\t\t\t\t\t\tif (count < numberOfClicks) {\n\t\t\t\t\t\t\tfirstNEvents.push(event);\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n\t\treturn firstNEvents;\n\t}\n\n\n\tgetPValueBionimial() {\n\n\t}\n\n\n\tgetScreenExplorationRate(df, model) {\n\t\tconst screenCount = Object.keys(model.screens).length;\n\t\tconst session = df.groupBy(\"session\");\n\t\tconst uniqueScreenPerSession = session.unique(\"screen\");\n\t\treturn uniqueScreenPerSession.mean() / screenCount;\n\t}\n\n\n\tgetSuccessTaskNames(tasksPerformance, tasks) {\n\t\tconst names = {};\n\t\tfor (var i = 0; i < tasks.length; i++) {\n\t\t\tnames[tasks[i].id] = tasks[i].name;\n\t\t}\n\t\tconst result = {};\n\t\tconst sessionGroup = tasksPerformance.groupBy(\"session\");\n\t\tsessionGroup.foreach((session, id)  => {\n\t\t\tconst temp = [];\n\t\t\tconst successTasks = session.count(\"task\").data;\n\t\t\tfor (let taskID in successTasks) {\n\t\t\t\ttemp.push(names[taskID]);\n\t\t\t}\n\t\t\ttemp.sort();\n\t\t\tresult[id] = temp;\n\t\t});\n\t\treturn result;\n\t}\n\n\t/********************************************************************************************\n\t * Tag Stuff\n\t *******************************************************************************************/\n\n\tgetTagAnalytics(tags) {\n\n\t\tconst tagCount = {};\n\t\tconst tagSessionCount = {};\n\t\tconst tagTime = {};\n\t\tfor (let i = 0; i < tags.length; i++) {\n\t\t\tconst annotation = tags[i];\n\t\t\tconst sessions = annotation.sessions;\n\t\t\tfor (let id in sessions) {\n\t\t\t\tconst sessionTags = sessions[id];\n\t\t\t\tconst tagCounted = {};\n\t\t\t\tfor (let j = 0; j < sessionTags.length; j++) {\n\t\t\t\t\tconst t = sessionTags[j];\n\t\t\t\t\tif (!tagCount[t.tag]) {\n\t\t\t\t\t\ttagCount[t.tag] = 0;\n\t\t\t\t\t}\n\t\t\t\t\ttagCount[t.tag]++;\n\t\t\t\t\tif (!tagCounted[t.tag]) {\n\t\t\t\t\t\tif (!tagSessionCount[t.tag]) {\n\t\t\t\t\t\t\ttagSessionCount[t.tag] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttagSessionCount[t.tag]++;\n\t\t\t\t\t\ttagCounted[t.tag] = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!tagTime[t.tag]) {\n\t\t\t\t\t\ttagTime[t.tag] = 0;\n\t\t\t\t\t}\n\t\t\t\t\ttagTime[t.tag] += (t.start);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst result = [];\n\t\tfor (let tag in tagCount) {\n\t\t\tresult.push({\n\t\t\t\ttag: tag,\n\t\t\t\tcount: tagCount[tag],\n\t\t\t\tsessions: tagSessionCount[tag],\n\t\t\t\ttime: tagTime[tag] / tagCount[tag]\n\t\t\t});\n\t\t}\n\t\treturn new DataFrame(result);\n\t}\n\n\t/********************************************************************************************\n\t * Task Stuff\n\t *******************************************************************************************/\n\n\n\t/**\n\t * Creates a mini regex matcher for our tasks. It returns the first match of an flow!\n\t *\n\t * a match has the following properties:\n\t *\n\t *  duration: how long did the task take\n\t *\n\t *  count: how much events where between\n\t *\n\t */\n\tcreateMatcher(name, flow, strict) {\n\n\t\treturn {\n\t\t\tname: name,\n\t\t\tmatch: null,\n\t\t\tflowPos: 0,\n\t\t\tstep: flow[0],\n\t\t\tendStep: flow[flow.length - 1],\n\t\t\tflow: flow,\n\t\t\tstart: null,\n\t\t\tstartTime: 0,\n\t\t\tstrict: strict,\n\t\t\ttaskName: \"\",\n\t\t\tusePartialMatches: false,\n\n\t\t\tinit(e) {\n\t\t\t\tthis.start = e;\n\t\t\t\tthis.startTime = e.time;\n\t\t\t\tthis.interactions = 0;\n\t\t\t},\n\n\t\t\tnext(e, i) {\n\n\t\t\t\tlet result = null;\n\n\t\t\t\t/**\n\t\t\t\t * Since 1.9: Check interactions only if task has started\n\t\t\t\t */\n\t\t\t\tif (this.match) {\n\t\t\t\t\tif (e.type == \"WidgetClick\" ||\n\t\t\t\t\t\te.type == \"WidgetChange\" ||\n\t\t\t\t\t\te.type == \"ScreenGesture\" ||\n\t\t\t\t\t\te.type == \"WidgetGesture\" ||\n\t\t\t\t\t\te.type == \"ScreenClick\") {\n\t\t\t\t\t\tthis.interactions++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * check if we match the current event to the current\n\t\t\t\t * step in the flow\n\t\t\t\t */\n\t\t\t\tif (this._match(this.step, e)) {\n\t\t\t\t\t/**\n\t\t\t\t\t * create a match object\n\t\t\t\t\t */\n\t\t\t\t\tif (this.match == null) {\n\n\t\t\t\t\t\tthis.match = {\n\t\t\t\t\t\t\tstartTime: e.time,\n\t\t\t\t\t\t\tdiscoveryTime: e.time - this.startTime,\n\t\t\t\t\t\t\tendTime: 1,\n\t\t\t\t\t\t\tstartPosition: i,\n\t\t\t\t\t\t\tendPosition: -1,\n\t\t\t\t\t\t\tduration: 0,\n\t\t\t\t\t\t\tcount: -1,\n\t\t\t\t\t\t\tinteractions: -1,\n\t\t\t\t\t\t\tpartial: false,\n\t\t\t\t\t\t\tsession: e.session,\n\t\t\t\t\t\t\ttask: this.name,\n\t\t\t\t\t\t\tuser: e.user,\n\t\t\t\t\t\t\ttaskName: this.taskName,\n\t\t\t\t\t\t\thits:[]\n\t\t\t\t\t\t};\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * FIX in  1.9.5. We have to start counting interactions\n\t\t\t\t\t\t * from the match if it is an interaction event\n\t\t\t\t\t\t */\n\n\t\t\t\t\t\tif (e.type == \"WidgetClick\" ||\n\t\t\t\t\t\t\te.type == \"WidgetChange\" ||\n\t\t\t\t\t\t\te.type == \"ScreenGesture\" ||\n\t\t\t\t\t\t\te.type == \"WidgetGesture\" ||\n\t\t\t\t\t\t\te.type == \"ScreenClick\") {\n\t\t\t\t\t\t\tthis.interactions++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Since 4.0.65 we also store the matches events\n\t\t\t\t\t */\n\t\t\t\t\tthis.match.hits.push({\n\t\t\t\t\t\ttime: e.time, pos: i, step: this.flowPos\t\n\t\t\t\t\t})\n\n\t\t\t\t\t/**\n\t\t\t\t\t * we have matched the last event. pass the match the result and start again\n\t\t\t\t\t */\n\t\t\t\t\tif (this.flow.length == this.flowPos + 1) {\n\t\t\t\t\t\tvar endTime = this.getEndTime(e);\n\n\t\t\t\t\t\tthis.match.endTime = endTime;\n\t\t\t\t\t\tthis.match.endPosition = i;\n\t\t\t\t\t\tthis.match.interactions = this.interactions;\n\t\t\t\t\t\tthis.match.duration = this.match.endTime - this.match.startTime;\n\t\t\t\t\t\tthis.match.count = (this.match.endPosition - this.match.startPosition) + 1;\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * We have a hit!! return this match at the end of the method\n\t\t\t\t\t\t */\n\t\t\t\t\t\tresult = this.match;\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * reset shit\n\t\t\t\t\t\t */\n\t\t\t\t\t\tthis.match = null;\n\t\t\t\t\t\tthis.flowPos = -1 // minus one!!\n\t\t\t\t\t}\n\n\t\t\t\t\t\n\n\t\t\t\t\t/**\n\t\t\t\t\t * now move on to the next step\n\t\t\t\t\t */\n\t\t\t\t\tthis.flowPos++;\n\t\t\t\t\tthis.step = this.flow[this.flowPos];\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * check if we have a partial match. The last step must not be like the\n\t\t\t\t * current step.\n\t\t\t\t * \n\t\t\t\t * Since 4.3.8 We disabled partical Matches. Not sure if they are needed anywhere???\n\t\t\t\t */\n\t\t\t\tif (this.usePartialMatches) {\n\t\t\t\t\tif (this.match != null && !this._match(this.step, this.endStep) && this._match(this.endStep, e)) {\n\t\t\t\t\t\n\t\t\t\t\t\tthis.match.endTime = e.time;\n\t\t\t\t\t\tthis.match.endPosition = i;\n\t\t\t\t\t\tthis.match.duration = this.match.endTime - this.match.startTime;\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * count on extra. because we start at event 2, than do two more step\n\t\t\t\t\t\t * and we are at 4. But the user did three steps...\n\t\t\t\t\t\t */\n\t\t\t\t\t\tthis.match.count = (this.match.endPosition - this.match.startPosition) + 1;\n\t\t\t\t\t\tthis.match.partial = true;\n\t\t\t\t\t\tresult = this.match;\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * reset\n\t\t\t\t\t\t */\n\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\tgetEndTime(e) {\n\n\t\t\t\tif (e.state && e.state.children) {\n\t\t\t\t\tvar children = e.state.children;\n\t\t\t\t\tvar max = e.time;\n\t\t\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t\t\tmax = Math.max(max, children[i].time);\n\t\t\t\t\t}\n\t\t\t\t\treturn max;\n\t\t\t\t}\n\t\t\t\treturn e.time;\n\t\t\t},\n\t\t\t/**\n\t\t\t * a: the flow event\n\t\t\t * b: event from stream\n\t\t\t */\n\t\t\t_match(a, b) {\n\t\t\t\tif ((a.screen == b.screen && a.widget == b.widget && a.type == b.type)) {\n\t\t\t\t\tif ((a.type == \"ScreenGesture\" && b.type == \"ScreenGesture\") ||\n\t\t\t\t\t\t(a.type == \"WidgetGesture\" && b.type == \"WidgetGesture\")) {\n\t\t\t\t\t\tif (a.gesture && b.gesture) {\n\t\t\t\t\t\t\treturn a.gesture.type == b.gesture.type;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\n\t\t\t\t\t/**\n\t\t\t\t\t * For widget state change events we will look also into the state\n\t\t\t\t\t */\n\t\t\t\t\tif ((a.type == \"WidgetClick\" || a.type == \"WidgetChange\") && a.state && b.state) {\n\n\t\t\t\t\t\tvar aState = a.state;\n\t\t\t\t\t\tvar bState = b.state;\n\n\n\t\t\t\t\t\tif (aState.type == \"text\" || aState.type == \"typing\" || aState.type == \"select\" || aState.type == \"open\" || aState.type == \"navigate\") {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * For multi value widgets(textboxes, password, & textarea, and select boxes) and dropdown events\n\t\t\t\t\t\t\t * we have a special\n\t\t\t\t\t\t\t * handling and allow all values\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\treturn aState.type == bState.type;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Otherwise check if type and value are the same for both states\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\treturn (aState.type == bState.type) && (aState.value == bState.value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((a.state && !b.state) || (!a.state && b.state)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\n\t\t\treset() {\n\t\t\t\tthis.match = null;\n\t\t\t\tthis.flowPos = 0\n\t\t\t\tthis.step = flow[0];\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * Does some naive pattern matching. Loops for the entire stream,\n\t * and checks from every event of, if we have a match. The matcher returns\n\t * the first match!\n\t */\n\tmatchFlowInSession(df, flow, taskID, strict) {\n\n\t\tconst result = [];\n\t\tconst matcher = this.createMatcher(taskID, flow, strict)\n\n\t\tdf.sortBy(\"time\");\n\t\tconst events = df.as_array();\n\n\t\tconst l = events.length;\n\t\tmatcher.init(events[0]);\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tconst e = events[i];\n\t\t\tconst m = matcher.next(e, i);\n\t\t\tif (m) {\n\t\t\t\tif (strict) {\n\t\t\t\t\tif (flow.length == m.count) {\n\t\t\t\t\t\tresult.push(m);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresult.push(m);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetFunnelInteraction(df, task, includeDropOff) {\n\t\tconst result = {}\n\t\tconst sessions = this.getTaskPerformance(df, [task])\n\t\tsessions.data.forEach(session => {\n\t\t\tthis.addFunnelInteractionSteps(result, session, false)\n\t\t})\n\n\t\tif (includeDropOff) {\n\t\t\tconst subtasks = this.getFunnelTasks(task);\n\t\t\tsubtasks.forEach(subTask => {\n\t\t\t\tif (subTask.flow.length > 2 && subTask.flow.length < task.flow.length) {\n\t\t\t\t\tconst sessions = this.getTaskPerformance(df, [subTask])\n\t\t\t\t\tsessions.data.forEach(session => {\n\t\t\t\t\t\tif (!result[session.session]) {\n\t\t\t\t\t\t\tthis.addFunnelInteractionSteps(result, session, true)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\treturn result\n\t}\n\n\taddFunnelInteractionSteps (result, session, isDropOff = false) {\n\t\tlet lastPos = 0\n\t\tresult[session.session] = []\n\t\tsession.hits.forEach(hit => {\n\t\t\tconst pos = hit.pos - lastPos\n\t\t\tresult[session.session].push({\n\t\t\t\tvalue: pos,\n\t\t\t\tdropoff:isDropOff\n\t\t\t})\n\t\t\tlastPos = hit.pos\n\t\t})\n\t}\n\n\n\tgetFunnelDuration(df, task, includeDropOff = false) {\n\t\tconst result = {}\n\t\tconst sessions = this.getTaskPerformance(df, [task])\n\t\tsessions.data.forEach(session => {\n\t\t\tthis.addFunnelDurartionSteps(result, session)\n\t\t})\n\n\n\t\tif (includeDropOff) {\n\t\t\tconst subtasks = this.getFunnelTasks(task);\n\t\t\tsubtasks.forEach(subTask => {\n\t\t\t\tif (subTask.flow.length > 2 && subTask.flow.length < task.flow.length) {\n\t\t\t\t\tconst sessions = this.getTaskPerformance(df, [subTask])\n\t\t\t\t\tsessions.data.forEach(session => {\n\t\t\t\t\t\tif (!result[session.session]) {\n\t\t\t\t\t\t\tthis.addFunnelDurartionSteps(result, session, true)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\treturn result\n\t}\n\n\taddFunnelDurartionSteps (result, session, isDropOff = false) {\n\t\tlet lastTime = session.startTime\n\t\tresult[session.session] = []\n\t\tsession.hits.forEach(hit => {\n\t\t\tconst duration = hit.time - lastTime\n\t\t\tresult[session.session].push({\n\t\t\t\tvalue: duration,\n\t\t\t\tdropoff: isDropOff\n\t\t\t})\n\t\t\tlastTime = hit.time\n\t\t})\n\t}\n\n\tgetFunnelMax (stepData) {\n\t\tlet result = 0\n\t\tfor (let id in stepData) {\n\t\t\tlet steps = stepData[id]\n\t\t\tsteps.forEach((step) => {\n\t\t\t\tresult = Math.max(result, step.value)\n\t\t\t})\n\t\t}\n\t\treturn result\n\t}\n\n\tgetSessionSummary(events) {\n\t\tconst result = {}\n\t\tconst sessions = events.groupBy(\"session\");\n\t\tsessions.foreach((session, id) => {\n\t\t\tconst count = session.count('type')\n\t\t\tconst screenLoads = count.get('ScreenLoaded', null, 0) + count.get('OverlayLoaded', null, 0)\n\t\t\tconst uniqueScreens =  session.unique('screen')\n\t\t\tconst clicks = session.select(\"type\", \"in\",[\"ScreenClick\",\"WidgetClick\",\"WidgetChange\", \"ScreenGesture\", \"WidgetGesture\"])\n\t\t\tresult[id] = {\n\t\t\t\tsession: id,\n\t\t\t\tsize: session.size(),\n\t\t\t\tinteractions: clicks.size(),\n\t\t\t\tdate: session.min(\"time\"),\n\t\t\t\tduration:  Math.ceil((session.max(\"time\") - session.min(\"time\"))),\n\t\t\t\tscreenLoads: screenLoads,\n\t\t\t\tscreenUnique: uniqueScreens,\n\t\t\t\tscreenRatio: uniqueScreens / screenLoads,\n\t\t\t\terrors: count.get('ValidationError', null, 0)\n\t\t\t}\n\t\t})\n\t\treturn result\n\t}\n\n\n\tgetSessionDetails (events, tasks) {\n\t\tevents.sortBy(\"time\");\n\t\tconst sessions = this.getSessionSummary(events)\n\t\tObject.values(sessions).forEach(session => {\n\t\t\tsession.tasks = 0\n\t\t\tfor (let t = 0; t < tasks.length; t++) {\n\t\t\t\tconst task = tasks[t];\n\t\t\t\tsession[task.id] = {\n\t\t\t\t\tname: task.name,\n\t\t\t\t\tsuccess: 0,\n\t\t\t\t\tduration: -1,\n\t\t\t\t\tinteractions: -1\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t\n\t\tconst taskPerformance = this.getTaskPerformance(events, tasks).data\n\t\ttaskPerformance.forEach(perf => {\n\t\t\tconst session = sessions[perf.session]\n\t\t\tif (session) {\n\t\t\t\tsession.tasks++\n\t\t\t\tconst t = session[perf.task]\n\t\t\t\tt.success = 1\n\t\t\t\tt.duration = perf.duration\n\t\t\t\tt.interactions = perf.interactions\n\t\t\t} else {\n\t\t\t\tconsole.error('Analytics.getSessionDetails() > No session ??')\n\t\t\t}\n\t\t})\n\n\t\treturn new DataFrame(Object.values(sessions))\n\t}\n\n\tconvertSessionDetails (sessions) {\n\t\treturn sessions.data.map(r => {\n\t\t\tconst result = {}\n\t\t\tfor (let key in r) {\n\t\t\t\tif (key !== 'start') {\n\t\t\t\t\tconst value = r[key]\n\t\t\t\t\tif (value.name) {\n\t\t\t\t\t\tresult[key] = value.success\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult[key] = value\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result\n\t\t})\n\t\t\n\t}\n\n\t\n\t/**\n\t * allowPartial is for funnel??\n\t */\n\tgetTaskPerformance(df, tasks, allowMultiMatch, allowPartial) {\n\t\tPerformanceMonitor.start('Analytics.getTaskPerformance()')\n\t\tconst result = [];\n\t\tconst matchers = [];\n\t\tfor (let t = 0; t < tasks.length; t++) {\n\t\t\tconst task = tasks[t];\n\t\t\tconst flow = task.flow;\n\t\t\tif (flow && flow.length > 0) {\n\t\t\t\tconst matcher = this.createMatcher(task.id, flow, task.strict);\n\t\t\t\tmatcher.taskName = task.name;\n\t\t\t\tmatchers.push(matcher);\n\t\t\t}\n\t\t}\n\t\tconst matcherLength = matchers.length;\n\n\t\tdf.sortBy(\"time\");\n\t\tconst sessions = df.groupBy(\"session\");\n\n\t\t/**\n\t\t * for every session match run all matchers\n\t\t */\n\t\tsessions.foreach((session) => {\n\n\t\t\t/**\n\t\t\t * loop over all events\n\t\t\t */\n\t\t\tconst events = session.as_array();\n\t\t\tconst l = events.length;\n\t\t\n\t\t\t/**\n\t\t\t * reset all matchers\n\t\t\t */\n\t\t\tfor (let m = 0; m < matcherLength; m++) {\n\t\t\t\tconst matcher = matchers[m];\n\t\t\t\tmatcher.reset();\n\t\t\t\tmatcher.init(events[0]);\n\t\t\t\tmatcher.disabled = false;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < l; i++) {\n\t\t\t\tconst e = events[i];\n\t\t\t\n\t\t\t\t/**\n\t\t\t\t * run all matchers\n\t\t\t\t */\n\t\t\t\tfor (let m = 0; m < matcherLength; m++) {\n\t\t\t\t\tconst matcher = matchers[m];\n\t\t\t\n\t\t\t\t\t/**\n\t\t\t\t\t * Usually we want to match each task max once!\n\t\t\t\t\t * If we have a match, the corresponding\n\t\t\t\t\t * matched will be disabled\n\t\t\t\t\t */\n\t\t\t\t\tif (!matcher.disabled) {\n\t\t\t\t\t\tconst match = matcher.next(e, i);\n\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\tif ((match.partial && allowPartial) || !match.partial) {\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * Support strict matching\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tif (matcher.strict) {\n\t\t\t\t\t\t\t\t\tif (match.count == matcher.flow.length) {\n\t\t\t\t\t\t\t\t\t\tresult.push(match);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tresult.push(match);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * if we do not want to count if\n\t\t\t\t\t\t\t\t * a user manages a task more than one time.\n\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tif (!allowMultiMatch) {\n\t\t\t\t\t\t\t\t\tmatcher.disabled = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tPerformanceMonitor.end('Analytics.getTaskPerformance()')\n\t\treturn new DataFrame(result);\n\t}\n\n\tgetMergedTaskPerformance(df, tasks, annotations) {\n\t\tlet result = [];\n\t\tconst temp = this.getTaskPerformance(df, tasks);\n\n\n\t\t/**\n\t\t * build fast lookup\n\t\t */\n\t\ttemp.setIndex([\"session\", \"task\"])\n\n\t\t/**\n\t\t * first add all rows from the annotations.\n\t\t */\n\t\tconst l = annotations.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tconst a = annotations[i];\n\t\t\tif (a.isValid) {\n\t\t\t\tconst session = a.reference;\n\t\t\t\tfor (let task in a.tasks) {\n\t\t\t\t\tconst value = a.tasks[task];\n\t\t\t\t\tconst row = temp.ix([session, task], true)\n\n\t\t\t\t\tif (value && !row) {\n\t\t\t\t\t\t//console.debug(session, task, \" add \", value);\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Add an artifical math\n\t\t\t\t\t\t * if there is now real match\n\t\t\t\t\t\t */\n\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\tstartTime: -1,\n\t\t\t\t\t\t\tdiscoveryTime: -1,\n\t\t\t\t\t\t\tendTime: -1,\n\t\t\t\t\t\t\tstartPosition: -1,\n\t\t\t\t\t\t\tendPosition: -1,\n\t\t\t\t\t\t\tduration: 0,\n\t\t\t\t\t\t\tcount: -1,\n\t\t\t\t\t\t\tpartial: false,\n\t\t\t\t\t\t\tsession: session,\n\t\t\t\t\t\t\ttask: task,\n\t\t\t\t\t\t\tuser: \"\" // FIXME: get later the user from this session\n\t\t\t\t\t\t})\n\n\t\t\t\t\t} else if (row && !value) {\n\t\t\t\t\t\t//console.debug(session, task, \" remove \", value);\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * else remove row\n\t\t\t\t\t\t */\n\t\t\t\t\t\tconst index = row.index;\n\t\t\t\t\t\ttemp.remove(index)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * merge both sets.\n\t\t */\n\t\tresult = temp.data.concat(result);\n\t\treturn new DataFrame(result);\n\t}\n\n\n\tgetFunnelSummary(df, task, annotation) {\n\t\t/**\n\t\t * We simply build for each subflow a new task\n\t\t */\n\n\t\tconst tasks = this.getFunnelTasks(task);\n\n\t\t/**\n\t\t * Now we run the normal task analytics\n\t\t */\n\t\tconst summary = this.getTaskSummary(df, tasks, annotation);\n\t\tconst sessionCount = df.count(\"session\").size();\n\n\t\tconst all = [{\n\t\t\tlabel: task.name + \"_all\",\n\t\t\tid: task.id + \"_all\",\n\t\t\tvalue: sessionCount,\n\t\t\tsessionCount: sessionCount,\n\t\t\tp: 1,\n\t\t\tflow: 0,\n\t\t}];\n\n\n\t\tconst result = all.concat(summary.reverse());\n\t\tfor (let i = 1; i < result.length; i++) {\n\t\t\tconst item = result[i];\n\t\t\titem.event = task.flow[i - 1];\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tgetFunnelTasks(task) {\n\t\tconst tasks = [];\n\t\tconst flow = lang.clone(task.flow);\n\t\twhile (flow.length > 0) {\n\t\t\tconst t = lang.clone(task);\n\t\t\tt.id = task.id + \"_\" + flow.length;\n\t\t\tt.name += task.name + \"_\" + flow.length;\n\t\t\tt.flow = lang.clone(flow);\n\t\t\ttasks.push(t);\n\t\t\tflow.pop();\n\t\t}\n\t\treturn tasks\n\t}\n\t\n\n\tgetTaskStarts (df, tasks) {\n\t\tconst startTasks = tasks.map(task => {\n\t\t\tconst t = lang.clone(task);\n\t\t\tt.id = task.id\n\t\t\tt.name = task.name\n\t\t\tt.flow = [task.flow[0]] // just take the start of the flow\n\t\t\treturn t\n\t\t})\n\t\tconst summary = this.getTaskPerformance(df, startTasks);\n\t\treturn summary\n\t}\n\n\n\tgetTaskSummary(df, tasks, annotation) {\n\n\t\tconst sessionCount = df.count(\"session\").size();\n\n\t\tconst tasksPerformance = this.getMergedTaskPerformance(df, tasks, annotation);\n\t\tconst taskGrouping = tasksPerformance.groupBy(\"task\");\n\t\n\t\tconst startTaskPerformace = this.getTaskStarts(df, tasks)\n\t\tconst startGrouping = startTaskPerformace.groupBy(\"task\")\n\t\n\t\tconst list = [];\n\t\tfor (let i = 0; i < tasks.length; i++) {\n\t\t\tconst task = tasks[i];\n\t\t\tlet taskDf = taskGrouping.get(task.id);\n\t\t\n\n\t\t\t/**\n\t\t\t * FIXME: This is a bug! The analytics.getMergedTaskPerformance(df, tasks, annotation );\n\t\t\t * should have also performance for this task!\n\t\t\t */\n\t\t\tif (taskDf) {\n\t\t\t\tconst taskCount = taskDf.size();\n\t\t\t\tconst startDf = startGrouping.get(task.id)\n\t\t\t\tlet startCount = startDf ? startDf.size() : sessionCount\n\t\t\t\n\t\t\t\t/**\n\t\t\t\t * for the time based stats we do not want manual\n\t\t\t\t * annotated tasks\n\t\t\t\t */\n\t\t\t\ttaskDf = taskDf.select(\"startTime\", \">\", 0);\n\n\n\t\t\t\tlist.push({\n\t\t\t\t\tlabel: task.name,\n\t\t\t\t\tid: task.id,\n\t\t\t\t\tvalue: taskCount,\n\t\t\t\t\tsessionCount: sessionCount,\n\t\t\t\t\tsessionStart: startCount / sessionCount,\n\t\t\t\t\tp: taskCount / startCount,\n\t\t\t\t\tsuccess: taskCount / startCount,\n\t\t\t\t\tsuccessRel: taskCount / startCount,\n\t\t\t\t\tsuccessAbs: taskCount,\n\t\t\t\t\tflow: task.flow.length,\n\t\t\t\t\tstartCount: startCount,\n\t\t\t\t\tstartRel: startCount / sessionCount,\n\n\t\t\t\t\tstartMean: taskDf.mean(\"startPosition\"),\n\t\t\t\t\tstartStd: taskDf.std(\"startPosition\"),\n\t\t\t\t\tdiscoveryTimeMean: taskDf.mean(\"discoveryTime\"),\n\t\t\t\t\tdiscoveryTimeStd: taskDf.std(\"discoveryTime\"),\n\t\t\t\t\tdurationMean: taskDf.mean(\"duration\"),\n\t\t\t\t\tdurationMedian: taskDf.median(\"duration\"),\n\t\t\t\t\tdurationStd: taskDf.std(\"duration\"),\n\t\t\t\t\tcountMean: taskDf.mean(\"count\"),\n\t\t\t\t\tcountStd: taskDf.std(\"count\"),\n\t\t\t\t\tinteractionsMean: taskDf.mean(\"interactions\"),\n\t\t\t\t\tinteractionsStd: taskDf.std(\"interactions\")\n\t\t\t\t});\n\t\t\t} else {\n\n\t\t\t\tlist.push({\n\t\t\t\t\tlabel: task.name,\n\t\t\t\t\tid: task.id,\n\t\t\t\t\tsessionCount: sessionCount,\n\t\t\t\t\tvalue: 0,\n\t\t\t\t\tp: 0,\n\t\t\t\t\tsuccess: 0,\n\t\t\t\t\tsuccessRel: 0,\n\t\t\t\t\tsuccessAbs: 0,\n\t\t\t\t\tflow: task.flow.length,\n\t\t\t\t\tstartAbs: 0,\n\t\t\t\t\tstartMean: 0,\n\t\t\t\t\tstartStd: 0,\n\t\t\t\t\tdiscoveryTimeMean: 0,\n\t\t\t\t\tdiscoveryTimeStd: 0,\n\t\t\t\t\tdurationMean: 0,\n\t\t\t\t\tdurationMedian: 0,\n\t\t\t\t\tdurationStd: 0,\n\t\t\t\t\tcountMean: 0,\n\t\t\t\t\tcountStd: 0,\n\t\t\t\t\tinteractionsMean: 0,\n\t\t\t\t\tinteractionsStd: 0\n\t\t\t\t});\n\t\t\t}\n\n\n\n\t\t}\n\t\treturn list;\n\t}\n\n\n\t/********************************************************************************************\n\t * Overlay Stuff\n\t *******************************************************************************************/\n\n\tgetOverlayTimeGrouping(df) {\n\n\t\t/**\n\t\t * Overlay times\n\t\t */\n\t\tvar sessionGrouping = df.groupBy(\"session\");\n\t\tvar screenTimes = {};\n\t\tsessionGrouping.foreach(function (session) {\n\t\t\tsession.sortBy(\"time\");\n\t\t\tvar startTimes = {};\n\t\t\tvar currentTime = -1;\n\t\t\tvar lastScreen = null;\n\t\t\tvar t = null;\n\n\t\t\tsession.foreach(function (row) {\n\t\t\t\tt = row[\"type\"];\n\t\t\t\tcurrentTime = row[\"time\"];\n\t\t\t\tvar screenID = row[\"overlay\"];\n\t\t\t\t/**\n\t\t\t\t * start counting when overlay is shown\n\t\t\t\t */\n\t\t\t\tif (t == \"OverlayLoaded\") {\n\t\t\t\t\tstartTimes[screenID] = currentTime;\n\t\t\t\t\tlastScreen = screenID;\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Stop when overlay is removed or other screen is loaded\n\t\t\t\t */\n\t\t\t\tif (t == \"OverlayRemoved\") {\n\t\t\t\t\tif (startTimes[screenID]) {\n\t\t\t\t\t\tif (!screenTimes[screenID]) {\n\t\t\t\t\t\t\tscreenTimes[screenID] = new DataFrame([]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar dif = currentTime - startTimes[screenID];\n\t\t\t\t\t\tscreenTimes[screenID].push(dif);\n\t\t\t\t\t}\n\t\t\t\t\tdelete startTimes[screenID];\n\t\t\t\t}\n\n\t\t\t\tif (t == \"ScreenLoaded\") {\n\t\t\t\t\tfor (let screenID in startTimes) {\n\t\t\t\t\t\tif (!screenTimes[screenID]) {\n\t\t\t\t\t\t\tscreenTimes[screenID] = new DataFrame([]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet dif = currentTime - startTimes[screenID];\n\t\t\t\t\t\tscreenTimes[screenID].push(dif);\n\t\t\t\t\t}\n\t\t\t\t\tstartTimes = {};\n\t\t\t\t}\n\n\t\t\t\t//|| t == \"ScreenLoaded\"\n\n\n\t\t\t});\n\n\t\t\tif (startTimes[lastScreen] && currentTime > 0 && t != \"OverlayLoaded\") {\n\t\t\t\tif (!screenTimes[lastScreen]) {\n\t\t\t\t\tscreenTimes[lastScreen] = new DataFrame([]);\n\t\t\t\t}\n\t\t\t\tvar dif = currentTime - startTimes[lastScreen];\n\t\t\t\tscreenTimes[lastScreen].push(dif);\n\t\t\t}\n\n\t\t});\n\n\t\treturn new Grouping(screenTimes, DataFrame);\n\t}\n\n\t/********************************************************************************************\n\t * Screen Stuff\n\t *******************************************************************************************/\n\n\tgetScreenTimeGrouping(df) {\n\n\t\t/**\n\t\t * Screen times\n\t\t */\n\t\tvar sessionGrouping = df.groupBy(\"session\");\n\t\tvar screenTimes = {};\n\t\tsessionGrouping.foreach(function (session) {\n\t\t\tsession.sortBy(\"time\");\n\t\t\tvar lastTime = -1;\n\t\t\tvar currentTime = -1;\n\t\t\tvar lastScreen = null;\n\t\t\tvar t = null;\n\t\t\tsession.foreach(function (row) {\n\t\t\t\tt = row[\"type\"];\n\t\t\t\tcurrentTime = row[\"time\"];\n\t\t\t\tvar screenID = row[\"screen\"];\n\t\t\t\tif (t == \"ScreenLoaded\") {\n\t\t\t\t\tif (lastTime > -1) {\n\t\t\t\t\t\tif (!screenTimes[lastScreen]) {\n\t\t\t\t\t\t\tscreenTimes[lastScreen] = new DataFrame([]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar dif = currentTime - lastTime;\n\t\t\t\t\t\tscreenTimes[lastScreen].push(dif);\n\t\t\t\t\t}\n\t\t\t\t\tlastTime = currentTime;\n\t\t\t\t\tlastScreen = screenID;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (lastTime > 0 && currentTime > 0 && t != \"ScreenLoaded\") {\n\t\t\t\tif (!screenTimes[lastScreen]) {\n\t\t\t\t\tscreenTimes[lastScreen] = new DataFrame([]);\n\t\t\t\t}\n\t\t\t\tvar dif = currentTime - lastTime;\n\t\t\t\tscreenTimes[lastScreen].push(dif);\n\t\t\t}\n\n\t\t});\n\n\t\treturn new Grouping(screenTimes, DataFrame);\n\t}\n\n\tgetScreenTime(df) {\n\n\t\t/**\n\t\t * Screen times\n\t\t */\n\t\tvar sessionGrouping = df.groupBy(\"session\");\n\t\tvar screenTimes = {};\n\t\tsessionGrouping.foreach(function (session) {\n\t\t\tsession.sortBy(\"time\");\n\t\t\tvar lastTime = -1;\n\t\t\tvar lastScreen = null;\n\t\t\tvar t = null;\n\t\t\tvar currentTime = -1;\n\t\t\tsession.foreach(function (row) {\n\t\t\t\tvar t = row[\"type\"];\n\t\t\t\tcurrentTime = row[\"time\"];\n\t\t\t\tvar screenID = row[\"screen\"];\n\t\t\t\tif (t == \"ScreenLoaded\") {\n\t\t\t\t\tif (lastTime > -1) {\n\t\t\t\t\t\tif (!screenTimes[lastScreen]) {\n\t\t\t\t\t\t\tscreenTimes[lastScreen] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar dif = currentTime - lastTime;\n\t\t\t\t\t\tscreenTimes[lastScreen] += dif;\n\t\t\t\t\t}\n\t\t\t\t\tlastTime = currentTime;\n\t\t\t\t\tlastScreen = screenID;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (lastTime > 0 && currentTime > 0 && t != \"ScreenLoaded\") {\n\t\t\t\tif (!screenTimes[lastScreen]) {\n\t\t\t\t\tscreenTimes[lastScreen] = 0;\n\t\t\t\t}\n\t\t\t\tvar dif = currentTime - lastTime;\n\t\t\t\tscreenTimes[lastScreen] += dif;\n\t\t\t}\n\t\t});\n\n\n\t\treturn new DataFrame(screenTimes);\n\t}\n\n\n\n\t/********************************************************************************************\n\t * Widget Stuff\n\t *******************************************************************************************/\n\n\t/**\n\t * Get merged \"report\" for all widgets relative to the entire application!!\n\t *\n\t */\n\tgetWidgetStatistics(app, df) {\n\n\t\tvar result = {};\n\n\n\t\t/**\n\t\t * Get all clicks for the widgets\n\t\t */\n\t\tvar widgetEvents = df.select(\"type\", \"==\", \"WidgetClick\");\n\t\t// var widgetGrouping = widgetEvents.groupBy(\"widget\");\n\t\tvar widgetCounts = widgetEvents.count(\"widget\");\n\n\n\t\t/**\n\t\t * FIXME: Should be in Screen or?\n\t\t */\n\t\tvar totalWidgetEvents = widgetCounts.sum();\n\n\n\t\tvar discoverTime = this.getWidgetDiscoverTime(df);\n\t\tvar meanDiscoverTime = discoverTime.mean();\n\t\tvar totalDicoverTime = meanDiscoverTime.max();\n\t\tvar discoverTimeSTD = discoverTime.std();\n\n\t\tvar widgetViewCount = discoverTime.size();\n\n\n\t\tvar widgetFirstClick = this.getWidgetFirstClick(df);\n\t\tvar totalFirstClicks = widgetFirstClick.sum();\n\n\t\tvar screenLoadEvents = df.select(\"type\", \"in\", [\"ScreenLoaded\", \"OverlayLoaded\"]);\n\t\tvar screenLoads = screenLoadEvents.count(\"screen\");\n\n\n\t\tfor (var widgetID in app.widgets) {\n\t\t\tvar parentScreenID = this._getParentScreenID(app, widgetID);\n\t\t\tresult[widgetID] = {\n\t\t\t\tclicksAbs: widgetCounts.get(widgetID, null, 0),\n\t\t\t\tclicksRel: widgetCounts.get(widgetID, null, 0) / totalWidgetEvents,\n\t\t\t\tdiscoverTimeAbs: meanDiscoverTime.get(widgetID, null, 0),\n\t\t\t\tdiscoverTimeRel: meanDiscoverTime.get(widgetID, null, 0) / totalDicoverTime,\n\t\t\t\tdiscoverTimeStd: discoverTimeSTD.get(widgetID, null, 0),\n\t\t\t\tviews: widgetViewCount.get(widgetID, null, 0),\n\t\t\t\tfirstClicksAbs: widgetFirstClick.get(widgetID, null, 0),\n\t\t\t\tfirstClicksRelApp: widgetFirstClick.get(widgetID, null, 0) / totalFirstClicks,\n\t\t\t\tfirstClicksRelScreen: widgetFirstClick.get(widgetID, null, 0) / screenLoads.get(parentScreenID, null, 0),\n\t\t\t};\n\n\t\t}\n\t\treturn result;\n\t}\n\n\n\t_getParentScreenID(model, widgetID) {\n\t\t/**\n\t\t * FIXME: This could be faster\n\t\t */\n\t\tfor (var id in model.screens) {\n\t\t\tvar screen = model.screens[id];\n\t\t\tvar i = screen.children.indexOf(widgetID);\n\t\t\tif (i > -1) {\n\t\t\t\treturn screen.id;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\n\n\t/**\n\t * Return a grouping containing the time needed\n\t * from a ScreenLoad until the widget was clicked\n\t */\n\tgetWidgetDiscoverTime(df) {\n\n\t\t/**\n\t\t * Scan each session\n\t\t */\n\t\tvar sessionGrouping = df.groupBy(\"session\");\n\t\tvar widgetGetOrder = {};\n\t\t// var widgetFirstClicks = {};\n\t\tsessionGrouping.foreach(function (session) {\n\t\t\t/**\n\t\t\t * sort by time\n\t\t\t */\n\t\t\tsession.sortBy(\"time\");\n\t\t\t// var t = null;\n\t\t\tvar loadTime = 0;\n\t\t\tvar widgetWasClicked = {};\n\t\t\t// var count = 0;\n\t\t\tsession.foreach(function (row) {\n\t\t\t\tvar type = row[\"type\"];\n\t\t\t\tvar widgetID = row[\"widget\"];\n\t\t\t\tvar time = row[\"time\"];\n\n\t\t\t\tif (type == \"ScreenLoaded\" || type == \"OverlayLoaded\") {\n\t\t\t\t\t/**\n\t\t\t\t\t * Screen load : set reference time and clear flag map\n\t\t\t\t\t * for seen widgets.\n\t\t\t\t\t */\n\t\t\t\t\tloadTime = time;\n\t\t\t\t\twidgetWasClicked = {};\n\t\t\t\t\t// count = 0;\n\n\t\t\t\t} else if (type == \"WidgetClick\" && widgetID) {\n\t\t\t\t\t/**\n\t\t\t\t\t *  We do not want to count widget clicks double... so we\n\t\t\t\t\t *  remember that we have seen the widget already in a\n\t\t\t\t\t *  screen session.\n\t\t\t\t\t */\n\t\t\t\t\tif (!widgetWasClicked[widgetID]) {\n\t\t\t\t\t\tif (!widgetGetOrder[widgetID]) {\n\t\t\t\t\t\t\twidgetGetOrder[widgetID] = new DataFrame([]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twidgetGetOrder[widgetID].push(time - loadTime);\n\t\t\t\t\t\twidgetWasClicked[widgetID] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\treturn new Grouping(widgetGetOrder);\n\t}\n\n\n\t/**\n\t * Return a grouping containing the time needed\n\t * from a ScreenLoad until the widget was clicked\n\t */\n\tgetWidgetFirstClick(df) {\n\n\t\t/**\n\t\t * Scan each session\n\t\t */\n\t\tvar sessionGrouping = df.groupBy(\"session\");\n\n\t\tvar widgetFirstClicks = {};\n\t\tsessionGrouping.foreach(function (session) {\n\t\t\t/**\n\t\t\t * sort by time\n\t\t\t */\n\t\t\tsession.sortBy(\"time\");\n\t\t\tvar count = 0;\n\t\t\tsession.foreach(function (row) {\n\t\t\t\tvar type = row[\"type\"];\n\t\t\t\tvar widgetID = row[\"widget\"];\n\t\t\t\t// var time = row[\"time\"];\n\n\t\t\t\tif (type == \"ScreenLoaded\" || type == \"OverlayLoaded\") {\n\t\t\t\t\tcount = 0;\n\t\t\t\t} else if (type == \"WidgetClick\" && widgetID) {\n\t\t\t\t\tif (count == 0) {\n\t\t\t\t\t\tif (!widgetFirstClicks[widgetID]) {\n\t\t\t\t\t\t\twidgetFirstClicks[widgetID] = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twidgetFirstClicks[widgetID]++;\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t});\n\t\treturn new DataFrame(widgetFirstClicks);\n\n\t}\n\n\n\n\tgetWidgetDiscoverOrder(df) {\n\n\t\t/**\n\t\t * Scan each session\n\t\t */\n\t\tvar sessionGrouping = df.groupBy(\"session\");\n\t\tvar widgetGetOrder = {};\n\t\tsessionGrouping.foreach(function (session) {\n\t\t\t/**\n\t\t\t * sort by time\n\t\t\t */\n\t\t\tsession.sortBy(\"time\");\n\t\t\tvar t = null;\n\t\t\tvar count = 0;\n\t\t\tsession.foreach(function (row) {\n\t\t\t\tt = row[\"type\"];\n\t\t\t\tvar widgetID = row[\"widget\"];\n\t\t\t\tif (t == \"ScreenLoaded\" || t == \"OverlayLoaded\") {\n\t\t\t\t\tcount = 0;\n\t\t\t\t\t//console.debug(\" ----- \");\n\t\t\t\t}\n\t\t\t\tif (widgetID) {\n\t\t\t\t\tcount++;\n\t\t\t\t\t//console.debug(\" - \", widgetID, count);\n\t\t\t\t\tif (!widgetGetOrder[widgetID]) {\n\t\t\t\t\t\twidgetGetOrder[widgetID] = new DataFrame([]);\n\t\t\t\t\t}\n\t\t\t\t\twidgetGetOrder[widgetID].push(count);\n\t\t\t\t}\n\n\t\t\t});\n\n\n\t\t});\n\n\t\treturn new Grouping(widgetGetOrder, DataFrame);\n\n\t}\n\n}\n\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_m","_v","_s","label","_e","staticRenderFns","attrs","name","mixins","data","checked","props","components","methods","postCreate","getValue","setValue","value","css","setLabel","l","onChange","e","watch","v","mounted","component","hasObjects","updateLabel","maxLabelLength","openCSS","labelCSS","isOpen","toggleDropDown","setOptions","list","li","lbl","selectedValue","Ring","ProgressBar","eventLabels","WidgetClick","ScreenLoaded","ScreenClick","WidgetChange","ScreenScroll","OverlayLoaded","OverlayRemoved","ValidationError","ValidationErrorLine","ValidationOK","ScreenGesture","WidgetGesture","gestureLabels","swipeLeft","swipeRight","swipeUp","swipeDown","getIcons","fixGestures","events","device","event","error","console","_distributedPositions","type","ids","boundingBox","getClones","xFactor","yFactor","offSets","x","y","box","id","w","h","z","group","cloneOff","result","previews","count","clones","_getGroupChildResizePosition","getObjectFromArray","key","getWidgetsByDistanceAndType","d","getObjectLength","getEventStateLabel","getGestureLabel","getEventLabel","getScreenName","screenID","getWidgetName","filterEvents","bad","temp","getActionEvents","df","PerformanceMonitor","getClickEvents","createEmptyImage","has","onclick","backgroundImage","border","actions","style","borderTopRightRadius","borderTopLeftRadius","borderBottomRightRadius","borderBottomLeftRadius","borderTopWidth","borderBottomWidth","borderRightWidth","borderLeftWidth","borderTopColor","borderBottomColor","borderRightColor","borderLeftColor","createEmptyScreen","background","min","image","start","children","getAppTypeIcon","model","getDomain","ring","size","color","simpleStats","db","getDB","progress","node","row","col","bar","bulletGraph","bulletGraphTable","table","tbody","build","createUserImage","parent","img","imgCntr","span","getCommentUserName","getUserLetter","getUserName","resizeSimulatorContainer","pos","container","renderCommentPopup","textarea","comment","cntr","txtarea","s","icon","callback","on","close","lang","getWidgets","getScreens","app","getClickableWidgets","getModelChildren","getWidgetsWithoutParent","getBoxById","copiedParentWidget","getToLines","getLines","_ids","hasLine","getLine","getFromBox","line","fromPos","getToBox","to","getTemplateGroupOrderChildren","getBoundingBox","getBoundingBoxByBoxes","boxes","getHoverScreen","_getHoverScreen","_isBoxChild","obj","_isContainedInBox","countProps","objectEquals","r","round","formatTime","millis","formatSTD","formatRound","formatNumber","formatPercent","cls","formatDate","formatString","getNormalizeWidgetZValues","values","lastZ","getMinZValue","widgets","getMaxZValue","max","getZValues","DataFrame","_isDataFrame","length","foreach","push","arr","as_array","forEach","warn","column","operator","inLookup","Array","isArray","indexOf","i","c","isNaN","substring","get","defaultValue","undefined","bins","p_min","p_max","Math","width","buckets","bucket","from","b","desc","sort","a","debu","floor","sum","Number","MIN_VALUE","MAX_VALUE","mean","variance","dif","sqrt","Grouping","keys","index","k","includeIndex","splice","header","me","_correctLength","debug","columns","timestamp","Date","setMinutes","setMilliseconds","getTime","other","newData","concat","_vommondCurrentDialog","Dialog","params","autoClose","wrapperClass","overflow","isFullScreen","hasCSSAnimation","log","Logger","info","cleanUpEvented","hasFullScreen","fullScreenListener","clazz","topic","publish","document","createElement","add","fullscreen","appendChild","own","touch","press","hitch","wrapper","content","win","body","subscribe","startPos","getStartPos","endPos","domGeom","position","backPos","top","height","left","ratioW","ratioH","transform","setTimeout","remove","emitOpen","_dialogBackground","_onOpenCallback","target","stopEvent","emit","removeChild","destroy","Evented","_foreach","df2","method","deep","j","entries","payloads","payload","logLevel","end","duration","anno","isValid","reference","session","test","options","showId","showTasksSucess","showTasksDuration","showTaskDetails","showTasksInteraction","rows","cols","tasks","meta","eventsDF","sortBy","taskPer","taskPerDF","getTaskPerformance","task","widgetDataBindings","widgetTypes","Object","isSurveyElement","Set","localeCompare","unshift","hidden","sessionGrouping","groupBy","sessionID","taskRow","sessionEvents","user","widget","state","join","taskData","interactions","numberOfClicks","filtered","firstNEvents","noheat","screenCount","screens","uniqueScreenPerSession","unique","tasksPerformance","names","sessionGroup","successTasks","taskID","tags","tagCount","tagSessionCount","tagTime","annotation","sessions","sessionTags","tagCounted","t","tag","time","flow","strict","match","flowPos","step","endStep","startTime","taskName","usePartialMatches","init","next","_match","discoveryTime","endTime","startPosition","endPosition","partial","hits","getEndTime","reset","screen","gesture","aState","bState","matcher","createMatcher","m","includeDropOff","addFunnelInteractionSteps","subtasks","getFunnelTasks","subTask","isDropOff","lastPos","hit","dropoff","addFunnelDurartionSteps","lastTime","stepData","steps","screenLoads","uniqueScreens","clicks","select","date","ceil","screenUnique","screenRatio","errors","getSessionSummary","success","taskPerformance","perf","map","allowMultiMatch","allowPartial","matchers","matcherLength","disabled","annotations","setIndex","ix","summary","getTaskSummary","sessionCount","all","p","reverse","item","clone","pop","startTasks","getMergedTaskPerformance","taskGrouping","startTaskPerformace","getTaskStarts","startGrouping","taskDf","taskCount","startDf","startCount","sessionStart","successRel","successAbs","startRel","startMean","startStd","std","discoveryTimeMean","discoveryTimeStd","durationMean","durationMedian","median","durationStd","countMean","countStd","interactionsMean","interactionsStd","startAbs","screenTimes","startTimes","currentTime","lastScreen","widgetEvents","widgetCounts","totalWidgetEvents","discoverTime","getWidgetDiscoverTime","meanDiscoverTime","totalDicoverTime","discoverTimeSTD","widgetViewCount","widgetFirstClick","getWidgetFirstClick","totalFirstClicks","screenLoadEvents","widgetID","parentScreenID","_getParentScreenID","clicksAbs","clicksRel","discoverTimeAbs","discoverTimeRel","discoverTimeStd","views","firstClicksAbs","firstClicksRelApp","firstClicksRelScreen","widgetGetOrder","loadTime","widgetWasClicked","widgetFirstClicks"],"sourceRoot":""}