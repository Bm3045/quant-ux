{"version":3,"file":"js/275.edae799c.js","mappings":"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","sources":["webpack://quant-ux/./src/common/CheckBox.vue?edf3","webpack://quant-ux/src/common/CheckBox.vue","webpack://quant-ux/./src/common/CheckBox.vue?144f","webpack://quant-ux/./src/common/CheckBox.vue","webpack://quant-ux/./src/core/Util.vue","webpack://quant-ux/./src/common/SlideLeftButton.vue?24b6","webpack://quant-ux/src/common/SlideLeftButton.vue","webpack://quant-ux/./src/common/SlideLeftButton.vue?96e8","webpack://quant-ux/./src/common/SlideLeftButton.vue","webpack://quant-ux/src/core/Util.vue","webpack://quant-ux/./src/core/Util.vue?13ea","webpack://quant-ux/./src/common/DataFrame.js","webpack://quant-ux/./src/common/Dialog.js","webpack://quant-ux/./src/common/Grouping.js","webpack://quant-ux/./src/core/PerformanceMonitor.js","webpack://quant-ux/./src/dash/Analytics.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"VommondCheckBoxWrapper\"},[_vm._m(0),(_vm.label)?_c('span',{staticClass:\"VommondCheckBoxLabel\"},[_vm._v(_vm._s(_vm.label))]):_vm._e()])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"VommondCheckBox\"},[_c('span',{staticClass:\"VommondCheckBoxHook\",attrs:{\"data-dojo-attach-point\":\"hook\"}})])}]\n\nexport { render, staticRenderFns }","// eslint-disable-next-line\n<template>\n\t<div class=\"VommondCheckBoxWrapper\">\n\t\t<div class=\"VommondCheckBox\">\n\t\t\t<span class=\"VommondCheckBoxHook\" data-dojo-attach-point=\"hook\">\n\t\t\t</span>\n\t\t</div>\n\t\t<span class=\"VommondCheckBoxLabel\" v-if=\"label\">{{label}}</span>\n\t</div>\n</template>\n\n<style lang=\"scss\">\n @import '../style/vommond.scss';\n</style>\n\n<script>\nimport DojoWidget from 'dojo/DojoWidget'\nimport css from 'dojo/css'\nimport touch from 'dojo/touch'\nimport lang from 'dojo/_base/lang'\nimport on from 'dojo/on'\nimport Logger from 'common/Logger'\n\nexport default {\n  name: 'CheckBox',\n  mixins: [DojoWidget],\n  data: function () {\n    return {\n      checked: false\n    }\n  },\n  props: ['label', 'value'],\n  components: {\n  },\n  methods: {\n\t\tpostCreate (){\n\t\t\tthis.log = new Logger('CheckBox')\n\t\t\tthis.own(on(this.domNode, touch.press, lang.hitch(this, \"onChange\")));\n\t\t\tif(this.value || this.value === \"true\"){\n\t\t\t\tthis.setValue(true);\n\t\t\t}\n\t\t},\n\n\t\tgetValue (){\n\t\t\treturn this.checked;\n\t\t},\n\n\t\tsetValue (value){\n\t\t\tthis.checked = value;\n\t\t\tif(value){\n\t\t\t\tcss.add(this.domNode,\"VommondCheckBoxChecked\") ;\n\t\t\t} else {\n\t\t\t\tcss.remove(this.domNode,\"VommondCheckBoxChecked\") ;\n\t\t\t}\n\t\t},\n\n\t\tsetLabel (l){\n\t\t\tthis.label = l\n\t\t},\n\n\t\tonChange (e){\n\t\t\tthis.stopEvent(e)\n\t\t\tthis.setValue(!this.checked);\n\t\t\tthis.emit(\"change\", this.checked );\n\t\t\tthis.emit(\"input\", this.checked );\n\t\t}\n  },\n  watch: {\n\t\tvalue (v) {\n\t\t\tthis.setValue(v)\n\t\t}\n  },\n  mounted () {\n      this.log.log(10, 'mounted', 'enter')\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CheckBox.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CheckBox.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CheckBox.vue?vue&type=template&id=057d039e&\"\nimport script from \"./CheckBox.vue?vue&type=script&lang=js&\"\nexport * from \"./CheckBox.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CheckBox.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render, staticRenderFns\nimport script from \"./Util.vue?vue&type=script&lang=js&\"\nexport * from \"./Util.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"VommondSlideLeftButton\"},[_c('div',{staticClass:\"VommondSlideLeftButtonLabel\",attrs:{\"type\":\"button\",\"data-dojo-attach-point\":\"button\"}},[_c('span',{staticClass:\"MatcPointer mdi mdi-dots-horizontal\",attrs:{\"data-dojo-attach-point\":\"label\"}})]),_c('div',{staticClass:\"VommondSlideLeftPopup\",attrs:{\"data-dojo-attach-point\":\"popup\"}},[_c('div',{staticClass:\"VommondSlideLeftPopupCntr\",attrs:{\"data-dojo-attach-point\":\"cntr\"}})])])}]\n\nexport { render, staticRenderFns }","\n<template>\n  <div class=\"VommondSlideLeftButton\">\n\t\t<div type=\"button\" class=\"VommondSlideLeftButtonLabel\" data-dojo-attach-point=\"button\"> \n\t\t\t<span data-dojo-attach-point=\"label\" class=\"MatcPointer mdi mdi-dots-horizontal\"></span> \n\t\t</div>\n\t\t<div class=\"VommondSlideLeftPopup\" data-dojo-attach-point=\"popup\">\n\t\t\t<div class=\"VommondSlideLeftPopupCntr\" data-dojo-attach-point=\"cntr\">\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n<script>\nimport DojoWidget from 'dojo/DojoWidget'\nimport css from 'dojo/css'\nimport lang from 'dojo/_base/lang'\nimport on from 'dojo/on'\nimport touch from 'dojo/touch'\n\nexport default {\n    name: 'SlideLeftButton',\n\t\tmixins:[DojoWidget],\n    data: function () {\n        return {\n            value: false, \n            hasObjects: false, \n            updateLabel: true, \n            maxLabelLength: -1, \n            openCSS: \"VommondSlideLeftPopupOpen\", \n            labelCSS: \"VommondSlideLeftPopupOpenLabel\", \n            isOpen: false\n        }\n    },\n    components: {},\n    methods: {\n      postCreate: function(){\n\t\t\t\tthis._lis={};\n\t\t\t\tthis.own(on(this.button, touch.press, lang.hitch(this, \"toggleDropDown\")));\n\t\t\t},\t\t\n\t\t\t\n\t\t\ttoggleDropDown (e){\t\t\t\n\t\t\t\tthis.stopEvent(e);\t\t\n\t\t\t\tif(this.isOpen){\n\t\t\t\t\tcss.remove(this.domNode, this.openCSS);\t\t\n\t\t\t\t} else {\n\t\t\t\t\tcss.add(this.domNode, this.openCSS);\t\n\t\t\t\t}\n\t\t\t\tthis.isOpen = !this.isOpen;\n\t\t\t},\t\t\t\t\n\t\t\t\n\t\t\tsetOptions (list){\n\t\t\t\tthis._lis={};\n\t\t\t\tvar selectedValue = null;\n\t\t\t\tfor(var i=0; i < list.length; i++){\n\t\t\t\t\tvar o = list[i];\n\t\t\t\t\tvar li = document.createElement(\"a\");\t\t\n\t\t\t\t\tcss.add(li, \"VommondSlideLeftPopupOpenItem\");\n\t\t\t\t\tif((o.label || o.icon) && o.value!=null){\n\t\t\t\t\t\tthis.hasObjects = true;\n\t\t\t\t\t\tif(o.icon){\n\t\t\t\t\t\t\tvar icon = document.createElement(\"span\");\n\t\t\t\t\t\t\t// css.add(icon,this.iconCSS);\n\t\t\t\t\t\t\tcss.add(icon, o.icon);\n\t\t\t\t\t\t\tli.appendChild(icon);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(o.label){\n\t\t\t\t\t\t\tvar lbl = document.createElement(\"a\");\n\t\t\t\t\t\t\tcss.add(lbl,this.labelCSS);\n\t\t\t\t\t\t\tlbl.innerHTML=o.label;\n\t\t\t\t\t\t\tli.appendChild(lbl);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(o.selected){\n\t\t\t\t\t\t\tselectedValue = o.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(o.href){\n\t\t\t\t\t\t\tli.href=o.href;\n\t\t\t\t\t\t} else if(o.callback){\n\t\t\t\t\t\t\tthis.own(on(li, touch.press, o.callback));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.own(on(li, touch.press, lang.hitch(this, \"onChange\", o.value)));\n\t\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\tthis._lis[o.value] = li;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tli.innerHTML = o;\n\t\t\t\t\t\tthis._lis[o] = li;\n\t\t\t\t\t\tthis.own(on(li, touch.press, lang.hitch(this, \"onChange\", list[i])));\n\t\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\tthis.cntr.appendChild(li);\n\t\t\t\t}\t\t\t\t\n\t\t\t\tthis._options = list;\t\t\t\n\t\t\t\tif(selectedValue){\n\t\t\t\t\tthis.setValue(selectedValue);\n\t\t\t\t}\t\t\n\t\t\t},\n\t\t\t\n\t\t\tonChange (value, e){\t\n\t\t\t\tthis.stopEvent(e);\t\t\t\n\t\t\t\tthis.emit(\"change\", value ,e);\n\t\t\t}\n    }, \n    mounted () {\n    }\n}\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SlideLeftButton.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SlideLeftButton.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SlideLeftButton.vue?vue&type=template&id=5dbe8fc6&\"\nimport script from \"./SlideLeftButton.vue?vue&type=script&lang=js&\"\nexport * from \"./SlideLeftButton.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n<script>\nimport DojoWidget from \"dojo/DojoWidget\";\nimport lang from \"dojo/_base/lang\";\nimport css from \"dojo/css\";\nimport on from \"dojo/on\";\nimport win from \"dojo/_base/win\";\nimport DomBuilder from \"common/DomBuilder\";\nimport Layout from \"core/Layout\";\nimport ModelGeom from 'core/ModelGeom'\nimport ModelResizer from 'core/ModelResizer'\nimport ModelUtil from 'core/ModelUtil'\nimport PerformanceMonitor from 'core/PerformanceMonitor'\nimport * as DistributeUtil from 'core/DistributionUtil'\nimport SlideLeftButton from 'common/SlideLeftButton'\n\nvar Ring = {};\nvar ProgressBar = {};\nexport default {\n  name: \"Util\",\n  mixins: [Layout, DojoWidget],\n  data: function() {\n    return {\n      eventLabels: {\n        WidgetClick: \"Click\",\n        ScreenLoaded: \"View\",\n        ScreenClick: \"Click\",\n        WidgetChange: \"Change\",\n        ScreenScroll: \"Scroll\",\n        OverlayLoaded: \"View Overlay\",\n        OverlayRemoved: \"Removed Overlay\",\n        ValidationError: \"Widget ValiationError\",\n        ValidationErrorLine: \"Form Validation Error\",\n        ValidationOK: \"Validation OK\",\n        ScreenGesture: \"Gesture\",\n        WidgetGesture: \"Gesture\"\n      },\n      gestureLabels: {\n        swipeLeft: \"Swipe Left\",\n        swipeRight: \"Swipe Right\",\n        swipeUp: \"Swipe Up\",\n        swipeDown: \"Swipe Down\"\n      }\n    };\n  },\n  components: {},\n  methods: {\n\n    getIcons () {\n      return this._matcIcons;\n    },\n\n    fixGestures(events) {\n      events.sort(function(a, b) {\n        return a.time - b.time;\n      });\n      var device = null;\n      var error = 0;\n      for (var i = 0; i < events.length; i++) {\n        var event = events[i];\n        if (event.type == \"SessionStart\") {\n          device = event.device;\n        }\n\n        if (event.type == \"ScreenGesture\" && event.gesture) {\n          if (event.gesture.start && event.gesture.start.x > 1) {\n            if (device) {\n              event.gesture.start.x = Math.min(\n                0.99,\n                event.gesture.start.x / device.w\n              );\n              event.gesture.start.y = Math.min(\n                0.99,\n                event.gesture.start.y / device.h\n              );\n              error++;\n            }\n          }\n          if (event.gesture.end && event.gesture.end.x > 1) {\n            if (device) {\n              event.gesture.end.x = Math.min(\n                0.99,\n                event.gesture.end.x / device.w\n              );\n              event.gesture.end.y = Math.min(\n                0.99,\n                event.gesture.end.y / device.h\n              );\n              error++;\n            }\n          }\n          if (event.gesture.start) {\n            event.x = event.gesture.start.x;\n            event.y = event.gesture.start.y;\n          }\n        }\n        if (event.x > 1 || event.y > 1) {\n          console.warn(\"fixGestures() > exit. No device, could not fix! \");\n        }\n      }\n      if (error) {\n        console.debug(\"fixGestures() > exit. Fixed Errors: \", error);\n      }\n    },\n\n    /**********************************************************************\n     * Distribute Tool\n     **********************************************************************/\n    _distributedPositions (type, ids, boundingBox) {\n        return DistributeUtil.distributedPositions(this.model, type, ids, boundingBox)\n    },\n\n\n    /**********************************************************************\n     * Clone Tool\n     **********************************************************************/\n    getClones(ids, target) {\n      var result = [];\n      var previews = [];\n\n      // 1) get bounding box\n      var boudingBox = this.getBoundingBox(ids);\n\n      var xFactor = 1;\n      if (boudingBox.x > target.x) {\n        xFactor = -1;\n      }\n\n      var yFactor = 1;\n      if (boudingBox.y > target.y) {\n        yFactor = -1;\n      }\n\n      var xCount = Math.floor(target.w / boudingBox.w);\n      var yCount = Math.floor(target.h / boudingBox.h);\n      var xSpace = Math.round(\n        (target.w - xCount * boudingBox.w) / Math.max(1, xCount - 1)\n      );\n      var ySpace = Math.round(\n        (target.h - yCount * boudingBox.h) / Math.max(1, yCount - 1)\n      );\n      //console.debug(\"getClones > x: \", xCount,xSpace, \" y:\", yCount, ySpace, \" >> bb: \", boudingBox.w, boudingBox.h, boudingBox.y)\n\n      var offSets = {};\n      for (let i = 0; i < ids.length; i++) {\n        let id = ids[i];\n        var box = this.getBoxById(id);\n        offSets[id] = {\n          x: box.x - boudingBox.x,\n          y: box.y - boudingBox.y,\n          box: box\n        };\n      }\n\n      // now create grid but not at 0,0\n      var count = 0;\n      for (let x = 0; x < xCount; x++) {\n        for (let y = 0; y < yCount; y++) {\n          if (x != 0 || y != 0) {\n            let id;\n            for (let i = 0; i < ids.length; i++) {\n              id = ids[i];\n              var offset = offSets[id];\n              //console.debug(id,offset.x, offset.y , offset.box.h + ySpace + offset.y)\n              var clone = {\n                w: boudingBox.w,\n                h: boudingBox.h,\n                x: boudingBox.x + (x * (boudingBox.w + xSpace) + offset.x) * xFactor,\n                y: boudingBox.y + (y * (boudingBox.h + ySpace) + offset.y) * yFactor,\n                z: offset.box.z,\n                group: count,\n                cloneOff: id\n              };\n              result.push(clone);\n            }\n            /**\n             * FIXME: Should this be in the loop?\n             */\n            var preview = {\n              w: boudingBox.w,\n              h: boudingBox.h,\n              x: boudingBox.x + x * (boudingBox.w + xSpace) * xFactor,\n              y: boudingBox.y + y * (boudingBox.h + ySpace) * yFactor,\n              z: 0,\n              cloneOff: id\n            };\n            previews.push(preview);\n            count++;\n          }\n        }\n      }\n      return {\n        previews: previews,\n        clones: result\n      };\n    },\n\n    /**********************************************************************\n     * Bounding Box\n     **********************************************************************/\n\n\n    /**\n     * Gets the new position for a group child\n     */\n    _getGroupChildResizePosition(widget, oldGroup, newGroup, dif) {\n      console.warn(\"DEPRECATED: _getGroupChildResizePosition()\")\n      return ModelResizer.getGroupChildResizePosition(widget, oldGroup, newGroup, dif)\n    },\n\n    getObjectFromArray (list, key) {\n      console.error('Util.vue .getObjectFromArray() > DEPRECATED!')\n      return ModelUtil.getObjectFromArray(list, key)\n    },\n\n\n    getWidgetsByDistanceAndType(widget, types) {\n      var result = [];\n\n      if (this.model) {\n        let screen = this.getParentScreen(widget);\n        let children = screen.children;\n\n        for (let i = 0; i < children.length; i++) {\n          let widgetID = children[i];\n\n          if (widgetID != widget.id) {\n            let childWidget = this.model.widgets[widgetID];\n            var type = childWidget.type;\n            if (types.indexOf(type) >= 0) {\n              result.push({\n                d: 0,\n                y: childWidget.y,\n                w: childWidget\n              });\n            }\n          }\n        }\n        result.sort(function(a, b) {\n          return a.y - b.y;\n        });\n      }\n\n      return result;\n    },\n\n    getObjectLength (o) {\n      if (o) {\n        return Object.keys(o).length;\n      } else {\n        return 0;\n      }\n    },\n\n    getEventStateLabel (state) {\n      if (state.type == \"hidden\") {\n        /**\n         * A little hacky\n         */\n        if (state.options.hidden) {\n          return \"Hide Password\";\n        } else {\n          return \"Show Password\";\n        }\n      }\n      if (state.type == \"text\" || state.type == \"typing\") {\n        return \"Change Text\";\n      }\n      if (state.type == \"checked\") {\n        if (state.value) {\n          return \"Checked\";\n        } else {\n          return \"Unchecked\";\n        }\n      }\n\n      if (state.type == \"open\") {\n        return \"Open\";\n      }\n\n      \n      if (state.type == \"select\") {\n        return \"Select\";\n      }\n\n      if (state.type == \"pos\") {\n        return \"Move\";\n      }\n\n      if (state.type == \"open\") {\n        return \"Open Popup\";\n      }\n\n      if (state.type == \"navigate\") {\n        return \"Popup Click\";\n      }\n      return \"Change\";\n    },\n\n    getGestureLabel (type) {\n      if (this.gestureLabels[type]) {\n        return this.gestureLabels[type];\n      }\n      return type;\n    },\n\n    getEventLabel (type) {\n      if (this.eventLabels[type]) {\n        return this.eventLabels[type];\n      }\n      return type;\n    },\n\n    getScreenName (screenID, shortenIfNeeded = false) {\n      if (this.model.screens[screenID] && this.model.screens[screenID].name) {\n        let name = this.model.screens[screenID].name;\n        if (shortenIfNeeded && name.length > 16) {\n          name = name.substring(0, 16) + '...'\n        } \n        return name\n      }\n      return screenID;\n    },\n    \n\n    getWidgetName (widgetID) {\n      if (this.model.widgets[widgetID] && this.model.widgets[widgetID].name) {\n        return this.model.widgets[widgetID].name;\n      }\n      return widgetID;\n    },\n\n    /**\n     * Filters out bad sessions\n     */\n    filterEvents (events, anno) {\n      var bad = {};\n      for (let i = 0; i < anno.length; i++) {\n        var a = anno[i];\n        if (!a.isValid) {\n          bad[a.reference] = true;\n        }\n      }\n\n      var temp = [];\n      var l = events.length;\n      for (let i = 0; i < l; i++) {\n        var e = events[i];\n        if (!bad[e.session]) {\n          temp.push(e);\n        }\n      }\n\n      return temp;\n    },\n\n    /**\n     * Returns all actionable events\n     */\n    getActionEvents (df) {\n      PerformanceMonitor.start('Util.getActionEvents()')\n      const result = df.select(\"type\", \"in\", [\n        \"ScreenClick\",\n        \"WidgetClick\",\n        \"WidgetChange\",\n        \"ValidationError\",\n        \"ValidationErrorLine\",\n        \"ScreenLoaded\",\n        \"OverlayLoaded\",\n        \"OverlayRemoved\",\n        \"ScreenGesture\",\n        \"WidgetGesture\"\n      ]);\n      PerformanceMonitor.end('Util.getActionEvents()')\n      return result\n    },\n\n    /**\n     * Returns all click events\n     */\n    getClickEvents (df) {\n      return df.select(\"type\", \"in\", [\n        \"ScreenClick\",\n        \"WidgetClick\",\n        \"WidgetChange\"\n      ]);\n    },\n\n    createEmptyImage (x, y, name) {\n      return {\n        type: \"Image\",\n        name: name,\n        x: x,\n        y: y,\n        w: 100,\n        h: 100,\n        z: 0,\n        props: {},\n        has: {\n          onclick: true,\n          backgroundImage: true,\n          border: true\n        },\n        actions: {},\n        style: {\n          borderTopRightRadius: 0,\n          borderTopLeftRadius: 0,\n          borderBottomRightRadius: 0,\n          borderBottomLeftRadius: 0,\n          borderTopWidth: 0,\n          borderBottomWidth: 0,\n          borderRightWidth: 0,\n          borderLeftWidth: 0,\n          borderTopColor: \"#333333\",\n          borderBottomColor: \"#333333\",\n          borderRightColor: \"#333333\",\n          borderLeftColor: \"#333333\",\n          backgroundImage: null\n        }\n      };\n    },\n\n    createEmptyScreen (x, y, name) {\n      return {\n        x: x,\n        y: y,\n        h: this.model.screenSize.h,\n        w: this.model.screenSize.w,\n        name: name,\n        type: \"Screen\",\n        style: {\n          background: \"#ffffff\"\n        },\n        min: {\n          w: this.model.screenSize.w,\n          h: this.model.screenSize.h\n        },\n        has: {\n          image: true\n        },\n        props: {\n          start: false\n        },\n        children: []\n      };\n    },\n\n    getAppTypeIcon (model) {\n      if (model.type == \"smartphone\") {\n        return \"mdi mdi-crop-portrait\";\n      } else if (model.type == \"tablet\") {\n        return \"mdi mdi-crop-landscape\";\n      }\n      return \"mdi mdi-crop-landscape\";\n    },\n\n    getDomain () {\n      var host = window.location.hostname;\n      if (host == \"127.0.0.1\" || host == \"flowalytics.com\") {\n        return \"flowalytics.com\";\n      }\n      return \"quant-ux.com\";\n    },\n\n    /***************************************************************************\n     * Render helper  functios\n     ***************************************************************************/\n\n    ring (label, value, p, node, size, color) {\n      if (!size) {\n        size = 200;\n      }\n\n      if (!color) {\n        color = this.RING_BACKGROUND;\n      }\n\n      var ring = this.$new(Ring);\n      ring.width = 10;\n      ring.size = size;\n      ring.color = this.RING_FOREGROUND;\n      ring.backgroundColor = color;\n      ring.setLabel(label);\n      ring.setValue(value);\n      ring.setPs(p);\n      ring.placeAt(node);\n\n      return ring;\n    },\n\n    // simpleStats (label, mean, std, node) {\n    //   var db = this.getDB();\n    //   var cntr = db.div(\"MatcDashNumberContainer\").build(node);\n    //   db.div(\"MatcDashLabel\", label).build(cntr);\n    //   db.div(\"MatcDashNumber\", mean + \" \").build(cntr);\n    //   db.div(\"MatcDashLabelHint\", \"+/- \" + std).build(cntr);\n\n    //   //node.appendChild(cntr);\n    // },\n\n    getDB () {\n      if (!this.domBuilder) {\n        this.domBuilder = new DomBuilder();\n      }\n      return this.domBuilder;\n    },\n\n    progress (label, value, p, id) {\n      var node = document.getElementById(id);\n\n      var row = document.createElement(\"div\");\n      css.add(row, \"row\");\n      node.appendChild(row);\n\n      var col = document.createElement(\"div\");\n      css.add(col, \"col-md-4\");\n      row.appendChild(col);\n\n      var lbl = document.createElement(\"span\");\n      lbl.innerHTML = label;\n      col.appendChild(lbl);\n\n      col = document.createElement(\"div\");\n      css.add(col, \"col-md-8\");\n      row.appendChild(col);\n\n      var bar = this.$new(ProgressBar);\n      bar.color = this.PROGRESS_COLOR;\n      bar.placeAt(col);\n      bar.setValue(p);\n\n      return bar;\n    },\n\n\n    bulletGraph (row, value, emptyMsg) {\n      var db = this.getDB();\n\n      for (var i = 0; i < value.length; i++) {\n        var item = value[i];\n\n        var tr = db.div().build(row);\n        db.div(\"MatcDashCompareTableLabelSmall\", item.label).build(tr);\n        var tdProgress = db.div(\"\").build(tr);\n        css.add(tdProgress, \"MatcDashCompareTableGraph\");\n        var bar = this.$new(ProgressBar);\n        bar.color = this.PROGRESS_COLOR;\n        bar.placeAt(tdProgress);\n        bar.setValue(item.p);\n\n        if (!item.empty) {\n          bar.setLabel(item.a);\n        } else {\n          if (emptyMsg) {\n            bar.setLabel(emptyMsg);\n          }\n        }\n      }\n    },\n\n    bulletGraphTable (row, value, emptyMsg) {\n      var db = this.getDB();\n\n      var tbody = db\n        .table(\" MatcDashCompareTable\")\n        .tbody()\n        .build(row);\n\n      for (var i = 0; i < value.length; i++) {\n        var item = value[i];\n\n        var tr = db.tr().build(tbody);\n        db.td(\"MatcDashCompareTableLabel\", item.label).build(tr);\n        var tdProgress = db.td(\"\").build(tr);\n        if (!item.empty) {\n          css.add(tdProgress, \"MatcDashCompareTableGraph\");\n          var bar = this.$new(ProgressBar);\n          bar.color = true;\n          bar.placeAt(tdProgress);\n          bar.setValue(item.p);\n          bar.setLabel(item.a);\n        } else {\n          if (emptyMsg) {\n            db.span(\"MatcHint MatcLeft\", emptyMsg).build(tdProgress);\n          }\n        }\n      }\n    },\n\n    createUserImage (user, parent) {\n      var imgCntr = document.createElement(\"div\");\n      css.add(imgCntr, \"MatcUserImageCntr\");\n      parent.appendChild(imgCntr);\n\n      if (!user || user.role == \"guest\") {\n        let img = document.createElement(\"div\");\n        css.add(img, \"MatcCommentGuest\");\n        img.innerHTML = '<span class=\"mdi mdi-account\"></span>';\n        imgCntr.appendChild(img);\n      } else if (user.image) {\n        css.add(imgCntr, \"MatcUserImageCntrTrans\");\n\n        let img = document.createElement(\"img\");\n        img.src = \"/rest/user/\" + user.id + \"/images/\" + user.name + \"_\" + user.lastname + \"/\" + user.image;\n        css.add(img, \"MatcUserImage\");\n        imgCntr.appendChild(img);\n      } else {\n        let img = document.createElement(\"div\");\n        css.add(img, \"MatcUserImageNone\");\n        var span = document.createElement(\"span\");\n        img.appendChild(span);\n        css.add(span, \"MatcMiddle MatcUserLetters\");\n        span.innerHTML = this.getUserLetter(user);\n        imgCntr.appendChild(img);\n      }\n\n      return imgCntr;\n    },\n\n    getCommentUserName (comment) {\n      if ((comment.user && comment.user.name) || comment.user.lastname) {\n        return this.getUserName(comment.user);\n      }\n      return \"Guest\";\n    },\n\n    getUserLetter  (user) {\n      let result = ''\n      if (user.name) {\n        result += user.name.substring(0, 1).toUpperCase();\n        if (user.lastname) {\n          result += user.lastname.substring(0, 1).toUpperCase();\n        }\n      } else {\n        let parts = user.email.split('.')\n        if (parts.length > 0) {\n          result += parts[0].substring(0, 1).toUpperCase();\n        }\n        if (parts.length > 1) {\n          result += parts[1].substring(0, 1).toUpperCase();\n        }\n      }\n      return result\n    },\n\n    getUserName (user) {\n      var result = \"\";\n      if (user.name) {\n        result = user.name + \" \";\n      }\n      if (user.lastname) {\n        result += user.lastname;\n      }\n      if (result.length == 0) {\n        result = user.email;\n      }\n\n      return result;\n    },\n\n    resizeSimulatorContainer (model, container, factor) {\n\n      css.add(container, \"MatchSimulatorContainer\");\n\n      var pos;\n      if (model.type == \"desktop\") {\n        pos = win.getBox();\n        pos.w = pos.w * factor;\n        pos.h = pos.h * factor;\n        pos = this.getScaledSize(pos, \"width\", model);\n        container.style.width = Math.round(pos.w) + \"px\";\n        container.style.height = Math.round(pos.h) + \"px\";\n      } else {\n        pos = { w: 150, h: 400 };\n        pos = win.getBox();\n        pos.w = pos.w * factor;\n        pos.h = pos.h * factor;\n\n        pos = this.getScaledSize(pos, \"height\", model);\n\n        container.style.width = Math.ceil(pos.w) + \"px\";\n        container.style.height = Math.ceil(pos.h) + \"px\";\n      }\n\n      return pos;\n    },\n\n    /**\n     * TODO: Could go to canvas/Comment.vue\n     */\n    renderCommentPopup (comment, user, cntr, db, canDelete) {\n      css.add(cntr, \"MatcActionBox\");\n\n      var li = db.div(\"MatcMarginBottom\").build(cntr);\n\n      var item = db.div(\"MatcCommentRow\").build(li);\n\n      var pic = this.createUserImage(comment.user, item);\n      css.add(pic, \"MatcUserImageCntrSmall MatcCommentPic\");\n\n      var txt = db.div(\"MatcCommentText\").build(item);\n\n      var meta = db.div(\"MatcCommentMeta\").build(txt);\n\n      db.div(\"MatcCommentMeta\", this.getCommentUserName(comment)).build(meta);\n\n      db.div(\"MatcCommentTime\", this.formatDate(comment.created)).build(meta);\n\n      if (comment.userID == user.id) {\n        let txtarea = db\n          .textarea(\"form-control MatcIgnoreOnKeyPress\", comment.message)\n          .build(cntr);\n        txtarea.setAttribute(\"data-gramm_editor\", false);\n\n        if (comment.id) {\n          css.add(txtarea, \"vommondInlineEdit\");\n        } else {\n          txtarea.focus();\n        }\n\n        let bar = db.div(\"MatcButtonBar MatcMarginTopL\").build(cntr);\n\n        if (comment.id) {\n          /**\n           * Create a save button that will only show if people start editing...\n           */\n          var saveBtn = db.a(\"MatcButton MatcButtonPrimary\", \"Update\").build(bar);\n          this.tempOwn(on(saveBtn,\"mousedown\",lang.hitch(this, \"onSaveComment\", txtarea, comment)));\n\n          let close = db.a(\"MatcLinkButton\", \"Close\").build(bar);\n          this.tempOwn(on(close,\"mousedown\", lang.hitch(this, \"onCloseCommentPopup\", comment)));\n\n          let s = this.$new(SlideLeftButton);\n          s.placeAt(cntr);\n          s.setOptions([\n            {\n              value: \"edit\",\n              icon: \"mdi mdi-comment-edit-outline\",\n              callback: function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n                txtarea.focus();\n                txtarea.select();\n              }\n            },\n            {\n              value: \"delete\",\n              icon: \"mdi mdi-trash-can-outline\",\n              callback: lang.hitch(this, \"onDeleteComment\", comment)\n            }\n          ]);\n        } else {\n          let create = db.a(\"MatcButton MatcButtonPrimary\", \"Create\").build(bar);\n          this.tempOwn(on(create,\"mousedown\",lang.hitch(this, \"onSaveComment\", txtarea, comment)));\n          let close = db.a(\"MatcLinkButton\", \"Close\").build(bar);\n          this.tempOwn(on(close,\"mousedown\",lang.hitch(this, \"onCloseCommentPopup\", comment)));\n        }\n      } else {\n        if (canDelete) {\n          let s = this.$new(SlideLeftButton);\n          s.placeAt(cntr);\n          s.setOptions([\n            {\n              value: \"delete\",\n              icon: \"mdi mdi-trash-can-outline\",\n              callback: lang.hitch(this, \"onDeleteComment\", comment)\n            }\n          ]);\n        }\n\n        db.div(\"MatcCommentMessage\", comment.message).build(cntr);\n        let bar = db.div(\"MatcButtonBar MatcMarginTopL\").build(cntr);\n        let close = db.a(\"MatcLinkButton\", \"Close\").build(bar);\n        this.tempOwn(\n          on(\n            close,\n            \"mousedown\",\n            lang.hitch(this, \"onCloseCommentPopup\", comment)\n          )\n        );\n      }\n    },\n\n    /***************************************************************************\n     * Model access and query functions\n     ***************************************************************************/\n\n    getWidgets (screenID, filter) {\n      var result = [];\n      if (screenID) {\n        var screen = this.model.screens[screenID];\n        if (screen) {\n          var children = screen.children;\n          for (let i = 0; i < children.length; i++) {\n            let widgetID = children[i];\n            let widget = this.model.widgets[widgetID];\n\n            if (widget) {\n              result.push(widget);\n            }\n          }\n        }\n      } else {\n        for (let id in this.model.widgets) {\n          let widget = this.model.widgets[id];\n          result.push(widget);\n        }\n      }\n\n      result.sort(function(a, b) {\n        return a.y - b.y;\n      });\n\n      if (filter) {\n        var temp = [];\n        for (let i = 0; i < result.length; i++) {\n          if (filter(result[i])) {\n            temp.push(result[i]);\n          }\n        }\n        result = temp;\n      }\n\n      return result;\n    },\n\n    /**\n     * returns screen from left to right!\n     */\n    getScreens (app) {\n      if (!app) {\n        app = this.model;\n      }\n\n      var result = [];\n      for (let id in app.screens) {\n        var screen = app.screens[id];\n        result.push(screen);\n      }\n\n      /**\n       * we order by screen flow!\n       */\n      result.sort(function(a, b) {\n        return a.x - b.x;\n      });\n\n      return result;\n    },\n\n    getClickableWidgets (screen) {\n      var result = [];\n      var children = screen.children;\n      for (let i = 0; i < children.length; i++) {\n        let widgetID = children[i];\n        let widget = this.model.widgets[widgetID];\n        if (this.isClickable(widget)) {\n          result.push(widget);\n        }\n      }\n\n      result.sort(function(a, b) {\n        return a.y - b.y;\n      });\n\n      return result;\n    },\n\n    getModelChildren (screen) {\n      var result = [];\n\n      for (let id in this.model.widgets) {\n        let pos = screen.children.indexOf(id);\n        if (pos >= 0) {\n          result.push(this.model.widgets[id]);\n        }\n      }\n\n      return result;\n    },\n\n    getWidgetsWithoutParent () {\n      var result = [];\n\n      var temp = [];\n      for (let id in this.model.screens) {\n        var screen = this.model.screens[id];\n        temp = temp.concat(screen.children);\n      }\n\n      for (let id in this.model.widgets) {\n        var pos = temp.indexOf(id);\n        if (pos < 0) {\n          result.push(this.model.widgets[id]);\n        }\n      }\n\n      return this.getOrderedWidgets(result);\n    },\n\n    getBoxById (id) {\n      if (this.model.widgets[id]) {\n        return this.model.widgets[id];\n      }\n\n      if (this.model.screens[id]) {\n        return this.model.screens[id];\n      }\n\n      if (this.model.templates && this.model.templates[id]) {\n        return this.model.templates[id];\n      }\n\n      /**\n       * Ok, there seems to be an inherited model id???\n       *\n       *\n       */\n      if (!id || !id.split) {\n        console.debug(\"getBoxById() > ID is wrong: \" + id);\n        return null;\n      }\n      var parts = id.split(\"@\");\n      if (parts.length == 2) {\n        var widgetID = parts[0];\n        var screenID = parts[1];\n\n        var screen = this.model.screens[screenID];\n        var parentWidget = this.model.widgets[widgetID];\n        if (screen && parentWidget) {\n          var parentScreen = this.getHoverScreen(parentWidget);\n\n          var difX = parentScreen.x - screen.x;\n          var difY = parentScreen.y - screen.y;\n\n          var copiedParentWidget = lang.clone(parentWidget);\n\n          /**\n           * Super important the ID mapping!!\n           */\n          copiedParentWidget.id = id;\n          copiedParentWidget.inherited = parentWidget.id;\n          copiedParentWidget.inheritedOrder = 1;\n\n          /**\n           * Now lets also put it at the right position!\n           */\n          copiedParentWidget.x -= difX;\n          copiedParentWidget.y -= difY;\n\n          return copiedParentWidget;\n        } else {\n          console.warn(\n            \"getBoxById() > No screen or widget for inherited id \",\n            id\n          );\n        }\n      }\n\n      return null;\n    },\n\n    /***************************************************************************\n     * Line helpers\n     ***************************************************************************/\n\n    getToLines (box) {\n      var result = [];\n\n      for (var id in this.model.lines) {\n        var line = this.model.lines[id];\n        if (line.to == box.id) {\n          result.push(line);\n        }\n      }\n\n      return result;\n    },\n\n    getLines (box, deep) {\n      var result = [];\n\n      var _ids = {};\n\n      for (let id in this.model.lines) {\n        let line = this.model.lines[id];\n        if (line.to == box.id || line.from == box.id) {\n          result.push(line);\n          _ids[line.id] = true;\n        }\n      }\n\n      if (box.children && deep) {\n        for (let i = 0; i < box.children.length; i++) {\n          let childID = box.children[i];\n          for (let id in this.model.lines) {\n            let line = this.model.lines[id];\n            if (!_ids[line.id]) {\n              if (line.from == childID || line.to == childID) {\n                result.push(line);\n              }\n            }\n          }\n        }\n      }\n\n      return result;\n    },\n\n    hasLine (widget) {\n      for (let id in this.model.lines) {\n        let line = this.model.lines[id];\n        if (line.from == widget.id) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    getLine (widget) {\n      for (let id in this.model.lines) {\n        let line = this.model.lines[id];\n        if (line.from == widget.id) {\n          return line;\n        }\n      }\n      return null;\n    },\n\n    /**\n     * For all line drawing this function returns the widget, or in case of an\n     * group the bounding box!\n     */\n    getFromBox (line) {\n      let fromPos = this.model.widgets[line.from];\n\n      if (!fromPos) {\n        fromPos = this.model.screens[line.from];\n      }\n\n      if (!fromPos && this.model.groups) {\n        /**\n         * no widget, must be a group\n         */\n        const group = this.model.groups[line.from];\n        if (group) {\n          const children = this.getAllGroupChildren(group)\n          fromPos = this.getBoundingBox(children);\n        }\n      }\n\n      return fromPos;\n    },\n\n    getToBox (line) {\n      var to = this.model.screens[line.to];\n      if (!to) {\n        to = this.model.widgets[line.to];\n      }\n\n      if (!to && line.isGroup && this.model.groups) {\n        /**\n         * no widget, must be a group\n         */\n        var group = this.model.groups[line.to];\n        if (group) {\n          to = this.getBoundingBox(group.children);\n        }\n      }\n      return to;\n    },\n\n    /***************************************************************************\n     * template stuff\n     ***************************************************************************/\n\n    getTemplateGroupOrderChildren (group) {\n      /**\n       * render children, and order by\n       * z values\n       */\n      let children = [];\n      for (var i = 0; i < group.children.length; i++) {\n        const id = group.children[i];\n        const child = this.model.templates[id];\n        children.push(child);\n      }\n      /**\n       * oder by z values\n       */\n      children = this.getOrderedWidgets(children);\n\n      return children;\n    },\n\n    /***************************************************************************\n     * UI Geometrix helpers\n     ***************************************************************************/\n\n    getBoundingBox (ids) {\n      return ModelGeom.getBoundingBox(ids, this.model)\n    },\n\n    getBoundingBoxByBoxes (boxes) {\n       return ModelGeom.getBoundingBoxByBoxes(boxes)\n    },\n\n    /**\n     * Returns for a box if it is on any of the screens\n     */\n    getHoverScreen (box) {\n      return ModelGeom.getHoverScreen(box, this.model);\n    },\n\n    _getHoverScreen (box, model) {\n      return ModelGeom.getHoverScreen(box, model);\n    },\n\n    _isBoxChild (obj, parent) {\n      // http://stackoverflow.com/questions/13390333/two-rectangles-intersection\n      if (\n        obj.x + obj.w < parent.x ||\n        parent.x + parent.w < obj.x ||\n        obj.y + obj.h < parent.y ||\n        parent.y + parent.h < obj.y\n      ) {\n        return false;\n      }\n      return true;\n    },\n\n    _isContainedInBox (obj, parent) {\n      if (parent) {\n        if (\n          obj.x >= parent.x &&\n          obj.x + obj.w <= parent.w + parent.x &&\n          (obj.y >= parent.y && obj.y + obj.h <= parent.y + parent.h)\n        ) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /***************************************************************************\n     * Object Compare and Change functios\n     ***************************************************************************/\n\n    countProps (obj) {\n      var count = 0;\n      for (let k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          count++;\n        }\n      }\n      return count;\n    },\n\n    objectEquals (v1, v2) {\n      if (typeof v1 !== typeof v2) {\n        return false;\n      }\n\n      if (typeof v1 === \"function\") {\n        return v1.toString() === v2.toString();\n      }\n\n      if (v1 instanceof Object && v2 instanceof Object) {\n        if (this.countProps(v1) !== this.countProps(v2)) {\n          return false;\n        }\n        var r = true;\n        for (let k in v1) {\n          r = this.objectEquals(v1[k], v2[k]);\n          if (!r) {\n            return false;\n          }\n        }\n        return true;\n      } else {\n        if (v1 === v2) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    },\n\n    /***************************************************************************\n     * Helper functios\n     ***************************************************************************/\n\n    round (value) {\n      return Math.round(value * 100) / 100;\n    },\n\n    formatTime (millis) {\n      millis = Math.round(millis / 1000);\n      return millis + \"s\";\n    },\n\n    formatSTD (value) {\n      return (\n        '<span class=\"MatcDashTableTdHint\">( +/- ' +\n        this.formatNumber(value) +\n        \")</span>\"\n      );\n    },\n\n    formatRound (value) {\n      return Math.round(value * 100) / 100;\n    },\n\n    formatNumber (value) {\n      if (value > 1000000) {\n        value = Math.floor(value / 1000000) + \"M\";\n        return value;\n      }\n\n      if (value > 1000) {\n        value = Math.floor(value / 1000) + \"K\";\n        return value;\n      }\n\n      if (value > 100) {\n        value = Math.floor(value);\n        return value;\n      }\n\n      value = Math.round(value * 10) / 10.0;\n      return value;\n    },\n\n    formatPercent (value) {\n      value = Math.round(value * 100);\n      var cls = \"MatchDashStatusFailure\";\n      if (value > 70) {\n        cls = \"MatchDashStatusSuccess\";\n      } else if (value > 35) {\n        cls = \"MatchDashStatusOK\";\n      }\n      return '<span class=\"' + cls + '\">' + value + \"%</span>\";\n    },\n\n    formatDate (t, justDate) {\n      var date = new Date(t);\n      if (justDate) {\n        return date.toLocaleDateString();\n      }\n      return date.toLocaleString();\n    },\n\n    formatString (s, l) {\n      if (s.length > l) {\n        s = s.substring(0, l - 3) + \"...\";\n      }\n      return s;\n    },\n\n    /***************************************************************************\n     * Layer helpers\n     ***************************************************************************/\n\n    /**\n     * Method to make the z-values pretty and ensure that the z values\n     * are consequtive!\n     */\n    getNormalizeWidgetZValues (values) {\n      /**\n       * convert values to a sorted list!\n       */\n      const list = [];\n      for (var id in values) {\n        list.push({\n          id: id,\n          z: values[id]\n        });\n      }\n      this.sortWidgetList(list);\n\n      let z = 0;\n      let lastZ = null;\n      const result = {};\n      for (let i = 0; i < list.length; i++) {\n        let w = list[i];\n        if (lastZ === null || lastZ != w.z) {\n          z++;\n          lastZ = w.z;\n        }\n        result[w.id] = z;\n      }\n\n      return result;\n    },\n\n    getMinZValue (widgets) {\n      var min = 100000;\n      var l = 0;\n      for (var id in widgets) {\n        var w = widgets[id];\n        min = Math.min(w.z, min);\n        l++;\n      }\n      if (l > 0) {\n        return min;\n      } else {\n        return 0;\n      }\n    },\n\n    getMaxZValue (widgets) {\n      var max = -10000;\n\n      var l = 0;\n      for (var id in widgets) {\n        var w = widgets[id];\n        max = Math.max(w.z, max);\n        l++;\n      }\n\n      if (l > 0) {\n        return max;\n      } else {\n        return 0;\n      }\n    },\n\n    getZValues (widgets) {\n      var values = {};\n      for (var id in widgets) {\n        var widget = widgets[id];\n        this.fixMissingZValue(widget);\n        values[id] = widget.z;\n      }\n      return values;\n    }\n  },\n  mounted() {}\n};\n</script>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Util.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Util.vue?vue&type=script&lang=js&\"","import Grouping from './Grouping'\n\nexport default class DataFrame {\n\n\tconstructor(data) {\n\t\tthis.data = data\n\t\tthis._isDataFrame = true\n\t}\n\n\tas_array() {\n\t\tif (this.data.length) {\n\t\t\treturn this.data;\n\t\t} else {\n\t\t\tvar result = [];\n\t\t\tthis.foreach(function (row) {\n\t\t\t\tresult.push(row);\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tas_dict(key) {\n\t\tconst arr = this.as_array()\n\t\tconst result = {}\n\t\tarr.forEach(row => {\n\t\t\tresult[row[key]] = row\n\t\t})\n\t\treturn result\n\t}\n\n\tpush(row) {\n\t\tif (this.data.push) {\n\t\t\tthis.data.push(row);\n\t\t} else {\n\t\t\tconsole.warn(\"Data is not array. cannot push\");\n\t\t}\n\t}\n\n\n\tselect(column, operator, value) {\n\n\t\tconst result = [];\n\t\tlet inLookup = null\n\t\tif (operator === 'in') {\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tinLookup = {}\n\t\t\t\tvalue.forEach(v => {\n\t\t\t\t\tinLookup[v] = true\n\t\t\t\t})\t\t\t\t\n\t\t\t}\n\t\t}\n\n\t\tthis.foreach(function (row) {\n\n\t\t\tconst v = row[column];\n\n\t\t\tswitch (operator) {\n\t\t\t\tcase \"==\":\n\t\t\t\t\tif (v == value) {\n\t\t\t\t\t\tresult.push(row);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \">=\":\n\t\t\t\t\tif (v >= value) {\n\t\t\t\t\t\tresult.push(row);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"<=\":\n\t\t\t\t\tif (v <= value) {\n\t\t\t\t\t\tresult.push(row);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \">\":\n\t\t\t\t\tif (v > value) {\n\t\t\t\t\t\tresult.push(row);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"<\":\n\t\t\t\t\tif (v < value) {\n\t\t\t\t\t\tresult.push(row);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"!=\":\n\t\t\t\t\tif (v != value) {\n\t\t\t\t\t\tresult.push(row);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"in\":\n\t\t\t\t\tif (inLookup && inLookup[v]) {\n\t\t\t\t\t\tresult.push(row);\n\t\t\t\t\t} else if (value.indexOf(v) >= 0) {\n\t\t\t\t\t\tresult.push(row);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t\treturn new DataFrame(result);\n\n\t}\n\n\tcolumns() {\n\t\tvar result = [];\n\t\tfor (let i in this.data) {\n\t\t\tlet row = this.data[i];\n\t\t\tfor (let c in row) {\n\t\t\t\tresult.push(c);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\treturn new DataFrame(result);\n\t}\n\n\tshape() {\n\t\tvar l = this.size();\n\t\tvar count = 0;\n\t\tfor (let i in this.data) {\n\t\t\tlet row = this.data[i];\n\t\t\t// could be done with objetc count...\n\t\t\tfor (let c in row) { // eslint-disable-line no-unused-vars\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tif (count == 0) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\treturn [l, count];\n\t}\n\n\tlength() {\n\t\treturn this.size();\n\t}\n\n\tsize() {\n\t\tif (this.data && this.data.length) {\n\t\t\treturn this.data.length;\n\t\t}\n\n\t\tif (this.data) {\n\t\t\tvar size = 0;\n\t\t\tthis.foreach(function () {\n\t\t\t\tsize++;\n\t\t\t});\n\t\t\treturn size;\n\t\t}\n\t\treturn 0;\n\t}\n\n\n\trow(row, value) {\n\t\tif (value) {\n\t\t\tthis.data[row] = value;\n\t\t} else {\n\t\t\tvar v = this.data[row];\n\t\t\tif (v != null && isNaN(v) && !v._isDataFrame && !v.substring) {\n\t\t\t\treturn new DataFrame(v);\n\t\t\t}\n\t\t\treturn v;\n\t\t}\n\t}\n\n\n\tcolumn(column, value) {\n\t\tif (value) {\n\t\t\tvar data = this.data;\n\t\t\tthis.foreach(function (v, i) {\n\t\t\t\tdata[i][column] = value.get(i);\n\t\t\t}, column);\n\t\t} else {\n\t\t\tlet result = {};\n\t\t\tthis.foreach(function (v, i) {\n\t\t\t\tresult[i] = v;\n\t\t\t}, column);\n\t\t\treturn new DataFrame(result);\n\t\t}\n\t}\n\n\tget(row, column, defaultValue) {\n\t\tif (column != null && row != null) {\n\t\t\treturn this.data[row][column];\n\t\t} else if (row != null) {\n\t\t\t/**\n\t\t\t * FIXME This is very inefficnet! We hsould have some how a kind of variable what tells me\n\t\t\t * what is to do! So in case\n\t\t\t *\n\t\t\t * BUG: is nun returns true for an [2000]\n\t\t\t */\n\t\t\tvar value = this.data[row];\n\n\t\t\tif (value && isNaN(value) && !value._isDataFrame && !value.substring) {\n\t\t\t\treturn new DataFrame(value);\n\t\t\t}\n\n\t\t\tif (value == null || value == undefined) {\n\t\t\t\tvalue = defaultValue;\n\t\t\t}\n\t\t\treturn value;\n\n\t\t}\n\t}\n\t\n\tcol(column) {\n\t\tvar result = [];\n\t\tthis.foreach(function (value, id) {\n\t\t\tresult[id] = value[column];\n\t\t});\n\t\treturn new DataFrame(result);\n\t}\n\n\n\thist(column, bins, p_min, p_max) {\n\t\tvar values = [];\n\t\tvar max = false;\n\t\tvar min = false;\n\t\tthis.foreach(function (value) {\n\n\t\t\tvar v = value;\n\t\t\tif (column) {\n\t\t\t\tv = value[column];\n\t\t\t}\n\n\t\t\tvalues.push(v);\n\t\t\tif (max === false) {\n\t\t\t\tmax = v;\n\t\t\t} else {\n\t\t\t\tmax = Math.max(max, v);\n\t\t\t}\n\n\t\t\tif (min === false) {\n\t\t\t\tmin = v;\n\t\t\t} else {\n\t\t\t\tmin = Math.min(min, v);\n\t\t\t}\n\t\t});\n\n\t\tif (p_min != null && p_min != undefined) {\n\t\t\tmin = p_min;\n\t\t}\n\n\t\tif (p_max != null && p_max != undefined) {\n\t\t\tmax = p_max;\n\t\t}\n\n\n\t\tvar width = (max - min) / bins;\n\n\t\tvar buckets = [];\n\t\tfor (let i = 0; i < bins; i++) {\n\t\t\tbuckets[i] = {\n\t\t\t\tbucket: i,\n\t\t\t\tcount: 0,\n\t\t\t\tfrom: (i * width) + min,\n\t\t\t\tto: ((i + 1) * width) + min\n\t\t\t}\n\t\t}\n\n\n\n\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\tvar v = values[i];\n\t\t\t/**\n\t\t\t * FIXME: This is somehow stupidly naive. Can't we calcute the\n\t\t\t * bucket number somehow like:\n\t\t\t *\n\t\t\t *  var norm_v = v - min;\n\t\t\t *  var b = Math.min(bins-1, Math.round(norm_v * width));\n\t\t\t *\n\t\t\t *  The round is false in here...\n\t\t\t */\n\n\t\t\t/**\n\t\t\t * We take the first bucket that fits!!!\n\t\t\t */\n\t\t\tfor (var b = 0; b < bins; b++) {\n\t\t\t\tvar bucket = buckets[b];\n\t\t\t\tif (v >= bucket.from && v <= bucket.to) {\n\t\t\t\t\tbucket.count++;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn new DataFrame(buckets);\n\t}\n\n\n\n\n\t/**\n\t * shall not be used!\n\t */\n\tset(row, column, value) {\n\t\tif (column != null && row != null) {\n\t\t\tthis.data[row][column] = value;\n\t\t} else if (row != null) {\n\t\t\tthis.data[row] = value;\n\t\t}\n\t}\n\n\tsortBy(column, desc) {\n\t\t/**\n\t\t * FIXME\n\t\t */\n\t\tif (this.data.length || this.data.length == 0) {\n\n\t\t\tthis.data.sort(function (a, b) {\n\n\t\t\t\tif (a._isDataFrame && b._isDataFrame) {\n\t\t\t\t\tif (desc) {\n\t\t\t\t\t\treturn b.get(column) - a.get(column);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn a.get(column) - b.get(column);\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tif (desc) {\n\t\t\t\t\t\treturn b[column] - a[column];\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn a[column] - b[column];\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\t\t\tconsole.error(\"Can onyl sort array of objects!\");\n\t\t}\n\t}\n\n\tadd(column, value) {\n\t\tif (!value) {\n\t\t\tvalue = column;\n\t\t\tcolumn = null;\n\t\t}\n\t\tif (value._isDataFrame) {\n\t\t\tthis.foreach(function (v, i) {\n\t\t\t\treturn v + value.get(i);\n\t\t\t}, column);\n\t\t} else {\n\t\t\tthis.foreach(function (v) {\n\t\t\t\treturn v + value;\n\t\t\t}, column);\n\t\t}\n\n\t}\n\n\tminus(column, value) {\n\t\tif (!value) {\n\t\t\tvalue = column;\n\t\t\tcolumn = null;\n\t\t}\n\t\tif (value._isDataFrame) {\n\t\t\tconsole.debu\n\t\t\tthis.foreach(function (v, i) {\n\t\t\t\treturn v - value.get(i);\n\t\t\t}, column);\n\t\t} else {\n\t\t\tthis.foreach(function (v) {\n\t\t\t\treturn v - value;\n\t\t\t}, column);\n\t\t}\n\t}\n\n\tmutliply(column, value) {\n\t\tif (!value) {\n\t\t\tvalue = column;\n\t\t\tcolumn = null;\n\t\t}\n\t\tif (value._isDataFrame) {\n\t\t\tthis.foreach(function (v, i) {\n\t\t\t\treturn v * value.get(i);\n\t\t\t}, column);\n\t\t} else {\n\t\t\tthis.foreach(function (v) {\n\t\t\t\treturn v * value;\n\t\t\t}, column);\n\t\t}\n\t}\n\n\tdivide(column, value) {\n\t\tif (!value) {\n\t\t\tvalue = column;\n\t\t\tcolumn = null;\n\t\t}\n\t\tif (value._isDataFrame) {\n\t\t\tthis.foreach(function (v, i) {\n\t\t\t\treturn v / value.get(i);\n\t\t\t}, column);\n\t\t} else {\n\t\t\tthis.foreach(function (v) {\n\t\t\t\treturn v / value;\n\t\t\t}, column);\n\t\t}\n\t}\n\n\tmedian(column) {\n\t\tlet list = []\n\t\tthis.foreach(function (value) {\n\t\t\tlist.push(value)\n\t\t}, column);\n\t\tlist = list.sort(function (a, b) {\n\t\t\treturn a - b\n\t\t})\n\t\tif (list.length > 0) {\n\t\t\treturn list[Math.max(0, Math.floor(list.length / 2) - 1)];\n\t\t}\n\t\treturn 0\n\t}\n\n\tmean(column) {\n\t\tconst sum = this.sum(column);\n\t\tif (this.size() === 0) {\n\t\t\treturn 0\n\t\t}\n\t\treturn sum * 1.0 / this.size();\n\t}\n\n\n\tmax(column) {\n\t\tlet max = Number.MIN_VALUE;\n\t\tthis.foreach(function (value) {\n\t\t\tmax = Math.max(max, value);\n\t\t}, column);\n\t\treturn max;\n\t}\n\n\n\tmin(column) {\n\t\tlet min = Number.MAX_VALUE;\n\t\tthis.foreach(function (value) {\n\t\t\tmin = Math.min(min, value);\n\t\t}, column);\n\t\treturn min;\n\t}\n\n\n\tvariance(column) {\n\t\tvar mean = this.mean(column);\n\t\tvar variance = 0;\n\t\tthis.foreach(function (value) {\n\t\t\tvar dif = mean - value;\n\t\t\tvariance += (dif * dif);\n\t\t}, column);\n\t\treturn variance * 1.0 / this.size();\n\t}\n\n\tstd(column) {\n\t\treturn Math.sqrt(this.variance(column));\n\t}\n\n\tsum(column) {\n\t\tvar sum = 0;\n\t\t/**\n\t\t * FIXME: we should check if we have to return a scaler or DataFrame in case column is null\n\t\t */\n\t\tthis.foreach(function (value) {\n\t\t\tsum += value;\n\t\t}, column);\n\t\treturn sum;\n\t}\n\n\t/**\n\t * returns the number of unique values in a column\n\t */\n\tunique(column) {\n\t\tvar temp = {};\n\t\tvar result = 0;\n\t\tthis.foreach(function (value) {\n\t\t\tif (!temp[value]) {\n\t\t\t\ttemp[value] = true;\n\t\t\t\tresult++;\n\t\t\t}\n\t\t}, column);\n\t\treturn result;\n\t}\n\n\n\t/**\n\t * returns the number of unique values in a column\n\t */\n\tuniqueValues(column) {\n\t\tvar temp = {};\n\t\tvar result = [];\n\t\tthis.foreach(function (value) {\n\t\t\tif (!temp[value]) {\n\t\t\t\ttemp[value] = true;\n\t\t\t\tresult.push(value);\n\t\t\t}\n\t\t}, column);\n\t\treturn new DataFrame(result);\n\t}\n\n\tcount(column) {\n\t\tvar result = {};\n\t\tthis.foreach(function (value) {\n\t\t\tif (!result[value]) {\n\t\t\t\tresult[value] = 0;\n\t\t\t}\n\t\t\tresult[value]++;\n\t\t}, column);\n\t\treturn new DataFrame(result);\n\t}\n\n\tgroupBy(column) {\n\t\tvar temp = {};\n\t\tthis.foreach(function (row) {\n\t\t\tvar value = row[column];\n\t\t\tif (!temp[value]) {\n\t\t\t\ttemp[value] = new DataFrame([]);\n\t\t\t}\n\t\t\ttemp[value].push(row);\n\t\t});\n\t\treturn new Grouping(temp);\n\t}\n\n\tforeach(callback, column) {\n\t\t/**\n\t\t * if(column == null){\n\t\t * loop over all columns}\n\t\t */\n\t\t//console.debug(\"foreach\", this.data.length, column)\n\t\tif (this.data.length) {\n\t\t\t//console.debug(\"  -> Array\");\n\t\t\tfor (let i = 0; i < this.data.length; i++) {\n\t\t\t\tlet row = this.data[i];\n\t\t\t\tif (column) {\n\n\t\t\t\t\tlet value = callback(row[column], i);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\trow[column] = value;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet value = callback(row, i);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tthis.data[i] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t//\tconsole.debug(\"  -> Object\");\n\t\t\tfor (let i in this.data) {\n\t\t\t\tlet row = this.data[i];\n\t\t\t\t//\tconsole.debug(\" o \", row[column]);\n\t\t\t\tif (column) {\n\t\t\t\t\tlet value = callback(row[column], i);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\trow[column] = value;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet value = callback(row, i);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tthis.data[i] = value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Set an index over some columns for faster lookup via the \"ix()\" method.\n\t * We basically build up a tree which maps the values to the right row..\n\t *\n\t */\n\tsetIndex(keys) {\n\n\t\tvar index = {}\n\t\tvar l = keys.length;\n\t\tthis.foreach(function (row, i) {\n\t\t\tvar node = index;\n\t\t\tfor (let k = 0; k < l; k++) {\n\t\t\t\tvar key = keys[k];\n\t\t\t\tlet value = row[key];\n\t\t\t\tif (!node[value]) {\n\t\t\t\t\tif (k == l - 1) {\n\t\t\t\t\t\tif (node[value] == null) {\n\t\t\t\t\t\t\tnode[value] = i;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * FIXME: Is this really a restriction??\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tconsole.error(\"Multi index not supoprted\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode[value] = {};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnode = node[value];\n\t\t\t}\n\n\t\t});\n\n\t\tthis.index = index;\n\t}\n\n\t/**\n\t * get *ONE* row by index values. The value have to be in the same\n\t * order as the columns called in the setIndex!\n\t *\n\t * @param values: array of values to be found\n\t *\n\t * @includeIndex boolean: Also return the index not only the row. If true, the result\n\t * \t\t\t\t\t\t  will look like {row:..., index:key}, where key is int or string\n\t *\n\t */\n\tix(values, includeIndex) {\n\n\t\tif (this.index) {\n\n\t\t\tvar node = this.index;\n\t\t\tvar l = values.length\n\t\t\tfor (var k = 0; k < l; k++) {\n\t\t\t\tvar value = values[k];\n\t\t\t\tif (node[value] != null) {\n\t\t\t\t\tif (k == l - 1) {\n\t\t\t\t\t\tvar index = node[value];\n\t\t\t\t\t\tif (includeIndex) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\trow: this.data[index],\n\t\t\t\t\t\t\t\tindex: index\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn this.data[index];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode = node[value];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.error(\"DataFrame.ix() > Error: No Index!\");\n\t\t}\n\t\treturn null;\n\t}\n\n\n\tremove(row) {\n\t\tif (this.data.length) {\n\t\t\tthis.data.splice(row, 1);\n\t\t} else {\n\t\t\tdelete this.data[row];\n\t\t}\n\t}\n\n\n\tprint() {\n\t\tvar header = false;\n\t\tvar me = this;\n\t\tvar s = \"\";\n\t\tthis.foreach(function (row) {\n\n\t\t\tif (!header) {\n\t\t\t\theader = true;\n\t\t\t\tfor (let k in row) {\n\t\t\t\t\ts += me._correctLength(k, Math.max(20, k.length)) + \" | \";\n\t\t\t\t}\n\t\t\t\ts += \"\\n\";\n\t\t\t}\n\t\t\tfor (let k in row) {\n\t\t\t\ts += me._correctLength(row[k] + \"\", Math.max(20, k.length)) + \" | \";\n\t\t\t}\n\t\t\ts += \"\\n\";\n\t\t});\n\n\t\tconsole.debug(s);\n\t\treturn s;\n\t}\n\n\t_correctLength(s, l) {\n\t\ts += \"\";\n\t\tif (s.length < l) {\n\t\t\twhile (s.length < l)\n\t\t\t\ts += \" \";\n\t\t} else {\n\t\t\ts = s.substring(0, l - 3) + \".. \";\n\t\t}\n\t\treturn s;\n\t}\n\n\n\ttoCSV(columns) {\n\t\tvar s = \"\";\n\t\tvar l = columns.length;\n\t\tthis.foreach(function (row) {\n\t\t\tfor (let i = 0; i < l; i++) {\n\t\t\t\tvar c = columns[i];\n\t\t\t\tif (i > 0) {\n\t\t\t\t\ts += \",\";\n\t\t\t\t}\n\t\t\t\ts += row[c];\n\t\t\t}\n\t\t\ts += \"\\n\";\n\t\t});\n\n\t\treturn s;\n\t}\n\n\n\troundTimestampToDate(column) {\n\t\tthis.foreach(function (timestamp) {\n\t\t\tif (timestamp) {\n\t\t\t\tvar d = new Date(timestamp);\n\t\t\t\td.setMinutes(0);\n\t\t\t\td.setMilliseconds(0);\n\t\t\t\treturn d.getTime();\n\t\t\t}\n\t\t\treturn 0;\n\t\t}, column)\n\t}\n\n\tmerge (other) {\n\t\tif (Array.isArray(this.data) && Array.isArray(other.data)) {\n\t\t\tlet newData = this.data.concat(other.data)\n\t\t\treturn new DataFrame(newData)\n\t\t}\n\t\tconsole.error('DataFrame.merge() > Cannot merge to object frames')\n\t\treturn new DataFrame([])\n\t}\n\n}","import css from 'dojo/css'\nimport lang from 'dojo/_base/lang'\nimport win from 'dojo/_base/win'\nimport on from 'dojo/on'\nimport has from 'dojo/has'\nimport touch from 'dojo/touch'\nimport domGeom from 'dojo/domGeom'\nimport topic from 'dojo/topic'\nimport Logger from 'common/Logger'\nimport Evented from 'dojo/Evented'\n\nvar _vommondCurrentDialog = null\n\nexport default class Dialog extends Evented {\n\n\tstatic getCurrentDialog () {\n\t\treturn _vommondCurrentDialog\n\t}\n\n\tconstructor(params) {\n\t\tsuper()\n\t\tthis.autoClose = true\n\t\tthis.wrapperClass = \"\"\n\t\tthis.overflow = false\n\t\tthis.isFullScreen = false\n\t\tthis.hasCSSAnimation = true\n\t\tif (params && params.overflow) {\n\t\t\tthis.overflow = params.overflow\n\t\t}\n\t\tif (params && params.hasCSSAnimation){\n\t\t\tthis.hasCSSAnimation = params.hasCSSAnimation;\n\t\t}\n\t\tthis.log = new Logger(\"Dialog\");\n\t}\n\n\tdestroy () {\n\t\tthis.log.info('destroy', 'enter')\n\t\t_vommondCurrentDialog = null\n\t\tthis.cleanUpEvented()\n\t}\n\n\tsetFullScreen (callback) {\n\t\tthis.hasFullScreen = true\n\t\tthis.fullScreenListener = callback\n\t}\n\n\tpopup (node, parent, clazz) {\n\t\tthis.log.log(1, \"popup\", \"enter\");\n\n\t\t_vommondCurrentDialog = this\n\n\t\ttopic.publish(\"vommond/dialog/open\", {});\n\n\t\t/**\n\t\t * FIXME: We could somehow try to make the transition still a little smoother.\n\t\t */\n\t\tvar background = document.createElement(\"div\");\n\t\tcss.add(background, \"VommondDialogBackground VommondDialogHidden VommondDialogContentHidden\");\n\n\t\tif (this.hasFullScreen) {\n\t\t\tlet fullscreen = document.createElement(\"span\");\n\t\t\tcss.add(fullscreen, \"VommondDialogFullScreen mdi mdi-fullscreen\");\n\t\t\tbackground.appendChild(fullscreen);\n\t\t\tthis.own(on(fullscreen, touch.press, lang.hitch(this, \"toggleFullScreen\", fullscreen)))\n\t\t}\n\n\t\tvar container = document.createElement(\"div\");\n\t\tcss.add(container, \"VommondDialogContainer\");\n\t\tbackground.appendChild(container);\n\n\t\tvar wrapper = document.createElement(\"div\");\n\t\tcss.add(wrapper, \"VommondDialogWrapper\");\n\t\tif (this.overflow) {\n\t\t\tcss.add(wrapper, \"VommondDialogWrapperOverflow\");\n\t\t}\n\t\tif (clazz) {\n\t\t\tcss.add(wrapper, clazz)\n\t\t}\n\t\tcss.add(wrapper, this.wrapperClass);\n\t\tcontainer.appendChild(wrapper);\n\n\t\tvar content = document.createElement(\"div\");\n\t\tcss.add(content, \"VommondDialogContent\");\n\t\tif (has('mobile')){\n\t\t\tcss.add(content, 'VommondDialogContentMobile')\n\t\t\tcss.add(wrapper, 'VommondDialogWrapperMobile');\n\t\t}\n\t\twrapper.appendChild(content);\n\n\t\tcontent.appendChild(node);\n\t\twin.body().appendChild(background);\n\n\t\t/**\n\t\t * TODO: try to block scroll in the body. Does not work perfectly\n\t\t */\n\t\tthis.own(on(background, \"onmousewheel\", lang.hitch(this, \"stopScroll\")));\n\t\tthis.own(on(background, \"mousewheel\", lang.hitch(this, \"stopScroll\")));\n\t\tthis.own(on(background, \"DOMMouseScroll\", lang.hitch(this, \"stopScroll\")));\n\t\t\n\t\t/**\n\t\t * Close on ESC\n\t\t */\n\t\tthis.own(topic.subscribe(\"matc/canvas/esc\", lang.hitch(this,\"close\")));\n\t\t\t\n\n\t\tvar startPos = this.getStartPos(parent);\n\t\tvar endPos = domGeom.position(wrapper);\n\t\tvar backPos = domGeom.position(background);\n\n\t\tif (this.autoClose) {\n\t\t\tthis.own(on(background, touch.press, lang.hitch(this, \"onBackClick\")));\n\t\t}\n\n\t\twrapper.style.top = startPos.y + \"px\";\n\t\twrapper.style.height = startPos.h + \"px\";\n\t\twrapper.style.width = startPos.w + \"px\";\n\t\twrapper.style.left = startPos.x + \"px\";\n\n\t\tif (this.hasCSSAnimation) {\n\t\t\tvar ratioW = startPos.w / endPos.w;\n\t\t\tvar ratioH = startPos.h / endPos.h;\n\t\t\tvar transform = \" scale(\" + ratioW + \",\" + ratioH + \")\"\n\t\t\twrapper.style.transform = transform;\n\t\t}\n\t\t\n\n\t\t// add here a css transform to make the calling smoother\n\t\t// \n\t\t/**\n\t\t * fade in\n\t\t */\n\t\tsetTimeout(() => {\n\t\t\tcss.remove(background, \"VommondDialogHidden\");\n\t\t}, 1);\n\n\t\t/**\n\t\t * fade in\n\t\t */\n\t\tsetTimeout(() => {\n\t\t\tcss.remove(background, \"VommondDialogContentHidden\");\n\t\t}, 350);\n\n\t\tsetTimeout(() => {\n\t\t\t// reset scale\n\t\t\tif (this.hasCSSAnimation) {\n\t\t\t\twrapper.style.transform = \"scale(1,1)\";\n\t\t\t}\n\t\t\twrapper.style.top = Math.round((backPos.h - endPos.h) / 2) + \"px\";\n\t\t\twrapper.style.height = endPos.h + \"px\";\n\t\t\twrapper.style.width = endPos.w + \"px\";\n\t\t\twrapper.style.left = Math.round((backPos.w - endPos.w) / 2) + \"px\";\n\t\t}, 100);\n\n\t\t/**\n\t\t * 2.1.9 Fix to allow fixed elements in simulator\n\t\t */\n\t\tif (this.hasCSSAnimation) {\n\t\t\tsetTimeout(() => {\n\t\t\t\twrapper.style.transform = \"\";\n\t\t\t}, 500);\n\t\t}\n\n\t\t/**\n\t\t * Since 4.0.34 we have an an onOpen listener\n\t\t */\n\t\tsetTimeout(() => this.emitOpen(), 500)\n\n\n\t\tthis._dialogBackground = background;\n\t\tthis.node = node;\n\t\tthis.wrapper = wrapper;\n\t}\n\n\tonOpen (callback) {\n\t\tthis._onOpenCallback = callback\n\t}\n\n\temitOpen() {\n\t\tif (this._onOpenCallback) {\n\t\t\tthis._onOpenCallback()\n\t\t}\n\t}\n\n\tgetStartPos(parent) {\n\t\tif (!parent) {\n\t\t\tvar pos = domGeom.position(win.body());\n\t\t\treturn {\n\t\t\t\tw: 0,\n\t\t\t\th: 0,\n\t\t\t\tx: pos.w / 2,\n\t\t\t\ty: pos.h / 2\n\t\t\t};\n\t\t} else {\n\t\t\treturn domGeom.position(parent);\n\t\t}\n\t}\n\n\tresize(endPos) {\n\t\tlet wrapper = this.wrapper;\n\t\tlet background = this._dialogBackground;\n\t\t/**\n\t\t * check of pos of node was passed\n\t\t */\n\t\tif (endPos.appendChild) {\n\t\t\tendPos = domGeom.position(endPos, true);\n\t\t}\n\t\tvar backPos = domGeom.position(background);\n\t\twrapper.style.top = Math.round((backPos.h - endPos.h) / 2) + \"px\";\n\t\twrapper.style.height = endPos.h + \"px\";\n\t\twrapper.style.width = endPos.w + \"px\";\n\t\twrapper.style.left = Math.round((backPos.w - endPos.w) / 2) + \"px\";\n\t}\n\n\tstopScroll(e) {\n\t\t/**\n\t\t * FIXME: This work like shity shit... The detction should be somehow much better... but well.\n\t\t */\n\t\tif (this._dialogBackground == e.target) {\n\t\t\tthis.stopEvent(e);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tonBackClick(e) {\n\n\t\tvar target = e.target;\n\t\tif (target == this._dialogBackground) {\n\t\t\tthis.stopEvent(e);\n\t\t\tcss.add(this._dialogBackground, \" VommondDialogHidden\");\n\t\t\tsetTimeout(lang.hitch(this, \"close\"), 300);\n\t\t}\n\t}\n\n\tshake() {\n\n\t\tvar pos = domGeom.position(this.wrapper);\n\t\tcss.add(this.wrapper, \"VommondDialogWrapperShake\");\n\n\t\tvar wrapper = this.wrapper;\n\t\tsetTimeout(function () {\n\t\t\twrapper.style.left = (pos.x + 50) + \"px\";\n\t\t}, 1);\n\n\t\tsetTimeout(function () {\n\t\t\twrapper.style.left = (pos.x - 50) + \"px\";\n\t\t}, 51);\n\n\t\tsetTimeout(function () {\n\t\t\twrapper.style.left = (pos.x + 50) + \"px\";\n\t\t}, 101);\n\n\t\tsetTimeout(function () {\n\t\t\twrapper.style.left = (pos.x - 50) + \"px\";\n\t\t}, 151);\n\n\t\tsetTimeout(function () {\n\t\t\twrapper.style.left = (pos.x) + \"px\";\n\t\t\tcss.remove(wrapper, \"VommondDialogWrapperShake\");\n\t\t}, 201);\n\n\t}\n\n\ttoggleFullScreen (node) {\n\t\tthis.isFullScreen = !this.isFullScreen\n\t\tif (this.fullScreenListener) {\n\t\t\tthis.fullScreenListener(this.isFullScreen)\n\t\t}\n\t\tif (this.isFullScreen) {\n\t\t\tcss.remove(node, 'mdi-fullscreen')\n\t\t\tcss.add(node, 'mdi-fullscreen-exit')\n\t\t} else {\n\t\t\tcss.add(node, 'mdi-fullscreen')\n\t\t\tcss.remove(node, 'mdi-fullscreen-exit')\n\t\t}\n\t}\n\n\thide() {\n\t\tthis.close();\n\t}\n\n\tclose() {\n\t\tthis.emit(\"close\", {});\n\t\tif (this._dialogBackground) {\n\t\t\twin.body().removeChild(this._dialogBackground);\n\t\t}\n\t\tthis.destroy();\n\t}\n}","import DataFrame from \"./DataFrame\";\n\nexport default class Grouping {\n\n\tconstructor(data) {\n\t\tthis.data = data\n\t\tthis._isDataFrame = false\n\t}\n\n\tas_array() {\n\t\tvar result = [];\n\t\tthis.foreach(function (row) {\n\t\t\tresult.push(row);\n\t\t});\n\t\treturn result;\n\t}\n\n\n\tsize() {\n\t\treturn this._foreach(\"size\");\n\t}\n\n\tget(i) {\n\t\treturn this.data[i];\n\t}\n\n\n\tcount(column) {\n\t\tvar temp = this._foreach(\"count\", column);\n\t\treturn new Grouping(temp.data);\n\t}\n\n\tmax(column) {\n\t\treturn this._foreach(\"max\", column);\n\t}\n\n\tmin(column) {\n\t\treturn this._foreach(\"min\", column);\n\t}\n\n\tmean(column) {\n\t\treturn this._foreach(\"mean\", column);\n\t}\n\n\tvariance(column) {\n\t\treturn this._foreach(\"variance\", column);\n\t}\n\n\tstd(column) {\n\t\treturn this._foreach(\"std\", column);\n\t}\n\n\tsum(column) {\n\t\treturn this._foreach(\"sum\", column);\n\t}\n\n\tunique(column) {\n\t\treturn this._foreach(\"unique\", column);\n\t}\n\n\tgroupBy() {\n\n\t}\n\n\tforeach(callback) {\n\t\tfor (let i in this.data) {\n\t\t\tvar df2 = this.data[i];\n\t\t\tcallback(df2, i);\n\t\t}\n\t}\n\n\t_foreach(method, column) {\n\t\tvar result = {};\n\t\tfor (let i in this.data) {\n\t\t\tvar df2 = this.data[i];\n\t\t\tvar x = df2[method](column);\t\t\n\t\t\tresult[i] = x;\n\t\t}\n\t\treturn new DataFrame (result);\n\t}\n\n\tprint(deep) {\n\t\tfor (let i in this.data) {\n\t\t\tvar df2 = this.data[i];\n\t\t\tif (deep) {\n\t\t\t\tdf2.foreach(function (row, j) {\n\t\t\t\t\tconsole.debug(\"  \", j, row);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}","import Logger from './Logger'\nclass PerformanceMonitor {\n\n    constructor () {\n        this.data = {}\n        this.entries = []\n        this.payloads = {}\n    }\n\n    start (key, payload) {\n        const start = new Date().getTime()\n        this.data[key] = start\n        this.payloads[key] = payload\n    }\n\n    end (key, logLevel = 2) {\n        if (!this.data[key]) {\n            Logger.warn('PerformanceMonitor.end() > no key', key)\n            return\n        }\n        const start = this.data[key]\n        const end = new Date().getTime()\n        const duration = end - start\n        this.entries.push({\n            duration: duration,\n            key: key,\n            payload: this.payloads[key]\n        })\n        if (duration > 1000) {\n            Logger.warn('PerformanceMonitor.end() > ' +  key + ' took ' + duration + 'ms')\n            console.table(this.entries)\n        } else {\n            Logger.log(logLevel, 'PerformanceMonitor.end() > ' +  key + ' took ' + duration + 'ms')\n        }\n        delete this.data[key]\n        delete this.payloads[key]\n    }\n\n}\n\nexport default new PerformanceMonitor()","import lang from '../dojo/_base/lang'\nimport DataFrame from '../common/DataFrame'\nimport Grouping from '../common/Grouping'\nimport PerformanceMonitor from '../core/PerformanceMonitor'\n\n\nexport default class {\n\n\tfilterEvents (events, anno) {\n\t\tPerformanceMonitor.start('Analytics.filterEvents()',events.length)\n\t\tconst bad = {};\n\t\tfor (let i = 0; i < anno.length; i++) {\n\t\t\tlet a = anno[i];\n\t\t\tif (!a.isValid) {\n\t\t\t\tbad[a.reference] = true;\n\t\t\t}\n\t\t}\n\t\tconst temp = [];\n\t\tconst l = events.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tvar e = events[i];\n\t\t\tif (!bad[e.session]) {\n\t\t\t\ttemp.push(e);\n\t\t\t}\n\t\t}\n\t\tPerformanceMonitor.end('Analytics.filterEvents()')\n\t\treturn temp;\n\t}\n\n\tgetSurveyAnswers (events, app, test, options) {\n\t\tPerformanceMonitor.start('Analytics.getSurveyAnswers()',events.length)\n\t\tconst showId = options.showId\n\t\tconst showTasksSucess = options.showTasksSucess\n\t\tconst showTasksDuration = options.showTaskDetails\n\t\tconst showTasksInteraction = options.showTaskDetails\n\n\n\t\tconst result = {\n\t\t\tids: [],\n\t\t\trows: [],\n\t\t\tcols: [],\n\t\t\ttasks: []\n\t\t}\n\n\t\tconst eventsDF = new DataFrame(events);\n\t\teventsDF.sortBy(\"time\");\n\n\t\tlet taskPer = {}\n\t\tif (test.tasks) {\n\t\t\tconst taskPerDF = this.getTaskPerformance(eventsDF, test.tasks)\n\t\t\ttaskPerDF.foreach(row => {\n\t\t\t\tif (!taskPer[row.session]) {\n\t\t\t\t\ttaskPer[row.session] = {}\n\t\t\t\t}\n\t\t\t\ttaskPer[row.session][row.task] = row\n\t\t\t})\n\t\t}\n\n\n\t\tlet widgetColumnNames = {}\n\t\tlet widgetTypes = {}\n\t\tlet widgetColums = {}\n\t\tObject.values(app.widgets).forEach(w => {\n\n\t\t\tif (!widgetColumnNames[w.id]) {\n\t\t\t\twidgetTypes[w.id] = w.type\n\t\t\t\n\t\t\t\tif (w.props && w.props.isSurveyElement && w.type !== 'Password') {\n\t\t\t\t\tif (w.type === 'RadioTable') {\n\t\t\t\t\t\tconst data = w.props.data\n\t\t\t\t\t\tif (data) {\n\t\t\t\t\n\t\t\t\t\t\t\twidgetColums[w.id] = []\n\t\t\t\t\t\t\tdata.forEach((row, i) => {\n\t\t\t\t\t\t\t\tif (i > 0 && row[0]) {\n\t\t\t\t\t\t\t\t\tconst col = row[0]\n\t\t\t\t\t\t\t\t\twidgetColums[w.id].push(col)\n\n\t\t\t\t\t\t\t\t\tresult.cols.push({\n\t\t\t\t\t\t\t\t\t\thidden: false,\n\t\t\t\t\t\t\t\t\t\tkey: col,\n\t\t\t\t\t\t\t\t\t\tlabel: col,\n\t\t\t\t\t\t\t\t\t\tgroup: w.name,\n\t\t\t\t\t\t\t\t\t\ttype: 'data',\n\t\t\t\t\t\t\t\t\t\tid: w.id\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\t\t}\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\twidgetColumnNames[w.id] = w.name\n\t\t\t\t\t\tresult.cols.push({\n\t\t\t\t\t\t\thidden: false,\n\t\t\t\t\t\t\tkey: w.name,\n\t\t\t\t\t\t\tlabel: w.name,\n\t\t\t\t\t\t\tgroup: w.name,\n\t\t\t\t\t\t\ttype: 'data',\n\t\t\t\t\t\t\tid: w.id\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n        result.cols.sort((a,b) => {\n          a.group.localeCompare(b.group)\n        })\n\n\t\tif (showId) {\n\t\t\tresult.cols.unshift({\n\t\t\t\tkey: 'id',\n\t\t\t\tlabel: 'ID',\n\t\t\t\ttype: 'id',\n\t\t\t\thidden: true,\n\t\t\t})\t\t\t\n\t\t}\n\n\t\tif (test.tasks) {\n\t\t\ttest.tasks.forEach(task => {\n\t\t\t\tif (showTasksSucess) {\n\t\t\t\t\tresult.cols.push({\n\t\t\t\t\t\tkey: task.name,\n\t\t\t\t\t\tlabel: task.name,\n\t\t\t\t\t\tgroup: task.name,\n\t\t\t\t\t\ttype: 'task',\n\t\t\t\t\t\thidden: true,\n\t\t\t\t\t})\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tif (showTasksDuration) {\n\t\t\t\t\tconst name = task.name + '_Duration'\n\t\t\t\t\tresult.cols.push({\n\t\t\t\t\t\tkey: name,\n\t\t\t\t\t\tlabel: name,\n\t\t\t\t\t\tgroup: task.name,\n\t\t\t\t\t\ttype: 'task',\n\t\t\t\t\t\thidden: true,\n\t\t\t\t\t})\t\n\t\t\t\t\n\t\t\t\t}\n\t\t\t\tif (showTasksInteraction) {\n\t\t\t\t\tconst name = task.name + '_Interactions'\n\t\t\t\t\tresult.cols.push({\n\t\t\t\t\t\tkey: name,\n\t\t\t\t\t\tlabel: name,\n\t\t\t\t\t\tgroup: task.name,\n\t\t\t\t\t\ttype: 'task',\n\t\t\t\t\t\thidden: true,\n\t\t\t\t\t})\t\n\t\t\t\t\tresult.cols.push(task.name + '_Interactions')\n\t\t\t\t}\n\t\t\t\n\t\t\t})\n\t\t}\n\n\n\t\tconst sessionGrouping = eventsDF.groupBy(\"session\");\n\n\t\t/**\n\t\t * sort by start??\n\t\t */\n\t\tsessionGrouping.foreach((df, sessionID) => {\n\t\t\t\n\t\t\tconst row = {}\n\t\t\tconst taskRow = []\n\t\t\tresult.cols.forEach(c => row[c] = '-')\n\t\t\t\n\t\t\tdf.sortBy(\"time\");\n\t\t\tconst sessionEvents = df.as_array();\n\t\t\tsessionEvents.forEach(e => {\n\t\t\t\tdelete e.user\n\t\t\t\tif (app.widgets[e.widget]) {\n\t\t\t\t\tif (e.widget && e.state && widgetColumnNames[e.widget]) {\n\t\t\t\t\t\tconst col = widgetColumnNames[e.widget]\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (widgetTypes[e.widget] === 'Rating') {\n\t\t\t\t\t\t\trow[col] = (e.state.value * 1) + 1\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlet value = e.state.value\n\t\t\t\t\t\t\tif (this.isObject(value)) {\n\t\t\t\t\t\t\t\tvalue = Object.entries(value).map((e) => `${e[0]}: ${e[1]}`)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\t\t\trow[col] = value.join(', ')\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\trow[col] = value\t\t\t\t\t\n\t\t\t\t\t\t\t}\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (widgetColums[e.widget]) {\n\t\t\t\t\t\t\tconst keys = widgetColums[e.widget]\n\t\t\t\t\t\t\tconst value = e.state.value\n\t\t\t\t\t\t\tkeys.forEach(col => {\n\t\t\t\t\t\t\t\trow[col] = value[col]\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t} \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (showId) {\n\t\t\t\trow['id'] = sessionID\n\t\t\t}\n\n\t\t\tif (test.tasks) {\n\t\t\t\ttest.tasks.forEach(task => {\n\t\t\t\t\tif (taskPer[sessionID] && taskPer[sessionID][task.id]) {\n\t\t\t\t\t\tconst taskData = taskPer[sessionID][task.id]\n\t\t\t\t\t\ttaskRow.push(taskData)\n\t\t\t\t\t\tif (showTasksSucess) {\n\t\t\t\t\t\t\trow[task.name] = 'Completed'\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (showTasksSucess) {\n\t\t\t\t\t\t\trow[task.name + '_Duration'] = Math.round(taskData.duration / 1000)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (showTasksSucess) {\n\t\t\t\t\t\t\trow[task.name + 'Interactions'] = taskData.interactions\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tresult.tasks.push(taskRow)\n\t\t\tresult.ids.push(sessionID)\n\t\t\tresult.rows.push(row)\n\t\t})\n\n\t\tPerformanceMonitor.end('Analytics.getSurveyAnswers()')\n\t\treturn result\n\t}\n\n\tisObject(obj) {\t\n\t\treturn typeof obj === 'object' && obj !== null && ! Array.isArray(obj)\n\t}\n\n\tnornalizeContainerChildEvents (events) {\n\t\tevents.forEach(e => {\n\t\t\tif (e.widget && e.widget.indexOf('-') > 0) {\n\t\t\t\te.widget = e.widget.substring(0,e.widget.indexOf('-'))\n\t\t\t}\n\t\t})\n\t\treturn events\n\t}\n\n\tgetFirstNClicks(events, numberOfClicks) {\n\t\tvar filtered = new DataFrame(events);\n\n\t\tvar sessionGrouping = filtered.groupBy(\"session\");\n\n\t\tvar firstNEvents = [];\n\t\tsessionGrouping.foreach(function (df) {\n\t\t\tdf.sortBy(\"time\");\n\t\t\tvar sessionEvents = df.as_array();\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0; i < sessionEvents.length; i++) {\n\t\t\t\tvar event = sessionEvents[i];\n\t\t\t\tif (event.type == \"ScreenLoaded\" || event.type == \"OverlayLoaded\") {\n\t\t\t\t\tcount = 0;\n\t\t\t\t} else {\n\t\t\t\t\tif (event.x >= 0 && event.y >= 0 && !event.noheat) {\n\t\t\t\t\t\tif (count < numberOfClicks) {\n\t\t\t\t\t\t\tfirstNEvents.push(event);\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n\t\treturn firstNEvents;\n\t}\n\n\n\tgetPValueBionimial() {\n\n\t}\n\n\n\tgetScreenExplorationRate(df, model) {\n\t\tconst screenCount = Object.keys(model.screens).length;\n\t\tconst session = df.groupBy(\"session\");\n\t\tconst uniqueScreenPerSession = session.unique(\"screen\");\n\t\treturn uniqueScreenPerSession.mean() / screenCount;\n\t}\n\n\n\tgetSuccessTaskNames(tasksPerformance, tasks) {\n\t\tconst names = {};\n\t\tfor (var i = 0; i < tasks.length; i++) {\n\t\t\tnames[tasks[i].id] = tasks[i].name;\n\t\t}\n\t\tconst result = {};\n\t\tconst sessionGroup = tasksPerformance.groupBy(\"session\");\n\t\tsessionGroup.foreach((session, id)  => {\n\t\t\tconst temp = [];\n\t\t\tconst successTasks = session.count(\"task\").data;\n\t\t\tfor (let taskID in successTasks) {\n\t\t\t\ttemp.push(names[taskID]);\n\t\t\t}\n\t\t\ttemp.sort();\n\t\t\tresult[id] = temp;\n\t\t});\n\t\treturn result;\n\t}\n\n\t/********************************************************************************************\n\t * Tag Stuff\n\t *******************************************************************************************/\n\n\tgetTagAnalytics(tags) {\n\n\t\tconst tagCount = {};\n\t\tconst tagSessionCount = {};\n\t\tconst tagTime = {};\n\t\tfor (let i = 0; i < tags.length; i++) {\n\t\t\tconst annotation = tags[i];\n\t\t\tconst sessions = annotation.sessions;\n\t\t\tfor (let id in sessions) {\n\t\t\t\tconst sessionTags = sessions[id];\n\t\t\t\tconst tagCounted = {};\n\t\t\t\tfor (let j = 0; j < sessionTags.length; j++) {\n\t\t\t\t\tconst t = sessionTags[j];\n\t\t\t\t\tif (!tagCount[t.tag]) {\n\t\t\t\t\t\ttagCount[t.tag] = 0;\n\t\t\t\t\t}\n\t\t\t\t\ttagCount[t.tag]++;\n\t\t\t\t\tif (!tagCounted[t.tag]) {\n\t\t\t\t\t\tif (!tagSessionCount[t.tag]) {\n\t\t\t\t\t\t\ttagSessionCount[t.tag] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttagSessionCount[t.tag]++;\n\t\t\t\t\t\ttagCounted[t.tag] = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!tagTime[t.tag]) {\n\t\t\t\t\t\ttagTime[t.tag] = 0;\n\t\t\t\t\t}\n\t\t\t\t\ttagTime[t.tag] += (t.start);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst result = [];\n\t\tfor (let tag in tagCount) {\n\t\t\tresult.push({\n\t\t\t\ttag: tag,\n\t\t\t\tcount: tagCount[tag],\n\t\t\t\tsessions: tagSessionCount[tag],\n\t\t\t\ttime: tagTime[tag] / tagCount[tag]\n\t\t\t});\n\t\t}\n\t\treturn new DataFrame(result);\n\t}\n\n\t/********************************************************************************************\n\t * Task Stuff\n\t *******************************************************************************************/\n\n\n\t/**\n\t * Creates a mini regex matcher for our tasks. It returns the first match of an flow!\n\t *\n\t * a match has the following properties:\n\t *\n\t *  duration: how long did the task take\n\t *\n\t *  count: how much events where between\n\t *\n\t */\n\tcreateMatcher(name, flow, strict) {\n\n\t\treturn {\n\t\t\tname: name,\n\t\t\tmatch: null,\n\t\t\tflowPos: 0,\n\t\t\tstep: flow[0],\n\t\t\tendStep: flow[flow.length - 1],\n\t\t\tflow: flow,\n\t\t\tstart: null,\n\t\t\tstartTime: 0,\n\t\t\tstrict: strict,\n\t\t\ttaskName: \"\",\n\t\t\tusePartialMatches: false,\n\n\t\t\tinit(e) {\n\t\t\t\tthis.start = e;\n\t\t\t\tthis.startTime = e.time;\n\t\t\t\tthis.interactions = 0;\n\t\t\t},\n\n\t\t\tnext(e, i) {\n\n\t\t\t\tlet result = null;\n\n\t\t\t\t/**\n\t\t\t\t * Since 1.9: Check interactions only if task has started\n\t\t\t\t */\n\t\t\t\tif (this.match) {\n\t\t\t\t\tif (e.type == \"WidgetClick\" ||\n\t\t\t\t\t\te.type == \"WidgetChange\" ||\n\t\t\t\t\t\te.type == \"ScreenGesture\" ||\n\t\t\t\t\t\te.type == \"WidgetGesture\" ||\n\t\t\t\t\t\te.type == \"ScreenClick\") {\n\t\t\t\t\t\tthis.interactions++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * check if we match the current event to the current\n\t\t\t\t * step in the flow\n\t\t\t\t */\n\t\t\t\tif (this._match(this.step, e)) {\n\t\t\t\t\t/**\n\t\t\t\t\t * create a match object\n\t\t\t\t\t */\n\t\t\t\t\tif (this.match == null) {\n\n\t\t\t\t\t\tthis.match = {\n\t\t\t\t\t\t\tstartTime: e.time,\n\t\t\t\t\t\t\tdiscoveryTime: e.time - this.startTime,\n\t\t\t\t\t\t\tendTime: 1,\n\t\t\t\t\t\t\tstartPosition: i,\n\t\t\t\t\t\t\tendPosition: -1,\n\t\t\t\t\t\t\tduration: 0,\n\t\t\t\t\t\t\tcount: -1,\n\t\t\t\t\t\t\tinteractions: -1,\n\t\t\t\t\t\t\tpartial: false,\n\t\t\t\t\t\t\tsession: e.session,\n\t\t\t\t\t\t\ttask: this.name,\n\t\t\t\t\t\t\tuser: e.user,\n\t\t\t\t\t\t\ttaskName: this.taskName,\n\t\t\t\t\t\t\thits:[]\n\t\t\t\t\t\t};\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * FIX in  1.9.5. We have to start counting interactions\n\t\t\t\t\t\t * from the match if it is an interaction event\n\t\t\t\t\t\t */\n\n\t\t\t\t\t\tif (e.type == \"WidgetClick\" ||\n\t\t\t\t\t\t\te.type == \"WidgetChange\" ||\n\t\t\t\t\t\t\te.type == \"ScreenGesture\" ||\n\t\t\t\t\t\t\te.type == \"WidgetGesture\" ||\n\t\t\t\t\t\t\te.type == \"ScreenClick\") {\n\t\t\t\t\t\t\tthis.interactions++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Since 4.0.65 we also store the matches events\n\t\t\t\t\t */\n\t\t\t\t\tthis.match.hits.push({\n\t\t\t\t\t\ttime: e.time, pos: i, step: this.flowPos\t\n\t\t\t\t\t})\n\n\t\t\t\t\t/**\n\t\t\t\t\t * we have matched the last event. pass the match the result and start again\n\t\t\t\t\t */\n\t\t\t\t\tif (this.flow.length == this.flowPos + 1) {\n\t\t\t\t\t\tvar endTime = this.getEndTime(e);\n\n\t\t\t\t\t\tthis.match.endTime = endTime;\n\t\t\t\t\t\tthis.match.endPosition = i;\n\t\t\t\t\t\tthis.match.interactions = this.interactions;\n\t\t\t\t\t\tthis.match.duration = this.match.endTime - this.match.startTime;\n\t\t\t\t\t\tthis.match.count = (this.match.endPosition - this.match.startPosition) + 1;\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * We have a hit!! return this match at the end of the method\n\t\t\t\t\t\t */\n\t\t\t\t\t\tresult = this.match;\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * reset shit\n\t\t\t\t\t\t */\n\t\t\t\t\t\tthis.match = null;\n\t\t\t\t\t\tthis.flowPos = -1 // minus one!!\n\t\t\t\t\t}\n\n\t\t\t\t\t\n\n\t\t\t\t\t/**\n\t\t\t\t\t * now move on to the next step\n\t\t\t\t\t */\n\t\t\t\t\tthis.flowPos++;\n\t\t\t\t\tthis.step = this.flow[this.flowPos];\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * check if we have a partial match. The last step must not be like the\n\t\t\t\t * current step.\n\t\t\t\t * \n\t\t\t\t * Since 4.3.8 We disabled partical Matches. Not sure if they are needed anywhere???\n\t\t\t\t */\n\t\t\t\tif (this.usePartialMatches) {\n\t\t\t\t\tif (this.match != null && !this._match(this.step, this.endStep) && this._match(this.endStep, e)) {\n\t\t\t\t\t\n\t\t\t\t\t\tthis.match.endTime = e.time;\n\t\t\t\t\t\tthis.match.endPosition = i;\n\t\t\t\t\t\tthis.match.duration = this.match.endTime - this.match.startTime;\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * count on extra. because we start at event 2, than do two more step\n\t\t\t\t\t\t * and we are at 4. But the user did three steps...\n\t\t\t\t\t\t */\n\t\t\t\t\t\tthis.match.count = (this.match.endPosition - this.match.startPosition) + 1;\n\t\t\t\t\t\tthis.match.partial = true;\n\t\t\t\t\t\tresult = this.match;\n\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * reset\n\t\t\t\t\t\t */\n\t\t\t\t\t\tthis.reset();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\tgetEndTime(e) {\n\n\t\t\t\tif (e.state && e.state.children) {\n\t\t\t\t\tvar children = e.state.children;\n\t\t\t\t\tvar max = e.time;\n\t\t\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t\t\tmax = Math.max(max, children[i].time);\n\t\t\t\t\t}\n\t\t\t\t\treturn max;\n\t\t\t\t}\n\t\t\t\treturn e.time;\n\t\t\t},\n\t\t\t/**\n\t\t\t * a: the flow event\n\t\t\t * b: event from stream\n\t\t\t */\n\t\t\t_match(a, b) {\n\t\t\t\tif ((a.screen == b.screen && a.widget == b.widget && a.type == b.type)) {\n\t\t\t\t\tif ((a.type == \"ScreenGesture\" && b.type == \"ScreenGesture\") ||\n\t\t\t\t\t\t(a.type == \"WidgetGesture\" && b.type == \"WidgetGesture\")) {\n\t\t\t\t\t\tif (a.gesture && b.gesture) {\n\t\t\t\t\t\t\treturn a.gesture.type == b.gesture.type;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\n\t\t\t\t\t/**\n\t\t\t\t\t * For widget state change events we will look also into the state\n\t\t\t\t\t */\n\t\t\t\t\tif ((a.type == \"WidgetClick\" || a.type == \"WidgetChange\") && a.state && b.state) {\n\n\t\t\t\t\t\tvar aState = a.state;\n\t\t\t\t\t\tvar bState = b.state;\n\n\n\t\t\t\t\t\tif (aState.type == \"text\" || aState.type == \"typing\" || aState.type == \"select\" || aState.type == \"open\" || aState.type == \"navigate\") {\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * For multi value widgets(textboxes, password, & textarea, and select boxes) and dropdown events\n\t\t\t\t\t\t\t * we have a special\n\t\t\t\t\t\t\t * handling and allow all values\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\treturn aState.type == bState.type;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Otherwise check if type and value are the same for both states\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\treturn (aState.type == bState.type) && (aState.value == bState.value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((a.state && !b.state) || (!a.state && b.state)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\n\t\t\treset() {\n\t\t\t\tthis.match = null;\n\t\t\t\tthis.flowPos = 0\n\t\t\t\tthis.step = flow[0];\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * Does some naive pattern matching. Loops for the entire stream,\n\t * and checks from every event of, if we have a match. The matcher returns\n\t * the first match!\n\t */\n\tmatchFlowInSession(df, flow, taskID, strict) {\n\n\t\tconst result = [];\n\t\tconst matcher = this.createMatcher(taskID, flow, strict)\n\n\t\tdf.sortBy(\"time\");\n\t\tconst events = df.as_array();\n\n\t\tconst l = events.length;\n\t\tmatcher.init(events[0]);\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tconst e = events[i];\n\t\t\tconst m = matcher.next(e, i);\n\t\t\tif (m) {\n\t\t\t\tif (strict) {\n\t\t\t\t\tif (flow.length == m.count) {\n\t\t\t\t\t\tresult.push(m);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresult.push(m);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetFunnelInteraction(df, task, includeDropOff) {\n\t\tconst result = {}\n\t\tconst sessions = this.getTaskPerformance(df, [task])\n\t\tsessions.data.forEach(session => {\n\t\t\tthis.addFunnelInteractionSteps(result, session, false)\n\t\t})\n\n\t\tif (includeDropOff) {\n\t\t\tconst subtasks = this.getFunnelTasks(task);\n\t\t\tsubtasks.forEach(subTask => {\n\t\t\t\tif (subTask.flow.length > 2 && subTask.flow.length < task.flow.length) {\n\t\t\t\t\tconst sessions = this.getTaskPerformance(df, [subTask])\n\t\t\t\t\tsessions.data.forEach(session => {\n\t\t\t\t\t\tif (!result[session.session]) {\n\t\t\t\t\t\t\tthis.addFunnelInteractionSteps(result, session, true)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\treturn result\n\t}\n\n\taddFunnelInteractionSteps (result, session, isDropOff = false) {\n\t\tlet lastPos = 0\n\t\tresult[session.session] = []\n\t\tsession.hits.forEach(hit => {\n\t\t\tconst pos = hit.pos - lastPos\n\t\t\tresult[session.session].push({\n\t\t\t\tvalue: pos,\n\t\t\t\tdropoff:isDropOff\n\t\t\t})\n\t\t\tlastPos = hit.pos\n\t\t})\n\t}\n\n\n\tgetFunnelDuration(df, task, includeDropOff = false) {\n\t\tconst result = {}\n\t\tconst sessions = this.getTaskPerformance(df, [task])\n\t\tsessions.data.forEach(session => {\n\t\t\tthis.addFunnelDurartionSteps(result, session)\n\t\t})\n\n\n\t\tif (includeDropOff) {\n\t\t\tconst subtasks = this.getFunnelTasks(task);\n\t\t\tsubtasks.forEach(subTask => {\n\t\t\t\tif (subTask.flow.length > 2 && subTask.flow.length < task.flow.length) {\n\t\t\t\t\tconst sessions = this.getTaskPerformance(df, [subTask])\n\t\t\t\t\tsessions.data.forEach(session => {\n\t\t\t\t\t\tif (!result[session.session]) {\n\t\t\t\t\t\t\tthis.addFunnelDurartionSteps(result, session, true)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\treturn result\n\t}\n\n\taddFunnelDurartionSteps (result, session, isDropOff = false) {\n\t\tlet lastTime = session.startTime\n\t\tresult[session.session] = []\n\t\tsession.hits.forEach(hit => {\n\t\t\tconst duration = hit.time - lastTime\n\t\t\tresult[session.session].push({\n\t\t\t\tvalue: duration,\n\t\t\t\tdropoff: isDropOff\n\t\t\t})\n\t\t\tlastTime = hit.time\n\t\t})\n\t}\n\n\tgetFunnelMax (stepData) {\n\t\tlet result = 0\n\t\tfor (let id in stepData) {\n\t\t\tlet steps = stepData[id]\n\t\t\tsteps.forEach((step) => {\n\t\t\t\tresult = Math.max(result, step.value)\n\t\t\t})\n\t\t}\n\t\treturn result\n\t}\n\n\tgetSessionSummary(events) {\n\t\tconst result = {}\n\t\tconst sessions = events.groupBy(\"session\");\n\t\tsessions.foreach((session, id) => {\n\t\t\tconst count = session.count('type')\n\t\t\tconst screenLoads = count.get('ScreenLoaded', null, 0) + count.get('OverlayLoaded', null, 0)\n\t\t\tconst uniqueScreens =  session.unique('screen')\n\t\t\tconst clicks = session.select(\"type\", \"in\",[\"ScreenClick\",\"WidgetClick\",\"WidgetChange\", \"ScreenGesture\", \"WidgetGesture\"])\n\t\t\tresult[id] = {\n\t\t\t\tsession: id,\n\t\t\t\tsize: session.size(),\n\t\t\t\tinteractions: clicks.size(),\n\t\t\t\tdate: session.min(\"time\"),\n\t\t\t\tduration:  Math.ceil((session.max(\"time\") - session.min(\"time\"))),\n\t\t\t\tscreenLoads: screenLoads,\n\t\t\t\tscreenUnique: uniqueScreens,\n\t\t\t\tscreenRatio: uniqueScreens / screenLoads,\n\t\t\t\terrors: count.get('ValidationError', null, 0)\n\t\t\t}\n\t\t})\n\t\treturn result\n\t}\n\n\n\tgetSessionDetails (events, tasks) {\n\t\tevents.sortBy(\"time\");\n\t\tconst sessions = this.getSessionSummary(events)\n\t\tObject.values(sessions).forEach(session => {\n\t\t\tsession.tasks = 0\n\t\t\tfor (let t = 0; t < tasks.length; t++) {\n\t\t\t\tconst task = tasks[t];\n\t\t\t\tsession[task.id] = {\n\t\t\t\t\tname: task.name,\n\t\t\t\t\tsuccess: 0,\n\t\t\t\t\tduration: -1,\n\t\t\t\t\tinteractions: -1\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t\n\t\tconst taskPerformance = this.getTaskPerformance(events, tasks).data\n\t\ttaskPerformance.forEach(perf => {\n\t\t\tconst session = sessions[perf.session]\n\t\t\tif (session) {\n\t\t\t\tsession.tasks++\n\t\t\t\tconst t = session[perf.task]\n\t\t\t\tt.success = 1\n\t\t\t\tt.duration = perf.duration\n\t\t\t\tt.interactions = perf.interactions\n\t\t\t} else {\n\t\t\t\tconsole.error('Analytics.getSessionDetails() > No session ??')\n\t\t\t}\n\t\t})\n\n\t\treturn new DataFrame(Object.values(sessions))\n\t}\n\n\tconvertSessionDetails (sessions) {\n\t\treturn sessions.data.map(r => {\n\t\t\tconst result = {}\n\t\t\tfor (let key in r) {\n\t\t\t\tif (key !== 'start') {\n\t\t\t\t\tconst value = r[key]\n\t\t\t\t\tif (value.name) {\n\t\t\t\t\t\tresult[key] = value.success\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult[key] = value\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result\n\t\t})\n\t\t\n\t}\n\n\t\n\t/**\n\t * allowPartial is for funnel??\n\t */\n\tgetTaskPerformance(df, tasks, allowMultiMatch, allowPartial) {\n\t\tPerformanceMonitor.start('Analytics.getTaskPerformance()')\n\t\tconst result = [];\n\t\tconst matchers = [];\n\t\tfor (let t = 0; t < tasks.length; t++) {\n\t\t\tconst task = tasks[t];\n\t\t\tconst flow = task.flow;\n\t\t\tif (flow && flow.length > 0) {\n\t\t\t\tconst matcher = this.createMatcher(task.id, flow, task.strict);\n\t\t\t\tmatcher.taskName = task.name;\n\t\t\t\tmatchers.push(matcher);\n\t\t\t}\n\t\t}\n\t\tconst matcherLength = matchers.length;\n\n\t\tdf.sortBy(\"time\");\n\t\tconst sessions = df.groupBy(\"session\");\n\n\t\t/**\n\t\t * for every session match run all matchers\n\t\t */\n\t\tsessions.foreach((session) => {\n\n\t\t\t/**\n\t\t\t * loop over all events\n\t\t\t */\n\t\t\tconst events = session.as_array();\n\t\t\tconst l = events.length;\n\t\t\n\t\t\t/**\n\t\t\t * reset all matchers\n\t\t\t */\n\t\t\tfor (let m = 0; m < matcherLength; m++) {\n\t\t\t\tconst matcher = matchers[m];\n\t\t\t\tmatcher.reset();\n\t\t\t\tmatcher.init(events[0]);\n\t\t\t\tmatcher.disabled = false;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < l; i++) {\n\t\t\t\tconst e = events[i];\n\t\t\t\n\t\t\t\t/**\n\t\t\t\t * run all matchers\n\t\t\t\t */\n\t\t\t\tfor (let m = 0; m < matcherLength; m++) {\n\t\t\t\t\tconst matcher = matchers[m];\n\t\t\t\n\t\t\t\t\t/**\n\t\t\t\t\t * Usually we want to match each task max once!\n\t\t\t\t\t * If we have a match, the corresponding\n\t\t\t\t\t * matched will be disabled\n\t\t\t\t\t */\n\t\t\t\t\tif (!matcher.disabled) {\n\t\t\t\t\t\tconst match = matcher.next(e, i);\n\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\tif ((match.partial && allowPartial) || !match.partial) {\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * Support strict matching\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tif (matcher.strict) {\n\t\t\t\t\t\t\t\t\tif (match.count == matcher.flow.length) {\n\t\t\t\t\t\t\t\t\t\tresult.push(match);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tresult.push(match);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * if we do not want to count if\n\t\t\t\t\t\t\t\t * a user manages a task more than one time.\n\t\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tif (!allowMultiMatch) {\n\t\t\t\t\t\t\t\t\tmatcher.disabled = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tPerformanceMonitor.end('Analytics.getTaskPerformance()')\n\t\treturn new DataFrame(result);\n\t}\n\n\tgetMergedTaskPerformance(df, tasks, annotations) {\n\t\tlet result = [];\n\t\tconst temp = this.getTaskPerformance(df, tasks);\n\n\n\t\t/**\n\t\t * build fast lookup\n\t\t */\n\t\ttemp.setIndex([\"session\", \"task\"])\n\n\t\t/**\n\t\t * first add all rows from the annotations.\n\t\t */\n\t\tconst l = annotations.length;\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tconst a = annotations[i];\n\t\t\tif (a.isValid) {\n\t\t\t\tconst session = a.reference;\n\t\t\t\tfor (let task in a.tasks) {\n\t\t\t\t\tconst value = a.tasks[task];\n\t\t\t\t\tconst row = temp.ix([session, task], true)\n\n\t\t\t\t\tif (value && !row) {\n\t\t\t\t\t\t//console.debug(session, task, \" add \", value);\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Add an artifical math\n\t\t\t\t\t\t * if there is now real match\n\t\t\t\t\t\t */\n\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\tstartTime: -1,\n\t\t\t\t\t\t\tdiscoveryTime: -1,\n\t\t\t\t\t\t\tendTime: -1,\n\t\t\t\t\t\t\tstartPosition: -1,\n\t\t\t\t\t\t\tendPosition: -1,\n\t\t\t\t\t\t\tduration: 0,\n\t\t\t\t\t\t\tcount: -1,\n\t\t\t\t\t\t\tpartial: false,\n\t\t\t\t\t\t\tsession: session,\n\t\t\t\t\t\t\ttask: task,\n\t\t\t\t\t\t\tuser: \"\" // FIXME: get later the user from this session\n\t\t\t\t\t\t})\n\n\t\t\t\t\t} else if (row && !value) {\n\t\t\t\t\t\t//console.debug(session, task, \" remove \", value);\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * else remove row\n\t\t\t\t\t\t */\n\t\t\t\t\t\tconst index = row.index;\n\t\t\t\t\t\ttemp.remove(index)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * merge both sets.\n\t\t */\n\t\tresult = temp.data.concat(result);\n\t\treturn new DataFrame(result);\n\t}\n\n\n\tgetFunnelSummary(df, task, annotation) {\n\t\t/**\n\t\t * We simply build for each subflow a new task\n\t\t */\n\n\t\tconst tasks = this.getFunnelTasks(task);\n\n\t\t/**\n\t\t * Now we run the normal task analytics\n\t\t */\n\t\tconst summary = this.getTaskSummary(df, tasks, annotation);\n\t\tconst sessionCount = df.count(\"session\").size();\n\n\t\tconst all = [{\n\t\t\tlabel: task.name + \"_all\",\n\t\t\tid: task.id + \"_all\",\n\t\t\tvalue: sessionCount,\n\t\t\tsessionCount: sessionCount,\n\t\t\tp: 1,\n\t\t\tflow: 0,\n\t\t}];\n\n\n\t\tconst result = all.concat(summary.reverse());\n\t\tfor (let i = 1; i < result.length; i++) {\n\t\t\tconst item = result[i];\n\t\t\titem.event = task.flow[i - 1];\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tgetFunnelTasks(task) {\n\t\tconst tasks = [];\n\t\tconst flow = lang.clone(task.flow);\n\t\twhile (flow.length > 0) {\n\t\t\tconst t = lang.clone(task);\n\t\t\tt.id = task.id + \"_\" + flow.length;\n\t\t\tt.name += task.name + \"_\" + flow.length;\n\t\t\tt.flow = lang.clone(flow);\n\t\t\ttasks.push(t);\n\t\t\tflow.pop();\n\t\t}\n\t\treturn tasks\n\t}\n\t\n\n\tgetTaskStarts (df, tasks) {\n\t\tconst startTasks = tasks.map(task => {\n\t\t\tconst t = lang.clone(task);\n\t\t\tt.id = task.id\n\t\t\tt.name = task.name\n\t\t\tt.flow = [task.flow[0]] // just take the start of the flow\n\t\t\treturn t\n\t\t})\n\t\tconst summary = this.getTaskPerformance(df, startTasks);\n\t\treturn summary\n\t}\n\n\n\tgetTaskSummary(df, tasks, annotation) {\n\n\t\tconst sessionCount = df.count(\"session\").size();\n\n\t\tconst tasksPerformance = this.getMergedTaskPerformance(df, tasks, annotation);\n\t\tconst taskGrouping = tasksPerformance.groupBy(\"task\");\n\t\n\t\tconst startTaskPerformace = this.getTaskStarts(df, tasks)\n\t\tconst startGrouping = startTaskPerformace.groupBy(\"task\")\n\t\n\t\tconst list = [];\n\t\tfor (let i = 0; i < tasks.length; i++) {\n\t\t\tconst task = tasks[i];\n\t\t\tlet taskDf = taskGrouping.get(task.id);\n\t\t\n\n\t\t\t/**\n\t\t\t * FIXME: This is a bug! The analytics.getMergedTaskPerformance(df, tasks, annotation );\n\t\t\t * should have also performance for this task!\n\t\t\t */\n\t\t\tif (taskDf) {\n\t\t\t\tconst taskCount = taskDf.size();\n\t\t\t\tconst startDf = startGrouping.get(task.id)\n\t\t\t\tlet startCount = startDf ? startDf.size() : sessionCount\n\t\t\t\n\t\t\t\t/**\n\t\t\t\t * for the time based stats we do not want manual\n\t\t\t\t * annotated tasks\n\t\t\t\t */\n\t\t\t\ttaskDf = taskDf.select(\"startTime\", \">\", 0);\n\n\n\t\t\t\tlist.push({\n\t\t\t\t\tlabel: task.name,\n\t\t\t\t\tid: task.id,\n\t\t\t\t\tvalue: taskCount,\n\t\t\t\t\tsessionCount: sessionCount,\n\t\t\t\t\tsessionStart: startCount / sessionCount,\n\t\t\t\t\tp: taskCount / startCount,\n\t\t\t\t\tsuccess: taskCount / startCount,\n\t\t\t\t\tsuccessRel: taskCount / startCount,\n\t\t\t\t\tsuccessAbs: taskCount,\n\t\t\t\t\tflow: task.flow.length,\n\t\t\t\t\tstartCount: startCount,\n\t\t\t\t\tstartRel: startCount / sessionCount,\n\n\t\t\t\t\tstartMean: taskDf.mean(\"startPosition\"),\n\t\t\t\t\tstartStd: taskDf.std(\"startPosition\"),\n\t\t\t\t\tdiscoveryTimeMean: taskDf.mean(\"discoveryTime\"),\n\t\t\t\t\tdiscoveryTimeStd: taskDf.std(\"discoveryTime\"),\n\t\t\t\t\tdurationMean: taskDf.mean(\"duration\"),\n\t\t\t\t\tdurationMedian: taskDf.median(\"duration\"),\n\t\t\t\t\tdurationStd: taskDf.std(\"duration\"),\n\t\t\t\t\tcountMean: taskDf.mean(\"count\"),\n\t\t\t\t\tcountStd: taskDf.std(\"count\"),\n\t\t\t\t\tinteractionsMean: taskDf.mean(\"interactions\"),\n\t\t\t\t\tinteractionsStd: taskDf.std(\"interactions\")\n\t\t\t\t});\n\t\t\t} else {\n\n\t\t\t\tlist.push({\n\t\t\t\t\tlabel: task.name,\n\t\t\t\t\tid: task.id,\n\t\t\t\t\tsessionCount: sessionCount,\n\t\t\t\t\tvalue: 0,\n\t\t\t\t\tp: 0,\n\t\t\t\t\tsuccess: 0,\n\t\t\t\t\tsuccessRel: 0,\n\t\t\t\t\tsuccessAbs: 0,\n\t\t\t\t\tflow: task.flow.length,\n\t\t\t\t\tstartAbs: 0,\n\t\t\t\t\tstartMean: 0,\n\t\t\t\t\tstartStd: 0,\n\t\t\t\t\tdiscoveryTimeMean: 0,\n\t\t\t\t\tdiscoveryTimeStd: 0,\n\t\t\t\t\tdurationMean: 0,\n\t\t\t\t\tdurationMedian: 0,\n\t\t\t\t\tdurationStd: 0,\n\t\t\t\t\tcountMean: 0,\n\t\t\t\t\tcountStd: 0,\n\t\t\t\t\tinteractionsMean: 0,\n\t\t\t\t\tinteractionsStd: 0\n\t\t\t\t});\n\t\t\t}\n\n\n\n\t\t}\n\t\treturn list;\n\t}\n\n\n\t/********************************************************************************************\n\t * Overlay Stuff\n\t *******************************************************************************************/\n\n\tgetOverlayTimeGrouping(df) {\n\n\t\t/**\n\t\t * Overlay times\n\t\t */\n\t\tvar sessionGrouping = df.groupBy(\"session\");\n\t\tvar screenTimes = {};\n\t\tsessionGrouping.foreach(function (session) {\n\t\t\tsession.sortBy(\"time\");\n\t\t\tvar startTimes = {};\n\t\t\tvar currentTime = -1;\n\t\t\tvar lastScreen = null;\n\t\t\tvar t = null;\n\n\t\t\tsession.foreach(function (row) {\n\t\t\t\tt = row[\"type\"];\n\t\t\t\tcurrentTime = row[\"time\"];\n\t\t\t\tvar screenID = row[\"overlay\"];\n\t\t\t\t/**\n\t\t\t\t * start counting when overlay is shown\n\t\t\t\t */\n\t\t\t\tif (t == \"OverlayLoaded\") {\n\t\t\t\t\tstartTimes[screenID] = currentTime;\n\t\t\t\t\tlastScreen = screenID;\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Stop when overlay is removed or other screen is loaded\n\t\t\t\t */\n\t\t\t\tif (t == \"OverlayRemoved\") {\n\t\t\t\t\tif (startTimes[screenID]) {\n\t\t\t\t\t\tif (!screenTimes[screenID]) {\n\t\t\t\t\t\t\tscreenTimes[screenID] = new DataFrame([]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar dif = currentTime - startTimes[screenID];\n\t\t\t\t\t\tscreenTimes[screenID].push(dif);\n\t\t\t\t\t}\n\t\t\t\t\tdelete startTimes[screenID];\n\t\t\t\t}\n\n\t\t\t\tif (t == \"ScreenLoaded\") {\n\t\t\t\t\tfor (let screenID in startTimes) {\n\t\t\t\t\t\tif (!screenTimes[screenID]) {\n\t\t\t\t\t\t\tscreenTimes[screenID] = new DataFrame([]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet dif = currentTime - startTimes[screenID];\n\t\t\t\t\t\tscreenTimes[screenID].push(dif);\n\t\t\t\t\t}\n\t\t\t\t\tstartTimes = {};\n\t\t\t\t}\n\n\t\t\t\t//|| t == \"ScreenLoaded\"\n\n\n\t\t\t});\n\n\t\t\tif (startTimes[lastScreen] && currentTime > 0 && t != \"OverlayLoaded\") {\n\t\t\t\tif (!screenTimes[lastScreen]) {\n\t\t\t\t\tscreenTimes[lastScreen] = new DataFrame([]);\n\t\t\t\t}\n\t\t\t\tvar dif = currentTime - startTimes[lastScreen];\n\t\t\t\tscreenTimes[lastScreen].push(dif);\n\t\t\t}\n\n\t\t});\n\n\t\treturn new Grouping(screenTimes, DataFrame);\n\t}\n\n\t/********************************************************************************************\n\t * Screen Stuff\n\t *******************************************************************************************/\n\n\tgetScreenTimeGrouping(df) {\n\n\t\t/**\n\t\t * Screen times\n\t\t */\n\t\tvar sessionGrouping = df.groupBy(\"session\");\n\t\tvar screenTimes = {};\n\t\tsessionGrouping.foreach(function (session) {\n\t\t\tsession.sortBy(\"time\");\n\t\t\tvar lastTime = -1;\n\t\t\tvar currentTime = -1;\n\t\t\tvar lastScreen = null;\n\t\t\tvar t = null;\n\t\t\tsession.foreach(function (row) {\n\t\t\t\tt = row[\"type\"];\n\t\t\t\tcurrentTime = row[\"time\"];\n\t\t\t\tvar screenID = row[\"screen\"];\n\t\t\t\tif (t == \"ScreenLoaded\") {\n\t\t\t\t\tif (lastTime > -1) {\n\t\t\t\t\t\tif (!screenTimes[lastScreen]) {\n\t\t\t\t\t\t\tscreenTimes[lastScreen] = new DataFrame([]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar dif = currentTime - lastTime;\n\t\t\t\t\t\tscreenTimes[lastScreen].push(dif);\n\t\t\t\t\t}\n\t\t\t\t\tlastTime = currentTime;\n\t\t\t\t\tlastScreen = screenID;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (lastTime > 0 && currentTime > 0 && t != \"ScreenLoaded\") {\n\t\t\t\tif (!screenTimes[lastScreen]) {\n\t\t\t\t\tscreenTimes[lastScreen] = new DataFrame([]);\n\t\t\t\t}\n\t\t\t\tvar dif = currentTime - lastTime;\n\t\t\t\tscreenTimes[lastScreen].push(dif);\n\t\t\t}\n\n\t\t});\n\n\t\treturn new Grouping(screenTimes, DataFrame);\n\t}\n\n\tgetScreenTime(df) {\n\n\t\t/**\n\t\t * Screen times\n\t\t */\n\t\tvar sessionGrouping = df.groupBy(\"session\");\n\t\tvar screenTimes = {};\n\t\tsessionGrouping.foreach(function (session) {\n\t\t\tsession.sortBy(\"time\");\n\t\t\tvar lastTime = -1;\n\t\t\tvar lastScreen = null;\n\t\t\tvar t = null;\n\t\t\tvar currentTime = -1;\n\t\t\tsession.foreach(function (row) {\n\t\t\t\tvar t = row[\"type\"];\n\t\t\t\tcurrentTime = row[\"time\"];\n\t\t\t\tvar screenID = row[\"screen\"];\n\t\t\t\tif (t == \"ScreenLoaded\") {\n\t\t\t\t\tif (lastTime > -1) {\n\t\t\t\t\t\tif (!screenTimes[lastScreen]) {\n\t\t\t\t\t\t\tscreenTimes[lastScreen] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar dif = currentTime - lastTime;\n\t\t\t\t\t\tscreenTimes[lastScreen] += dif;\n\t\t\t\t\t}\n\t\t\t\t\tlastTime = currentTime;\n\t\t\t\t\tlastScreen = screenID;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (lastTime > 0 && currentTime > 0 && t != \"ScreenLoaded\") {\n\t\t\t\tif (!screenTimes[lastScreen]) {\n\t\t\t\t\tscreenTimes[lastScreen] = 0;\n\t\t\t\t}\n\t\t\t\tvar dif = currentTime - lastTime;\n\t\t\t\tscreenTimes[lastScreen] += dif;\n\t\t\t}\n\t\t});\n\n\n\t\treturn new DataFrame(screenTimes);\n\t}\n\n\n\n\t/********************************************************************************************\n\t * Widget Stuff\n\t *******************************************************************************************/\n\n\t/**\n\t * Get merged \"report\" for all widgets relative to the entire application!!\n\t *\n\t */\n\tgetWidgetStatistics(app, df) {\n\n\t\tvar result = {};\n\n\n\t\t/**\n\t\t * Get all clicks for the widgets\n\t\t */\n\t\tvar widgetEvents = df.select(\"type\", \"==\", \"WidgetClick\");\n\t\t// var widgetGrouping = widgetEvents.groupBy(\"widget\");\n\t\tvar widgetCounts = widgetEvents.count(\"widget\");\n\n\n\t\t/**\n\t\t * FIXME: Should be in Screen or?\n\t\t */\n\t\tvar totalWidgetEvents = widgetCounts.sum();\n\n\n\t\tvar discoverTime = this.getWidgetDiscoverTime(df);\n\t\tvar meanDiscoverTime = discoverTime.mean();\n\t\tvar totalDicoverTime = meanDiscoverTime.max();\n\t\tvar discoverTimeSTD = discoverTime.std();\n\n\t\tvar widgetViewCount = discoverTime.size();\n\n\n\t\tvar widgetFirstClick = this.getWidgetFirstClick(df);\n\t\tvar totalFirstClicks = widgetFirstClick.sum();\n\n\t\tvar screenLoadEvents = df.select(\"type\", \"in\", [\"ScreenLoaded\", \"OverlayLoaded\"]);\n\t\tvar screenLoads = screenLoadEvents.count(\"screen\");\n\n\n\t\tfor (var widgetID in app.widgets) {\n\t\t\tvar parentScreenID = this._getParentScreenID(app, widgetID);\n\t\t\tresult[widgetID] = {\n\t\t\t\tclicksAbs: widgetCounts.get(widgetID, null, 0),\n\t\t\t\tclicksRel: widgetCounts.get(widgetID, null, 0) / totalWidgetEvents,\n\t\t\t\tdiscoverTimeAbs: meanDiscoverTime.get(widgetID, null, 0),\n\t\t\t\tdiscoverTimeRel: meanDiscoverTime.get(widgetID, null, 0) / totalDicoverTime,\n\t\t\t\tdiscoverTimeStd: discoverTimeSTD.get(widgetID, null, 0),\n\t\t\t\tviews: widgetViewCount.get(widgetID, null, 0),\n\t\t\t\tfirstClicksAbs: widgetFirstClick.get(widgetID, null, 0),\n\t\t\t\tfirstClicksRelApp: widgetFirstClick.get(widgetID, null, 0) / totalFirstClicks,\n\t\t\t\tfirstClicksRelScreen: widgetFirstClick.get(widgetID, null, 0) / screenLoads.get(parentScreenID, null, 0),\n\t\t\t};\n\n\t\t}\n\t\treturn result;\n\t}\n\n\n\t_getParentScreenID(model, widgetID) {\n\t\t/**\n\t\t * FIXME: This could be faster\n\t\t */\n\t\tfor (var id in model.screens) {\n\t\t\tvar screen = model.screens[id];\n\t\t\tvar i = screen.children.indexOf(widgetID);\n\t\t\tif (i > -1) {\n\t\t\t\treturn screen.id;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\n\n\t/**\n\t * Return a grouping containing the time needed\n\t * from a ScreenLoad until the widget was clicked\n\t */\n\tgetWidgetDiscoverTime(df) {\n\n\t\t/**\n\t\t * Scan each session\n\t\t */\n\t\tvar sessionGrouping = df.groupBy(\"session\");\n\t\tvar widgetGetOrder = {};\n\t\t// var widgetFirstClicks = {};\n\t\tsessionGrouping.foreach(function (session) {\n\t\t\t/**\n\t\t\t * sort by time\n\t\t\t */\n\t\t\tsession.sortBy(\"time\");\n\t\t\t// var t = null;\n\t\t\tvar loadTime = 0;\n\t\t\tvar widgetWasClicked = {};\n\t\t\t// var count = 0;\n\t\t\tsession.foreach(function (row) {\n\t\t\t\tvar type = row[\"type\"];\n\t\t\t\tvar widgetID = row[\"widget\"];\n\t\t\t\tvar time = row[\"time\"];\n\n\t\t\t\tif (type == \"ScreenLoaded\" || type == \"OverlayLoaded\") {\n\t\t\t\t\t/**\n\t\t\t\t\t * Screen load : set reference time and clear flag map\n\t\t\t\t\t * for seen widgets.\n\t\t\t\t\t */\n\t\t\t\t\tloadTime = time;\n\t\t\t\t\twidgetWasClicked = {};\n\t\t\t\t\t// count = 0;\n\n\t\t\t\t} else if (type == \"WidgetClick\" && widgetID) {\n\t\t\t\t\t/**\n\t\t\t\t\t *  We do not want to count widget clicks double... so we\n\t\t\t\t\t *  remember that we have seen the widget already in a\n\t\t\t\t\t *  screen session.\n\t\t\t\t\t */\n\t\t\t\t\tif (!widgetWasClicked[widgetID]) {\n\t\t\t\t\t\tif (!widgetGetOrder[widgetID]) {\n\t\t\t\t\t\t\twidgetGetOrder[widgetID] = new DataFrame([]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twidgetGetOrder[widgetID].push(time - loadTime);\n\t\t\t\t\t\twidgetWasClicked[widgetID] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\treturn new Grouping(widgetGetOrder);\n\t}\n\n\n\t/**\n\t * Return a grouping containing the time needed\n\t * from a ScreenLoad until the widget was clicked\n\t */\n\tgetWidgetFirstClick(df) {\n\n\t\t/**\n\t\t * Scan each session\n\t\t */\n\t\tvar sessionGrouping = df.groupBy(\"session\");\n\n\t\tvar widgetFirstClicks = {};\n\t\tsessionGrouping.foreach(function (session) {\n\t\t\t/**\n\t\t\t * sort by time\n\t\t\t */\n\t\t\tsession.sortBy(\"time\");\n\t\t\tvar count = 0;\n\t\t\tsession.foreach(function (row) {\n\t\t\t\tvar type = row[\"type\"];\n\t\t\t\tvar widgetID = row[\"widget\"];\n\t\t\t\t// var time = row[\"time\"];\n\n\t\t\t\tif (type == \"ScreenLoaded\" || type == \"OverlayLoaded\") {\n\t\t\t\t\tcount = 0;\n\t\t\t\t} else if (type == \"WidgetClick\" && widgetID) {\n\t\t\t\t\tif (count == 0) {\n\t\t\t\t\t\tif (!widgetFirstClicks[widgetID]) {\n\t\t\t\t\t\t\twidgetFirstClicks[widgetID] = 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twidgetFirstClicks[widgetID]++;\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t});\n\t\treturn new DataFrame(widgetFirstClicks);\n\n\t}\n\n\n\n\tgetWidgetDiscoverOrder(df) {\n\n\t\t/**\n\t\t * Scan each session\n\t\t */\n\t\tvar sessionGrouping = df.groupBy(\"session\");\n\t\tvar widgetGetOrder = {};\n\t\tsessionGrouping.foreach(function (session) {\n\t\t\t/**\n\t\t\t * sort by time\n\t\t\t */\n\t\t\tsession.sortBy(\"time\");\n\t\t\tvar t = null;\n\t\t\tvar count = 0;\n\t\t\tsession.foreach(function (row) {\n\t\t\t\tt = row[\"type\"];\n\t\t\t\tvar widgetID = row[\"widget\"];\n\t\t\t\tif (t == \"ScreenLoaded\" || t == \"OverlayLoaded\") {\n\t\t\t\t\tcount = 0;\n\t\t\t\t\t//console.debug(\" ----- \");\n\t\t\t\t}\n\t\t\t\tif (widgetID) {\n\t\t\t\t\tcount++;\n\t\t\t\t\t//console.debug(\" - \", widgetID, count);\n\t\t\t\t\tif (!widgetGetOrder[widgetID]) {\n\t\t\t\t\t\twidgetGetOrder[widgetID] = new DataFrame([]);\n\t\t\t\t\t}\n\t\t\t\t\twidgetGetOrder[widgetID].push(count);\n\t\t\t\t}\n\n\t\t\t});\n\n\n\t\t});\n\n\t\treturn new Grouping(widgetGetOrder, DataFrame);\n\n\t}\n\n}\n\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_m","_v","_s","label","_e","staticRenderFns","attrs","name","mixins","data","checked","props","components","methods","postCreate","getValue","setValue","css","setLabel","onChange","watch","value","mounted","component","hasObjects","updateLabel","maxLabelLength","openCSS","labelCSS","isOpen","toggleDropDown","setOptions","li","lbl","selectedValue","Ring","ProgressBar","eventLabels","WidgetClick","ScreenLoaded","ScreenClick","WidgetChange","ScreenScroll","OverlayLoaded","OverlayRemoved","ValidationError","ValidationErrorLine","ValidationOK","ScreenGesture","WidgetGesture","gestureLabels","swipeLeft","swipeRight","swipeUp","swipeDown","getIcons","fixGestures","events","device","event","error","console","_distributedPositions","getClones","xFactor","yFactor","offSets","x","y","box","id","w","h","z","group","cloneOff","result","previews","count","clones","_getGroupChildResizePosition","getObjectFromArray","getWidgetsByDistanceAndType","d","getObjectLength","getEventStateLabel","getGestureLabel","getEventLabel","getScreenName","getWidgetName","filterEvents","bad","temp","getActionEvents","PerformanceMonitor","getClickEvents","createEmptyImage","type","has","onclick","backgroundImage","border","actions","style","borderTopRightRadius","borderTopLeftRadius","borderBottomRightRadius","borderBottomLeftRadius","borderTopWidth","borderBottomWidth","borderRightWidth","borderLeftWidth","borderTopColor","borderBottomColor","borderRightColor","borderLeftColor","createEmptyScreen","background","min","image","start","children","getAppTypeIcon","getDomain","ring","size","color","getDB","progress","node","row","col","bar","bulletGraph","db","bulletGraphTable","table","tbody","build","createUserImage","parent","img","imgCntr","span","getCommentUserName","getUserLetter","getUserName","resizeSimulatorContainer","pos","container","renderCommentPopup","textarea","comment","cntr","txtarea","s","icon","callback","e","on","close","lang","getWidgets","getScreens","app","getClickableWidgets","getModelChildren","getWidgetsWithoutParent","getBoxById","copiedParentWidget","getToLines","getLines","_ids","hasLine","getLine","getFromBox","fromPos","getToBox","to","getTemplateGroupOrderChildren","getBoundingBox","getBoundingBoxByBoxes","getHoverScreen","_getHoverScreen","_isBoxChild","obj","_isContainedInBox","countProps","objectEquals","r","round","formatTime","millis","formatSTD","formatRound","formatNumber","formatPercent","cls","formatDate","formatString","getNormalizeWidgetZValues","list","lastZ","getMinZValue","l","getMaxZValue","max","getZValues","values","DataFrame","constructor","_isDataFrame","as_array","length","foreach","push","as_dict","key","arr","forEach","warn","select","column","operator","inLookup","Array","isArray","v","indexOf","columns","i","c","shape","isNaN","substring","get","defaultValue","undefined","hist","bins","p_min","p_max","Math","width","buckets","bucket","from","b","set","sortBy","desc","sort","a","add","minus","debu","mutliply","divide","median","floor","mean","sum","Number","MIN_VALUE","MAX_VALUE","variance","dif","std","sqrt","unique","uniqueValues","groupBy","Grouping","setIndex","keys","index","k","ix","includeIndex","remove","splice","print","header","me","_correctLength","debug","toCSV","roundTimestampToDate","timestamp","Date","setMinutes","setMilliseconds","getTime","merge","other","newData","concat","_vommondCurrentDialog","Dialog","Evented","getCurrentDialog","params","super","autoClose","wrapperClass","overflow","isFullScreen","hasCSSAnimation","log","Logger","destroy","info","cleanUpEvented","setFullScreen","hasFullScreen","fullScreenListener","popup","clazz","topic","publish","document","createElement","fullscreen","appendChild","own","touch","press","hitch","wrapper","content","win","body","subscribe","startPos","getStartPos","endPos","domGeom","position","backPos","top","height","left","ratioW","ratioH","transform","setTimeout","emitOpen","_dialogBackground","onOpen","_onOpenCallback","resize","stopScroll","target","stopEvent","onBackClick","shake","toggleFullScreen","hide","emit","removeChild","_foreach","df2","method","deep","j","entries","payloads","payload","end","logLevel","duration","anno","isValid","reference","session","getSurveyAnswers","test","options","showId","showTasksSucess","showTasksDuration","showTaskDetails","showTasksInteraction","ids","rows","cols","tasks","eventsDF","taskPer","taskPerDF","getTaskPerformance","task","widgetColumnNames","widgetTypes","widgetColums","Object","widgets","isSurveyElement","hidden","localeCompare","unshift","sessionGrouping","df","sessionID","taskRow","sessionEvents","user","widget","state","isObject","map","join","taskData","interactions","nornalizeContainerChildEvents","getFirstNClicks","numberOfClicks","filtered","firstNEvents","noheat","getPValueBionimial","getScreenExplorationRate","model","screenCount","screens","uniqueScreenPerSession","getSuccessTaskNames","tasksPerformance","names","sessionGroup","successTasks","taskID","getTagAnalytics","tags","tagCount","tagSessionCount","tagTime","annotation","sessions","sessionTags","tagCounted","t","tag","time","createMatcher","flow","strict","match","flowPos","step","endStep","startTime","taskName","usePartialMatches","init","next","_match","discoveryTime","endTime","startPosition","endPosition","partial","hits","getEndTime","reset","screen","gesture","aState","bState","matchFlowInSession","matcher","m","getFunnelInteraction","includeDropOff","addFunnelInteractionSteps","subtasks","getFunnelTasks","subTask","isDropOff","lastPos","hit","dropoff","getFunnelDuration","addFunnelDurartionSteps","lastTime","getFunnelMax","stepData","steps","getSessionSummary","screenLoads","uniqueScreens","clicks","date","ceil","screenUnique","screenRatio","errors","getSessionDetails","success","taskPerformance","perf","convertSessionDetails","allowMultiMatch","allowPartial","matchers","matcherLength","disabled","getMergedTaskPerformance","annotations","getFunnelSummary","summary","getTaskSummary","sessionCount","all","p","reverse","item","clone","pop","getTaskStarts","startTasks","taskGrouping","startTaskPerformace","startGrouping","taskDf","taskCount","startDf","startCount","sessionStart","successRel","successAbs","startRel","startMean","startStd","discoveryTimeMean","discoveryTimeStd","durationMean","durationMedian","durationStd","countMean","countStd","interactionsMean","interactionsStd","startAbs","getOverlayTimeGrouping","screenTimes","startTimes","currentTime","lastScreen","screenID","getScreenTimeGrouping","getScreenTime","getWidgetStatistics","widgetEvents","widgetCounts","totalWidgetEvents","discoverTime","getWidgetDiscoverTime","meanDiscoverTime","totalDicoverTime","discoverTimeSTD","widgetViewCount","widgetFirstClick","getWidgetFirstClick","totalFirstClicks","screenLoadEvents","widgetID","parentScreenID","_getParentScreenID","clicksAbs","clicksRel","discoverTimeAbs","discoverTimeRel","discoverTimeStd","views","firstClicksAbs","firstClicksRelApp","firstClicksRelScreen","widgetGetOrder","loadTime","widgetWasClicked","widgetFirstClicks","getWidgetDiscoverOrder"],"sourceRoot":""}